[
  {
    "objectID": "useful_packages.html",
    "href": "useful_packages.html",
    "title": "Useful packages",
    "section": "",
    "text": "Unlike R, Julia does not immediately expose a huge number of functions, but instead requires loading packages (whether from the standard library or from the broader package ecosystem) for a lot of relevant functionality for statistical analysis. There are technical reasons for this, such as the ease of using the Julia package system. One further motivation is that Julia is aimed at a broader ‚Äútechnical computing‚Äù audience (like MATLAB or perhaps Python) and less at a ‚Äústatistical analysis‚Äù audience.\nThis has two important implications:\nThis notebook is not intended to be an exhaustive list of packages, but rather to highlight a few packages that I suspect will be particularly useful. Before getting onto the packages, I have one final hint: take advantage of how easy and first-class package management in Julia is. Having good package management makes reproducible analyses much easier and avoids breaking old analyses when you start a new one. The package-manager REPL mode (activated by typing ] at the julia&gt; prompt) is very useful.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#reading-data",
    "href": "useful_packages.html#reading-data",
    "title": "Useful packages",
    "section": "1.1 Reading data",
    "text": "1.1 Reading data\n\nArrow.jl a high performance format for data storage, accessible in R via the arrow package and in Python via pyarrow. (Confusingly, the function for reading and writing Arrow format files in R is called read_feather and write_feather, but the modern Arrow format is distinct from the older Feather format provided by the feather package.) This is the format that we store the example and test datasets in for MixedModels.jl.\nCSV.jl useful for reading comma-separated values, tab-separated values and basically everything handled by the read.csv and read.table family of functions in R.\n\nNote that by default both Arrow.jl and CSV.jl do not return a DataFrame, but rather ‚Äúcolumn tables‚Äù ‚Äì named tuples of column vectors.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#dataframes",
    "href": "useful_packages.html#dataframes",
    "title": "Useful packages",
    "section": "1.2 DataFrames",
    "text": "1.2 DataFrames\nUnlike in R, DataFrames are not part of the base language, nor the standard library.\nDataFrames.jl provides the basic infrastructure around DataFrames, as well as its own mini language for doing the split-apply-combine approach that underlies R‚Äôs dplyr and much of the tidyverse. The DataFrames.jl documentation is the place for looking at how to e.g.¬†read in a CSV or Arrow file as a DataFrame. Note that DataFrames.jl by default depends on CategoricalArrays.jl to handle the equivalent of factor in the R world, but there is an alternative package for factor-like array type in Julia, PooledArrays.jl. PooledArrays are simpler, but more limited than CategoricalArrays and we (Phillip and Doug) sometimes use them in our examples and simulations. The tables produced by reading an Arrow file have their own representation of factor-like data as DictEncoded arrays.\nDataFrame.jl‚Äôs mini language can be a bit daunting, if you‚Äôre used to manipulations in the style of base R or the tidyverse. For that, there are several options; recently, we‚Äôe had particularly nice experiences with DataFrameMacros.jl and Chain.jl for a convenient syntax to connect or ‚Äúpipe‚Äù together successive operations. It‚Äôs your choice whether and which of these add-ons you want to use! Phillip tends to write his code using raw DataFrames.jl, but Doug really enjoys DataFrameMacros.jl.\nThe recently added Tidier collection of Julia packages is popular with those coming from the tidyverse.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#regression",
    "href": "useful_packages.html#regression",
    "title": "Useful packages",
    "section": "1.3 Regression",
    "text": "1.3 Regression\nUnlike in R, neither formula processing nor basic regression are part of the base language or the standard library.\nThe formula syntax and basic contrast-coding schemes in Julia is provided by StatsModels.jl. By default, MixedModels.jl re-exports the @formula macro and most commonly used contrast schemes from StatsModels.jl, so you often don‚Äôt have to worry about loading StatsModels.jl directly. The same is true for GLM.jl, which provides basic linear and generalized linear models, such as ordinary least squares (OLS) regression and logistic regression, i.e.¬†the classical, non mixed regression models.\nThe basic functionality looks quite similar to R, e.g.\njulia &gt; lm(@formula(y ~ 1 + x), data)\njulia &gt; glm(@formula(y ~ 1 + x), data, Binomial(), LogitLink())\nbut the more general modelling API (also used by MixedModels.jl) is also supported:\njulia &gt; fit(LinearModel, @formula(y ~ 1 + x), mydata)\njulia &gt; fit(\n  GeneralizedLinearModel,\n  @formula(y ~ 1 + x),\n  data,\n  Binomial(),\n  LogitLink(),\n)\n(You can also specify your model matrices directly and skip the formula interface, but we don‚Äôt recommend this as it‚Äôs easy to mess up in really subtle but very problematic ways.)",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#formula-macros-and-domain-specific-languages",
    "href": "useful_packages.html#formula-macros-and-domain-specific-languages",
    "title": "Useful packages",
    "section": "1.4 @formula, macros and domain-specific languages",
    "text": "1.4 @formula, macros and domain-specific languages\nAs a sidebar: why is @formula a macro and not a normal function? Well, that‚Äôs because formulas are essentially their own domain-specific language (a variant of Wilkinson-Rogers notation) and macros are used for manipulating the language itself ‚Äì or in this case, handling an entirely new, embedded language! This is also why macros are used by packages like Turing.jl and Soss.jl that define a language for Bayesian probabilistic programming like PyMC3 or Stan.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#extensions-to-the-formula-syntax",
    "href": "useful_packages.html#extensions-to-the-formula-syntax",
    "title": "Useful packages",
    "section": "1.5 Extensions to the formula syntax",
    "text": "1.5 Extensions to the formula syntax\nThere are several ongoing efforts to extend the formula syntax to include some of the ‚Äúextras‚Äù available in R, e.g.¬†RegressionFormulae.jl to use the caret (^) notation to limit interactions to a certain order ((a+b+c)^2 generates a + b + c + a&b + a&c + b&c, but not a&b&c). Note also that Julia uses & to express interactions, not : like in R.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#standardizing-predictors",
    "href": "useful_packages.html#standardizing-predictors",
    "title": "Useful packages",
    "section": "1.6 Standardizing Predictors",
    "text": "1.6 Standardizing Predictors\nAlthough function calls such as log can be used within Julia formulae, they must act on a rowwise basis, i.e.¬†on observations. Transformations such as z-scoring or centering (often done with scale in R) require knowledge of the entire column. StandardizedPredictors.jl provides functions for centering, scaling, and z-scoring within the formula. These are treated as pseudo-contrasts and computed on demand, meaning that predict and effects (see next) computations will handle these transformations on new data (e.g.¬†centering new data around the mean computed during fitting the original data) correctly and automatically.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#effects",
    "href": "useful_packages.html#effects",
    "title": "Useful packages",
    "section": "1.7 Effects",
    "text": "1.7 Effects\nJohn Fox‚Äôs effects package in R (and the related ggeffects package for plotting these using ggplot2) provides a nice way to visualize a model‚Äôs overall view of the data. This functionality is provided by Effects.jl and works out-of-the-box with most regression model packages in Julia (including MixedModels.jl). Support for formulae with embedded functions (such as log) is not yet complete, but we‚Äôre working on it!",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#estimated-marginal-least-square-means",
    "href": "useful_packages.html#estimated-marginal-least-square-means",
    "title": "Useful packages",
    "section": "1.8 Estimated Marginal / Least Square Means",
    "text": "1.8 Estimated Marginal / Least Square Means\nEffects.jl provides a subset of the functionality (basic estimated-marginal means and exhaustive pairwise comparisons) of the R package emmeans package. However, it is often better to use sensible, hypothesis-driven contrast coding than to compute all pairwise comparisons after the fact. üòÉ",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#makie",
    "href": "useful_packages.html#makie",
    "title": "Useful packages",
    "section": "3.1 Makie",
    "text": "3.1 Makie\nThe Makie ecosystem is a relatively new take on graphics that aims to be both powerful and easy to use. Makie.jl itself only provides abstract definitions for many components (and is used in e.g.¬†MixedModelsMakie.jl to define plot types for MixedModels.jl). The actual plotting and rendering is handled by a backend package such as CairoMakie.jl (good for Quarto notebooks or rending static 2D images) and GLMakie.jl (good for dynamic, interactive visuals and 3D images). AlgebraOfGraphics.jl builds a grammar of graphics upon the Makie framework. It‚Äôs a great way to get good plots very quickly, but extensive customization is still best achieved by using Makie directly.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#plots.jl",
    "href": "useful_packages.html#plots.jl",
    "title": "Useful packages",
    "section": "3.2 Plots.jl",
    "text": "3.2 Plots.jl\nPlots.jl is the original plotting package in Julia, but we often find it difficult to work with compared to some of the other alternatives. StatsPlots.jl builds on this, adding common statistical plots, while UnicodePlots.jl renders plots as Unicode characters directly in the REPL.\nPGFPlotsX.jl is a very new package that writes directly to PGF (the format used by LaTeX‚Äôs tikz framework) and can stand alone or be used as a rendering backend for the Plots.jl ecosystem.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#gadfly",
    "href": "useful_packages.html#gadfly",
    "title": "Useful packages",
    "section": "3.3 Gadfly",
    "text": "3.3 Gadfly\nGadfly.jl was the original attempt to create a plotting system in Julia based on the grammar of graphics (the ‚Äúgg‚Äù in ggplot2). Development has largely stalled, but some functionality still exceeds AlgebraOfGraphics.jl, which has taken up the grammar of graphics mantle. Notably, the MixedModels.jl documentation still uses Gadfly as of this writing (early September 2021).",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "useful_packages.html#others",
    "href": "useful_packages.html#others",
    "title": "Useful packages",
    "section": "3.4 Others",
    "text": "3.4 Others\nThere are many other graphics packages available in Julia, often wrapping well-established frameworks such as VegaLite.",
    "crumbs": [
      "Getting started with Julia",
      "Useful packages"
    ]
  },
  {
    "objectID": "sleepstudy_speed.html",
    "href": "sleepstudy_speed.html",
    "title": "The sleepstudy: Speed - for a change ‚Ä¶",
    "section": "",
    "text": "Belenky et al. (2003) reported effects of sleep deprivation across a 14-day study of 30-to-40-year old men and women holding commercial vehicle driving licenses. Their analyses are based on a subset of tasks and ratings from very large and comprehensive test and questionnaire battery (Balkin et al., 2000).\nInitially 66 subjects were assigned to one of four time-in-bed (TIB) groups with 9 hours (22:00-07:00) of sleep augmentation or 7 hours (24:00-07:00), 5 hours (02:00-07:00), and 3 hours (04:00-0:00) of sleep restrictions per night, respectively. The final sample comprised 56 subjects. The Psychomotor Vigilance Test (PVT) measures simple reaction time to a visual stimulus, presented approximately 10 times ‚ÅÑ minute (interstimulus interval varied from 2 to 10 s in 2-s increments) for 10 min and implemented in a thumb-operated, hand-held device (Dinges & Powell, 1985).\n\n\nThe study comprised 2 training days (T1, T2), one day with baseline measures (B), seven days with sleep deprivation (E1 to E7), and four recovery days (R1 to R4). T1 and T2 were devoted to training on the performance tests and familiarization with study procedures. PVT baseline testing commenced on the morning of the third day (B) and testing continued for the duration of the study (E1‚ÄìE7, R1‚ÄìR3; no measures were taken on R4). Bed times during T, B, and R days were 8 hours (23:00-07:00).\n\n\n\nThe PVT (along with the Stanford Sleepiness Scale) was administered as a battery four times per day (09:00, 12:00, 15:00, and 21:00 h); the battery included other tests not reported here (see Balkin et al., 2000). The sleep latency test was administered at 09:40 and 15:30 h for all groups. Subjects in the 3- and 5-h TIB groups performed an additional battery at 00:00 h and 02:00 h to occupy their additional time awake. The PVT and SSS were administered in this battery; however, as data from the 00:00 and 02:00 h sessions were not common to all TIB groups, these data were not included in the statistical analyses reported in the paper.\n\n\n\nThe authors analyzed response speed, that is (1/RT)*1000 ‚Äì completely warranted according to a Box-Cox check of the current data ‚Äì with mixed-model ANOVAs using group as between- and day as within-subject factors. The ANOVA was followed up with simple tests of the design effects implemented over days for each of the four groups.\n\n\n\nThe current data distributed with the RData collection is attributed to the 3-hour TIB group, but the means do not agree at all with those reported for this group in (Belenky et al., 2003, fig. 3) where the 3-hour TIB group is also based on only 13 (not 18) subjects. Specifically, the current data show a much smaller slow-down of response speed across E1 to E7 and do not reflect the recovery during R1 to R3. The current data also cover only 10 not 11 days, but it looks like only R3 is missing. The closest match of the current means was with the average of the 3-hour and 7-hour TIB groups; if only males were included, this would amount to 18 subjects. (This conjecture is based only on visual inspection of graphs.)",
    "crumbs": [
      "Worked examples",
      "The sleepstudy: Speed - for a change ..."
    ]
  },
  {
    "objectID": "sleepstudy_speed.html#design",
    "href": "sleepstudy_speed.html#design",
    "title": "The sleepstudy: Speed - for a change ‚Ä¶",
    "section": "",
    "text": "The study comprised 2 training days (T1, T2), one day with baseline measures (B), seven days with sleep deprivation (E1 to E7), and four recovery days (R1 to R4). T1 and T2 were devoted to training on the performance tests and familiarization with study procedures. PVT baseline testing commenced on the morning of the third day (B) and testing continued for the duration of the study (E1‚ÄìE7, R1‚ÄìR3; no measures were taken on R4). Bed times during T, B, and R days were 8 hours (23:00-07:00).",
    "crumbs": [
      "Worked examples",
      "The sleepstudy: Speed - for a change ..."
    ]
  },
  {
    "objectID": "sleepstudy_speed.html#test-schedule-within-days",
    "href": "sleepstudy_speed.html#test-schedule-within-days",
    "title": "The sleepstudy: Speed - for a change ‚Ä¶",
    "section": "",
    "text": "The PVT (along with the Stanford Sleepiness Scale) was administered as a battery four times per day (09:00, 12:00, 15:00, and 21:00 h); the battery included other tests not reported here (see Balkin et al., 2000). The sleep latency test was administered at 09:40 and 15:30 h for all groups. Subjects in the 3- and 5-h TIB groups performed an additional battery at 00:00 h and 02:00 h to occupy their additional time awake. The PVT and SSS were administered in this battery; however, as data from the 00:00 and 02:00 h sessions were not common to all TIB groups, these data were not included in the statistical analyses reported in the paper.",
    "crumbs": [
      "Worked examples",
      "The sleepstudy: Speed - for a change ..."
    ]
  },
  {
    "objectID": "sleepstudy_speed.html#statistical-analyses",
    "href": "sleepstudy_speed.html#statistical-analyses",
    "title": "The sleepstudy: Speed - for a change ‚Ä¶",
    "section": "",
    "text": "The authors analyzed response speed, that is (1/RT)*1000 ‚Äì completely warranted according to a Box-Cox check of the current data ‚Äì with mixed-model ANOVAs using group as between- and day as within-subject factors. The ANOVA was followed up with simple tests of the design effects implemented over days for each of the four groups.",
    "crumbs": [
      "Worked examples",
      "The sleepstudy: Speed - for a change ..."
    ]
  },
  {
    "objectID": "sleepstudy_speed.html#current-data",
    "href": "sleepstudy_speed.html#current-data",
    "title": "The sleepstudy: Speed - for a change ‚Ä¶",
    "section": "",
    "text": "The current data distributed with the RData collection is attributed to the 3-hour TIB group, but the means do not agree at all with those reported for this group in (Belenky et al., 2003, fig. 3) where the 3-hour TIB group is also based on only 13 (not 18) subjects. Specifically, the current data show a much smaller slow-down of response speed across E1 to E7 and do not reflect the recovery during R1 to R3. The current data also cover only 10 not 11 days, but it looks like only R3 is missing. The closest match of the current means was with the average of the 3-hour and 7-hour TIB groups; if only males were included, this would amount to 18 subjects. (This conjecture is based only on visual inspection of graphs.)",
    "crumbs": [
      "Worked examples",
      "The sleepstudy: Speed - for a change ..."
    ]
  },
  {
    "objectID": "sleepstudy_speed.html#within-subject-simple-regressions",
    "href": "sleepstudy_speed.html#within-subject-simple-regressions",
    "title": "The sleepstudy: Speed - for a change ‚Ä¶",
    "section": "5.1 Within-subject simple regressions",
    "text": "5.1 Within-subject simple regressions\nApplying combine to a grouped data frame like gdf produces a DataFrame with a row for each group. The permutation ord provides an ordering for the groups by increasing intercept (predicted response at day 0).\n\nwithin = combine(gdf, [:day, :speed] =&gt; simplelinreg =&gt; :coef)\n\n18√ó2 DataFrame\n\n\n\nRow\nSubj\ncoef\n\n\n\nString\nTuple‚Ä¶\n\n\n\n\n1\nS308\n(3.94806, -0.194812)\n\n\n2\nS309\n(4.87022, -0.0475185)\n\n\n3\nS310\n(4.90606, -0.120054)\n\n\n4\nS330\n(3.4449, -0.0291309)\n\n\n5\nS331\n(3.47647, -0.0498047)\n\n\n6\nS332\n(3.84436, -0.105511)\n\n\n7\nS333\n(3.60159, -0.0917378)\n\n\n8\nS334\n(4.04528, -0.133527)\n\n\n9\nS335\n(3.80451, 0.0455771)\n\n\n10\nS337\n(3.34374, -0.137744)\n\n\n11\nS349\n(4.46855, -0.170885)\n\n\n12\nS350\n(4.21414, -0.20151)\n\n\n13\nS351\n(3.80469, -0.0728582)\n\n\n14\nS352\n(3.68634, -0.144957)\n\n\n15\nS369\n(3.85384, -0.120531)\n\n\n16\nS370\n(4.52679, -0.215965)\n\n\n17\nS371\n(3.853, -0.0936243)\n\n\n18\nS372\n(3.69208, -0.113292)\n\n\n\n\n\n\nFigure¬†1 shows the reaction speed versus days of sleep deprivation by subject. The panels are arranged by increasing initial reaction speed starting at the lower left and proceeding across rows.\n\n\nCode\nlet\n  ord = sortperm(first.(within.coef))\n  labs = values(only.(keys(gdf)))[ord]       # labels for panels\n  f = clevelandaxes!(Figure(; resolution=(1000, 750)), labs, (2, 9))\n  for (axs, sdf) in zip(f.content, gdf[ord]) # iterate over the panels and groups\n    scatter!(axs, sdf.day, sdf.speed)      # add the points\n    coef = simplelinreg(sdf.day, sdf.speed)\n    abline!(axs, first(coef), last(coef))  # add the regression line\n  end\n  f\nend\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n‚îå Warning: abline! is deprecated and will be removed in the future. Use ablines / ablines! instead.\n‚îÇ   caller = top-level scope at sleepstudy_speed.qmd:102\n‚îî @ Core ~/Work/SMLP2025/sleepstudy_speed.qmd:102\n\n\n\n\n\n\n\n\n\nFigure¬†1: Reaction speed (s‚Åª¬π) versus days of sleep deprivation by subject",
    "crumbs": [
      "Worked examples",
      "The sleepstudy: Speed - for a change ..."
    ]
  },
  {
    "objectID": "singularity.html",
    "href": "singularity.html",
    "title": "Convergence, singularity and all that",
    "section": "",
    "text": "Add the packages to be used\n\n\nCode\nusing CairoMakie\nusing DataFrames\nusing LinearAlgebra\nusing MixedModels\nusing MixedModelsMakie\n\nconst progress=false\n\n\nFit a model for reaction time in the sleepstudy example, preserving information on the estimation progress (the thin=1 optional argument)\n\nm01 = let f = @formula reaction ~ 1 + days + (1 + days|subj)\n  fit(MixedModel, f, MixedModels.dataset(:sleepstudy); thin=1, progress)\nend\nprint(m01)\n\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC       AICc        BIC    \n  -875.9697  1751.9393  1763.9393  1764.4249  1783.0971\n\nVariance components:\n            Column    Variance Std.Dev.   Corr.\nsubj     (Intercept)  565.51065 23.78047\n         days          32.68212  5.71683 +0.08\nResidual              654.94145 25.59182\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n                Coef.  Std. Error      z  Pr(&gt;|z|)\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n(Intercept)  251.405      6.63226  37.91    &lt;1e-99\ndays          10.4673     1.50224   6.97    &lt;1e-11\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n\nThe covariance matrix for each subject‚Äôs random effects is evaluated from its ‚Äúmatrix square root‚Äù, called the Cholesky factor.\n\nŒª = only(m01.Œª)\n\n2√ó2 LowerTriangular{Float64, Matrix{Float64}}:\n 0.929221    ‚ãÖ \n 0.0181684  0.222645\n\n\nThe transpose of \\(\\lambda\\), written \\(\\lambda'\\), is an upper triangular matrix generated by ‚Äúflipping‚Äù \\(\\lambda\\) about the main diagonal.\n\nŒª'\n\n2√ó2 UpperTriangular{Float64, Adjoint{Float64, Matrix{Float64}}}:\n 0.929221  0.0181684\n  ‚ãÖ        0.222645\n\n\nThe product \\(\\lambda * \\lambda'\\) will be symmetric. The covariance matrix of the random effects, \\(\\Sigma\\), is this symmetric matrix scaled by \\(\\sigma^2\\)\n\nŒ£ = m01.œÉ^2 * Œª * Œª'\n\n2√ó2 Matrix{Float64}:\n 565.511  11.057\n  11.057  32.6821\n\n\nThe estimated variances of the random effects, which are the diagonal elements of \\(\\Sigma\\), correspond to the values shown in the table. To evaluate the covariance, isolate the correlation\n\n# m01.œÉœÅs extracts the `œÉœÅs` property of the model.\n# This property is a NamedTuple where the names\n# correspond to grouping factors - in this case, `subj`.\n# So `m01.œÉœÅs.subj.œÅ` is the estimated correlation(s) for\n# this grouping factor.  Because there is only one such correlation\n# we can extract it with `only()`, which also verifies that\n# there is exactly one.\nœÅ = only(m01.œÉœÅs.subj.œÅ)\n\n0.08133207057637286\n\n\nand multiply by the standard deviations\n\nœÅ * sqrt(first(Œ£) * last(Œ£))\n\n11.057001356158839",
    "crumbs": [
      "Visualizations and diagnostics",
      "Convergence, singularity and all that"
    ]
  },
  {
    "objectID": "singularity.html#evaluating-the-random-effects-correlation-from-theta",
    "href": "singularity.html#evaluating-the-random-effects-correlation-from-theta",
    "title": "Convergence, singularity and all that",
    "section": "5.1 Evaluating the random effects correlation from \\(\\theta\\)",
    "text": "5.1 Evaluating the random effects correlation from \\(\\theta\\)\nThere is a short-cut for evaluating the correlation which is to ‚Äúnormalize‚Äù the second row of \\(\\lambda\\), in the sense that the row is scaled so that it has unit length.\n\nnormed = normalize!(Œª[2, :])\n\n2-element Vector{Float64}:\n 0.08133207057637286\n 0.996687059360038\n\n\nproviding the correlation as\n\nfirst(normed)\n\n0.08133207057637286",
    "crumbs": [
      "Visualizations and diagnostics",
      "Convergence, singularity and all that"
    ]
  },
  {
    "objectID": "singularity.html#optimizing-with-a-fixed-correlation",
    "href": "singularity.html#optimizing-with-a-fixed-correlation",
    "title": "Convergence, singularity and all that",
    "section": "5.2 Optimizing with a fixed correlation",
    "text": "5.2 Optimizing with a fixed correlation\nTo profile the correlation we need optimize the objective while fixing a value of the correlation. The way we will do this is to determine \\(\\theta_2\\) as a function of the fixed \\(\\rho\\) and \\(\\theta_3\\).\nWe need to solve \\[\n\\rho = \\frac{\\theta_2}{\\sqrt{\\theta_2^2 + \\theta_3^2}}\n\\]\nfor \\(\\theta_2\\) as a function of \\(\\rho\\) and \\(\\theta_3\\).\nNotice that \\(\\theta_2\\) and \\(\\rho\\) have the same sign. Thus it is sufficient to determine the absolute value of \\(\\theta_2\\) then transfer the sign from \\(\\rho\\). \\[\n\\theta_2^2=\\rho^2(\\theta_2^2 + \\theta_3^2)\n\\] which implies \\[\n\\theta_2^2 = \\frac{\\rho^2}{1-\\rho^2}\\theta_3^2, \\quad \\theta_3\\ge 0\n\\] and thus \\[\n\\theta_2=\\frac{\\rho}{\\sqrt{1-\\rho^2}}\\theta_3\n\\]\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.",
    "crumbs": [
      "Visualizations and diagnostics",
      "Convergence, singularity and all that"
    ]
  },
  {
    "objectID": "selection.html",
    "href": "selection.html",
    "title": "SMLP2025: Advanced Frequentist Track",
    "section": "",
    "text": "Code\nusing Arrow\nusing CairoMakie\nusing DataFrames\ntbl = Arrow.Table(\"./data/fggk21.arrow\")\n\nArrow.Table with 525126 rows, 7 columns, and schema:\n :Cohort  String\n :School  String\n :Child   String\n :Sex     String\n :age     Float64\n :Test    String\n :score   Float64\ndf = DataFrame(tbl)\ndescribe(df)\n\n7√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nCohort\n\n2011\n\n2019\n0\nString\n\n\n2\nSchool\n\nS100043\n\nS800200\n0\nString\n\n\n3\nChild\n\nC002352\n\nC117966\n0\nString\n\n\n4\nSex\n\nfemale\n\nmale\n0\nString\n\n\n5\nage\n8.56073\n7.99452\n8.55852\n9.10609\n0\nFloat64\n\n\n6\nTest\n\nBPT\n\nStar_r\n0\nString\n\n\n7\nscore\n226.141\n1.14152\n4.65116\n1530.0\n0\nFloat64"
  },
  {
    "objectID": "selection.html#raw-score-density",
    "href": "selection.html#raw-score-density",
    "title": "SMLP2025: Advanced Frequentist Track",
    "section": "1 Raw score density",
    "text": "1 Raw score density\n\nlet\n  fdensity = Figure(; resolution=(1000, 500))\n  axs = Axis(fdensity[1, 1])\n  tdf = filter(:Test =&gt; ==(test), df)\n  colors = Makie.cgrad(:PuOr_4, 2; categorical=true, alpha=0.6)\n  if by_sex\n    density!(\n      axs,\n      filter(:Sex =&gt; ==(\"female\"), tdf).score;\n      color=colors[1],\n      label=\"Girls\",\n    )\n    density!(\n      axs,\n      filter(:Sex =&gt; ==(\"male\"), tdf).score;\n      color=colors[2],\n      label=\"Boys\",\n    )\n    axislegend(axs; position=:lt)\n  else\n    density!(axs, tdf.score)\n  end\n  fdensity\nend\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29."
  },
  {
    "objectID": "pkg.html",
    "href": "pkg.html",
    "title": "Package management and reproducible environments",
    "section": "",
    "text": "Julius Krumbiegel also has a great blog post with more details on Julia environments.\nJulia packages can be configured (in a file called Project.toml) on a per-project basis. The packaged sources and compiled versions are stored in a central location, e.g.¬†~/.julia/packages and ~/.julia/compiled on Linux systems, but the configuration of packages to be used can be local to a project. The Pkg package is used to modify the local project‚Äôs configuration. (An alternative is ‚Äúpackage mode‚Äù in the read-eval-print-loop or REPL, which we will show at the summer school.) Start julia in the directory of the cloned SMLP2025 repository\n\nusing Pkg        # there's a package called 'Pkg' to manipulate package configs\nPkg.activate(\".\")# activate the current directory as the project\n\nIf you‚Äôve received an environment from someone/somewhere else ‚Äì such as this course repository ‚Äì then you‚Äôll need to first ‚Äúinstantiate‚Äù it (i.e., install all the dependencies).\n\nPkg.instantiate()# only needed the first time you work in a project\nPkg.update()     # get the latest package versions compatible with the project\n\n\nPkg.status()\n\nOccasionally the Pkg.status function call will give info about new versions being available but blocked by requirements of other packages. This is to be expected - the package system is large and the web of dependencies are complex. Generally the Julia package system is very good at resolving dependencies.\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.\n\n\n\n Back to top",
    "crumbs": [
      "Getting started with Julia",
      "Package management and reproducible environments"
    ]
  },
  {
    "objectID": "mrk17.html",
    "href": "mrk17.html",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "",
    "text": "Packages we (might) use.\n\nusing DataFrames\nusing MixedModels\nusing MixedModelsMakie\nusing SMLP2025: dataset\nusing Statistics: mean, std\n\nconst progress=false\n\nfalse\n\n\n\ndat = DataFrame(dataset(:mrk17_exp1))\ndescribe(dat)\n\n9√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nsubj\n\nS01\n\nS73\n0\nString\n\n\n2\nitem\n\nACHE\n\nYEAR\n0\nString\n\n\n3\ntrial\n239.958\n2\n239.0\n480\n0\nInt16\n\n\n4\nF\n\nHF\n\nLF\n0\nString\n\n\n5\nP\n\nrel\n\nunr\n0\nString\n\n\n6\nQ\n\nclr\n\ndeg\n0\nString\n\n\n7\nlQ\n\nclr\n\ndeg\n0\nString\n\n\n8\nlT\n\nNW\n\nWD\n0\nString\n\n\n9\nrt\n647.173\n301\n601.0\n2994\n0\nInt16",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#response-covariates-and-factors",
    "href": "mrk17.html#response-covariates-and-factors",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.1 Response, covariates, and factors",
    "text": "2.1 Response, covariates, and factors\nLinear mixed models (LMMs), like many other types of statistical models, describe a relationship between a response variable and covariates that have been measured or observed along with the response. The statistical model assumes that the residuals of the fitted response (i.e., not the responses) are normally ‚Äì also identically and independently ‚Äì distributed. This is the first assumption of normality in the LMM. It is standard practice that model residuals are inspected and, if serious skew is indicated, that the response is Box-Cox transformed (unless not justified for theoretical reasons) to fulfill this model assumption.\nIn the following we distinguish between categorical covariates and numerical covariates. Categorical covariates are factors. The important characteristic of a factor is that, for each observed value of the response, the factor takes on the value of one of a set of discrete levels. The levels can be unordered (nominal) or ordered (ordinal). We use the term covariate when we refer to numerical covariates, that is to continuous measures with some distribution. In principle, statistical models are not constrained by the distribution of observations across levels of factors and covariates, but the distribution may lead to problems of model identification and it does implications for statistical power.\nStatistical power, especially for the detection of interactions, is best when observations are uniformly distributed across levels of factors or uniform across the values of covariates. In experimental designs, uniform distributions may be achieved by balanced assignment of subjects (or other carriers of responses) to the levels of factors or combinations of factor levels. In observational contexts, we achieve uniform distributions by stratification (e..g., on age, gender, or IQ scores). Statistical power is worse for skewed than normal distributions (I think ‚Ä¶). Therefore, although it is not required to meet an assumption of the statistical model, it may be useful to consider Box-Cox transformations of covariates.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#nested-and-crossed-random-grouping-factors",
    "href": "mrk17.html#nested-and-crossed-random-grouping-factors",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.2 Nested and crossed random (grouping) factors",
    "text": "2.2 Nested and crossed random (grouping) factors\nIn LMMs the levels of at least one of the factors represents units in the data set that are assumed to be sampled, ideally randomly, from a population that is normally distributed with respect to the response. This is the second assumption of normal distribution in LMMs. In psychology and linguistics the observational units are often the subjects or items (e..g., texts, sentences, words, pictures) in the study. We may use numbers, such as subject identifiers, to designate the particular levels that we observed; we recommend to prepend these numbers with ‚ÄúS‚Äù or ‚ÄúI‚Äù to avoid confusion with numeric variables.\nRandom sampling is the basis of generalization from the sample to the population. The core statistics we will estimate in this context are variances and correlations of grand means and (quasi-)experimental effects. These terms will be explained below. What we want to stress here is that the estimation of (co-)variances / correlations requires a larger number of units (levels) than the estimation of means. Therefore, from a practical perspective, it is important that random factors are represented with many units.\nWhen there is more than one random factor, we must be clear about their relation. The two prototypical cases are that the factors are nested or crossed. In multilevel models, a special case of mixed models, the levels of the random factors are strictly nested. For example, at a given time, every student attends a specific class in a specific school. Students, classes, and schools could be three random factors. As soon as we look at this scenario across several school years, the nesting quickly falls apart because students may move between classes and between schools.\nIn psychology and linguistics, random factors are often crossed, for example, when every subject reads every word in every sentence in a word-by-word self-paced reading experiment (or alternatively: when every word in every sentence elicits a response from every subject). However, in an eye-movement experiment (for example), the perfect crossing on a measure like fixation duration is not attainable because of blinks or skipping of words.\nIn summary, the typical situation in experimental and observational studies with more than one random factor is partial crossing or partial nesting of levels of the random factors. Linear mixed models handle these situations very well.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#experimental-and-quasi-experimental-fixed-factors-covariates",
    "href": "mrk17.html#experimental-and-quasi-experimental-fixed-factors-covariates",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.3 Experimental and quasi-experimental fixed factors / covariates",
    "text": "2.3 Experimental and quasi-experimental fixed factors / covariates\nFixed experimental factor or covariate. In experiments the units (or levels) of the random factor(s) are assigned to manipulations implemented in their design. The researcher controls the assignment of units of the random factor(s) (e.g., subjects, items) to experimental manipulations. These manipulations are represented as factors with a fixed and discrete set of levels (e.g., training vs.¬†control group) or as covariates associated with continuous numeric values (e.g., presentation times).\nFixed quasi-experimental factor or covariate. In observational studies (which can also be experiments) the units (or levels) of random factors may ‚Äúbring along‚Äù characteristics that represent the levels of quasi-experimental factors or covariates beyond the control of the researcher. Whether a a subject is female, male, or diverse or whether a word is a noun, a verb, or an adjective are examples of quasi-experimental factors of gender or word type, respectively. Subject-related covariates are body height, body mass, and IQ scores; word-related covariates are their lengths, frequency, and cloze predictability.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#between-unit-and-within-unit-factors-covariates",
    "href": "mrk17.html#between-unit-and-within-unit-factors-covariates",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.4 Between-unit and within-unit factors / covariates",
    "text": "2.4 Between-unit and within-unit factors / covariates\nThe distinction between between-unit and within-unit factors is always relative to a random (grouping) factor of an experimental design. A between-unit factor / covariate is a factor for which every unit of the random factor is assigned to or characterized by only one level of the factor. A within-unit factor is a factor for which units of the random factor appear at every level of the factor.\nFor the typical random factor, say Subject, there is little ambiguity because we are used to the between-within distinction from ANOVAs, more specifically the F1-ANOVA. In psycholinguistics, there is the tradition to test effects also for the second random factor Item in an F2-ANOVA. Importantly, for a given fixed factor all four combinations are possible. For example, Gender is a fixed quasi-experimental between-subject / within-item factor; word frequency is a fixed quasi-experimental within-subject / between-item covariate; Prime-target relation is a fixed experimental within-subject / within-item factor (assuming that targets are presented both in a primed and in an unprimed situation); and when a training manipulation is defined by the items used in the training, then in a training-control group design, the fixed factor Group is a fixed experimental between-subject / between-item factor.\nThese distinctions are critical for setting up LMMs because variance components for (quasi-)experimental effects can only be specified for within-unit effects. Note also that loss of data (within limits), counterbalancing or blocking of items are irrelevant for these definitions.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#factor-based-contrasts-and-covariate-based-trends",
    "href": "mrk17.html#factor-based-contrasts-and-covariate-based-trends",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.5 Factor-based contrasts and covariate-based trends",
    "text": "2.5 Factor-based contrasts and covariate-based trends\nThe simplest fixed factor has two levels and the model estimates the difference between them. When we move to factors with k levels, we must decide on how we spend the k-1 degrees of freedom, that is we must specify a set of contrasts. (If we don‚Äôt do it, the program chooses DummyCoding contrasts for us.)\nThe simplest specification of a covariate is to include its linear trend, that is its slope. The slope (like a contrast) represents a difference score, that is the change in response to a one-unit change on the covariate. For covariates we must decide on the order of the trend we want to model.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#contrast--and-trend-based-fixed-effect-model-parameters",
    "href": "mrk17.html#contrast--and-trend-based-fixed-effect-model-parameters",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.6 Contrast- and trend-based fixed-effect model parameters",
    "text": "2.6 Contrast- and trend-based fixed-effect model parameters\nFixed factors and covariates are expected to have effects on the response. Fixed-effect model parameters estimate the hypothesized main and interaction effects of the study. The estimates of factors are based on contrasts; the estimates of covariates are based on trends. Conceptually, they correspond to unstandardized regression coefficients in multiple regression.\nThe intercept is a special regression coefficient; it estimates the value of the dependent variable when all fixed effects associated with factors and trends associated with covariates are zero. In experimental designs with higher-order interactions there is an advantage of specifying the LMM in such a way that the intercept estimates the grand mean (GM; mean of the means of design cells). This happens if (a) contrasts for factors are chosen such that the intercept estimates the GM (positive: EffectsCoding, SeqDifferenceCoding, or HelmertCoding contrasts; negative: DummyCoding), (b) orthogonal polynomial trends are used (Helmert, anova-based), and (c) covariates are centered on their mean before inclusion in the model. As always, there may be good theoretical reasons to depart from the default recommendation.\nThe specification of contrasts / trends does not depend on the status of the fixed factor / covariate. It does not matter whether a factor varies between or within the units of a random factor or whether it is an experimental or quasi-experimental factor. Contrasts are not specified for random (grouping) factors.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#variance-components-vcs-and-correlation-parameters-cps",
    "href": "mrk17.html#variance-components-vcs-and-correlation-parameters-cps",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.7 Variance components (VCs) and correlation parameters (CPs)",
    "text": "2.7 Variance components (VCs) and correlation parameters (CPs)\nVariance components (VCs) and correlation parameters (CPs) are within-group model parameters; they correspond to (some of the) within-unit (quasi-)experimental fixed-effect model parameters. Thus, we may be able to estimate a subject-related VC for word frequency. If we included a linear trend for word frequency, the VC estimates the subject-related variance in these slopes. We cannot estimate an item-related VC for the word-frequency slopes because there is only one frequency associated with words. Analogously, we may able to estimate an item-related VC for the effect of Group (training vs. control), but we cannot estimate a subject-related VC for this effect.\nThe within-between characteristics of fixed factors and covariates relative to the random factor(s) are features of the design of the experiment or observational study. They fundamentally constrain the specification of the LMM. That‚Äôs why it is of upmost importance to be absolutely clear about their status.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#conditional-modes-of-random-effects",
    "href": "mrk17.html#conditional-modes-of-random-effects",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "2.8 Conditional modes of random effects",
    "text": "2.8 Conditional modes of random effects\nIn this outline of the dimensions underlying the specification of an LMM, we have said nothing so far about the conditional modes of random effects (i.e., the results shown in caterpillar and shrinkage plots). They are not needed for model specification or model selection.\nThe VC is the prior variance of the random effects, whereas var(ranef(model)) is the variance of the posterior means/modes of the random effects. See Kliegl et al.¬†(2010, VisualCognition); Rizopoulos (2019, stackexchange.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#abstract",
    "href": "mrk17.html#abstract",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "3.1 Abstract",
    "text": "3.1 Abstract\nThis semantic-priming experiment was reported in Masson, Rabe, & Kliegl (2017, Exp. 1, Memory & Cognition). It is a direct replication of an experiment reported in Masson & Kliegl (2013, Exp. 1, JEPLMC). Following a prime word a related or unrelated high- or low-frequency target word or a nonword was presented in clear or dim font. The subject‚Äôs task was to decide as quickly as possible whether the target was a word or a nonword, that is subjects performed a lexical decision task (LDT). The reaction time and the accuracy of the response were recorded. Only correct reaction times to words are included. After filtering there were 16,409 observations recorded from 73 subjects and 240 items.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#codebook",
    "href": "mrk17.html#codebook",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "3.2 Codebook",
    "text": "3.2 Codebook\nThe data (variables and observations) used by Masson et al.¬†(2017) are available in file MRK17_Exp1.RDS\n\n\n\nVariable\nDescription\n\n\n\n\nSubj\nSubject identifier\n\n\nItem\nTarget (non-)word\n\n\ntrial\nTrial number\n\n\nF\nTarget frequency is high or low\n\n\nP\nPrime is related or unrelated to target\n\n\nQ\nTarget quality is clear or degraded\n\n\nlQ\nLast-trial target quality is clear or degraded\n\n\nlT\nLast-trail target requires word or nonword response\n\n\nrt\nReaction time [ms]\n\n\n\nlagQlty and lagTrgt refer to experimental conditions in the last trial.\nCorresponding indicator variables (-1/+1):\n\ncells = combine(\n  groupby(dat, [:F, :P, :Q, :lQ, :lT]),\n  nrow =&gt; :n,\n  :rt =&gt; mean =&gt; :rt_m,\n  :rt =&gt; std =&gt; :rt_sd\n)\ncells\n\n32√ó8 DataFrame7 rows omitted\n\n\n\nRow\nF\nP\nQ\nlQ\nlT\nn\nrt_m\nrt_sd\n\n\n\nString\nString\nString\nString\nString\nInt64\nFloat64\nFloat64\n\n\n\n\n1\nLF\nunr\ndeg\ndeg\nNW\n491\n683.831\n197.074\n\n\n2\nLF\nunr\ndeg\ndeg\nWD\n488\n676.848\n198.409\n\n\n3\nLF\nunr\ndeg\nclr\nNW\n499\n685.265\n186.73\n\n\n4\nLF\nunr\ndeg\nclr\nWD\n519\n676.711\n167.794\n\n\n5\nLF\nunr\nclr\ndeg\nNW\n528\n658.225\n213.144\n\n\n6\nLF\nunr\nclr\ndeg\nWD\n494\n653.03\n196.71\n\n\n7\nLF\nunr\nclr\nclr\nNW\n506\n648.057\n209.625\n\n\n8\nLF\nunr\nclr\nclr\nWD\n499\n641.669\n183.413\n\n\n9\nLF\nrel\ndeg\ndeg\nNW\n492\n667.872\n175.869\n\n\n10\nLF\nrel\ndeg\ndeg\nWD\n498\n653.43\n180.58\n\n\n11\nLF\nrel\ndeg\nclr\nNW\n539\n650.16\n167.51\n\n\n12\nLF\nrel\ndeg\nclr\nWD\n512\n678.119\n217.209\n\n\n13\nLF\nrel\nclr\ndeg\nNW\n499\n635.076\n192.738\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n21\nHF\nunr\nclr\ndeg\nNW\n553\n644.6\n203.261\n\n\n22\nHF\nunr\nclr\ndeg\nWD\n495\n633.046\n172.604\n\n\n23\nHF\nunr\nclr\nclr\nNW\n495\n619.626\n176.55\n\n\n24\nHF\nunr\nclr\nclr\nWD\n532\n620.838\n192.689\n\n\n25\nHF\nrel\ndeg\ndeg\nNW\n508\n659.266\n192.637\n\n\n26\nHF\nrel\ndeg\ndeg\nWD\n546\n637.793\n177.496\n\n\n27\nHF\nrel\ndeg\nclr\nNW\n507\n645.493\n179.962\n\n\n28\nHF\nrel\ndeg\nclr\nWD\n517\n667.685\n231.145\n\n\n29\nHF\nrel\nclr\ndeg\nNW\n527\n615.647\n176.826\n\n\n30\nHF\nrel\nclr\ndeg\nWD\n504\n620.569\n173.764\n\n\n31\nHF\nrel\nclr\nclr\nNW\n546\n635.319\n205.19\n\n\n32\nHF\nrel\nclr\nclr\nWD\n499\n613.094\n192.13",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#model-fit",
    "href": "mrk17.html#model-fit",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "4.1 Model fit",
    "text": "4.1 Model fit\n\ncontrasts =\n    Dict( :F =&gt; EffectsCoding(; levels=[\"LF\", \"HF\"]) ,\n          :P =&gt; EffectsCoding(; levels=[\"unr\", \"rel\"]),\n          :Q =&gt; EffectsCoding(; levels=[\"deg\", \"clr\"]),\n          :lQ =&gt;EffectsCoding(; levels=[\"deg\", \"clr\"]),\n          :lT =&gt;EffectsCoding(; levels=[\"NW\", \"WD\"])\n          );\n\nm_cpx = let\n    form = @formula (1000/rt) ~ 1+F*P*Q*lQ*lT +\n                               (1+F+P+Q+lQ+lT | subj) +\n                               (1  +P+Q+lQ+lT | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\n\nVarCorr(m_cpx)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\nitem\n(Intercept)\n0.00320181\n0.05658456\n\n\n\n\n\n\n\n\nP: rel\n0.00012913\n0.01136337\n+0.05\n\n\n\n\n\n\n\nQ: clr\n0.00015972\n0.01263799\n+0.36\n+0.38\n\n\n\n\n\n\nlQ: clr\n0.00003493\n0.00591002\n+0.38\n+0.03\n+0.03\n\n\n\n\n\nlT: WD\n0.00015749\n0.01254958\n-0.11\n-0.87\n-0.01\n-0.35\n\n\n\nsubj\n(Intercept)\n0.03062115\n0.17498899\n\n\n\n\n\n\n\n\nF: HF\n0.00003858\n0.00621157\n+0.39\n\n\n\n\n\n\n\nP: rel\n0.00012861\n0.01134062\n+0.35\n+0.95\n\n\n\n\n\n\nQ: clr\n0.00078982\n0.02810367\n+0.41\n+0.49\n+0.72\n\n\n\n\n\nlQ: clr\n0.00011565\n0.01075416\n+0.06\n+0.02\n+0.22\n+0.58\n\n\n\n\nlT: WD\n0.00104490\n0.03232486\n+0.26\n-0.14\n-0.01\n+0.37\n+0.50\n\n\nResidual\n\n0.08570468\n0.29275361\n\n\n\n\n\n\n\n\n\n\n\nissingular(m_cpx)\n\ntrue\n\n\n\nMixedModels.PCA(m_cpx)\n\n(item = \nPrincipal components based on correlation matrix\n (Intercept)   1.0     .      .      .      .\n P: rel        0.05   1.0     .      .      .\n Q: clr        0.36   0.38   1.0     .      .\n lQ: clr       0.38   0.03   0.03   1.0     .\n lT: WD       -0.11  -0.87  -0.01  -0.35   1.0\n\nNormalized cumulative variances:\n[0.4227, 0.6868, 0.9061, 1.0, 1.0]\n\nComponent loadings\n                PC1    PC2    PC3    PC4    PC5\n (Intercept)  -0.3    0.68   0.01   0.67   0.07\n P: rel       -0.6   -0.38   0.22   0.05   0.67\n Q: clr       -0.31   0.34   0.7   -0.46  -0.28\n lQ: clr      -0.32   0.41  -0.62  -0.55   0.2\n lT: WD        0.6    0.34   0.26  -0.15   0.66, subj = \nPrincipal components based on correlation matrix\n (Intercept)   1.0     .      .      .      .     .\n F: HF         0.39   1.0     .      .      .     .\n P: rel        0.35   0.95   1.0     .      .     .\n Q: clr        0.41   0.49   0.72   1.0     .     .\n lQ: clr       0.06   0.02   0.22   0.58   1.0    .\n lT: WD        0.26  -0.14  -0.01   0.37   0.5   1.0\n\nNormalized cumulative variances:\n[0.48, 0.7523, 0.8971, 0.9605, 1.0, 1.0]\n\nComponent loadings\n                PC1    PC2    PC3    PC4    PC5    PC6\n (Intercept)  -0.34   0.01   0.83   0.41  -0.14  -0.09\n F: HF        -0.46   0.44  -0.07  -0.26  -0.39   0.61\n P: rel       -0.53   0.29  -0.2   -0.2   -0.02  -0.74\n Q: clr       -0.52  -0.18  -0.14   0.18   0.76   0.27\n lQ: clr      -0.29  -0.54  -0.42   0.45  -0.5   -0.0\n lT: WD       -0.19  -0.63   0.27  -0.7   -0.06   0.0)\n\n\nVariance-covariance matrix of random-effect structure suggests overparameterization for both subject-related and item-related components.\nWe don‚Äôt look at fixed effects before model selection.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#vcs-and-cps",
    "href": "mrk17.html#vcs-and-cps",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "4.2 VCs and CPs",
    "text": "4.2 VCs and CPs\nWe can also look separately at item- and subj-related VCs and CPs for subjects and items.\n\nfirst(m_cpx.Œª)\n\n5√ó5 LinearAlgebra.LowerTriangular{Float64, Matrix{Float64}}:\n  0.193284      ‚ãÖ             ‚ãÖ            ‚ãÖ          ‚ãÖ \n  0.00204529   0.0387616      ‚ãÖ            ‚ãÖ          ‚ãÖ \n  0.0156009    0.0156464     0.0370864     ‚ãÖ          ‚ãÖ \n  0.00758797   0.000204232  -0.00258088   0.0185273   ‚ãÖ \n -0.00482077  -0.0370884     0.0173333   -0.0117634  0.0\n\n\nVP is zero for last diagonal entry; not supported by data.\n\nlast(m_cpx.Œª)\n\n6√ó6 LinearAlgebra.LowerTriangular{Float64, Matrix{Float64}}:\n 0.597735      ‚ãÖ            ‚ãÖ           ‚ãÖ          ‚ãÖ          ‚ãÖ \n 0.00818596   0.019575      ‚ãÖ           ‚ãÖ          ‚ãÖ          ‚ãÖ \n 0.0134379    0.0343446    0.0118528    ‚ãÖ          ‚ãÖ          ‚ãÖ \n 0.0392815    0.0347888    0.0803882   0.0         ‚ãÖ          ‚ãÖ \n 0.00206606  -0.000103841  0.0242869   0.0108592  0.0252461   ‚ãÖ \n 0.0283518   -0.0290294    0.0475194  -0.0533221  0.0552833  0.0488642\n\n\nVP is zero for fourth diagonal entry; not supported by data.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#model-fit-1",
    "href": "mrk17.html#model-fit-1",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "5.1 Model fit",
    "text": "5.1 Model fit\nWe take out correlation parameters.\n\nm_zcp = let\n    form = @formula (1000/rt) ~ 1+F*P*Q*lQ*lT +\n                       zerocorr(1+F+P+Q+lQ+lT | subj) +\n                       zerocorr(1  +P+Q+lQ+lT | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\n\nVarCorr(m_zcp)\nissingular(m_zcp)\nMixedModels.PCA(m_zcp)\n\n(item = \nPrincipal components based on correlation matrix\n (Intercept)  1.0  .    .    .    .\n P: rel       0.0  1.0  .    .    .\n Q: clr       0.0  0.0  1.0  .    .\n lQ: clr      0.0  0.0  0.0  1.0  .\n lT: WD       0.0  0.0  0.0  0.0  1.0\n\nNormalized cumulative variances:\n[0.2, 0.4, 0.6, 0.8, 1.0]\n\nComponent loadings\n               PC1   PC2   PC3   PC4   PC5\n (Intercept)  1.0   0.0   0.0   0.0   0.0\n P: rel       0.0   0.0   0.0   0.0   1.0\n Q: clr       0.0   1.0   0.0   0.0   0.0\n lQ: clr      0.0   0.0   1.0   0.0   0.0\n lT: WD       0.0   0.0   0.0   1.0   0.0, subj = \nPrincipal components based on correlation matrix\n (Intercept)  1.0  .    .    .    .    .\n F: HF        0.0  1.0  .    .    .    .\n P: rel       0.0  0.0  1.0  .    .    .\n Q: clr       0.0  0.0  0.0  1.0  .    .\n lQ: clr      0.0  0.0  0.0  0.0  1.0  .\n lT: WD       0.0  0.0  0.0  0.0  0.0  1.0\n\nNormalized cumulative variances:\n[0.1667, 0.3333, 0.5, 0.6667, 0.8333, 1.0]\n\nComponent loadings\n               PC1   PC2   PC3   PC4   PC5   PC6\n (Intercept)  1.0   0.0   0.0   0.0   0.0   0.0\n F: HF        0.0   1.0   0.0   0.0   0.0   0.0\n P: rel       0.0   0.0   1.0   0.0   0.0   0.0\n Q: clr       0.0   0.0   0.0   1.0   0.0   0.0\n lQ: clr      0.0   0.0   0.0   0.0   1.0   0.0\n lT: WD       0.0   0.0   0.0   0.0   0.0   1.0)\n\n\n\nMixedModels.likelihoodratiotest(m_zcp, m_cpx)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + F + P + Q + lQ + lT | subj) + zerocorr(1 + P + Q + lQ + lT | item)\n44\n7188\n\n\n\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + (1 + F + P + Q + lQ + lT | subj) + (1 + P + Q + lQ + lT | item)\n69\n7148\n41\n25\n0.0241\n\n\n\n\n\nLooks ok. It might be a good idea to prune the LMM by removing small VCs.\n\nm_zcp2 = let\n    form = @formula (1000/rt) ~ 1+F*P*Q*lQ*lT +\n                       zerocorr(1  +P+Q+lQ+lT | subj) +\n                       zerocorr(1  +P+Q   +lT | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\nVarCorr(m_zcp2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nitem\n(Intercept)\n0.00320205\n0.05658667\n\n\n\n\n\n\n\nP: rel\n0.00007137\n0.00844788\n.\n\n\n\n\n\n\nQ: clr\n0.00014719\n0.01213239\n.\n.\n\n\n\n\n\nlT: WD\n0.00011707\n0.01081986\n.\n.\n.\n\n\n\nsubj\n(Intercept)\n0.03061184\n0.17496240\n\n\n\n\n\n\n\nP: rel\n0.00009921\n0.00996026\n.\n\n\n\n\n\n\nQ: clr\n0.00077306\n0.02780389\n.\n.\n\n\n\n\n\nlQ: clr\n0.00011890\n0.01090433\n.\n.\n.\n\n\n\n\nlT: WD\n0.00106148\n0.03258042\n.\n.\n.\n.\n\n\nResidual\n\n0.08591586\n0.29311407\n\n\n\n\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_zcp2, m_zcp, m_cpx)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + P + Q + lQ + lT | subj) + zerocorr(1 + P + Q + lT | item)\n42\n7189\n\n\n\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + F + P + Q + lQ + lT | subj) + zerocorr(1 + P + Q + lQ + lT | item)\n44\n7188\n0\n2\n0.9634\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + (1 + F + P + Q + lQ + lT | subj) + (1 + P + Q + lQ + lT | item)\n69\n7148\n41\n25\n0.0241\n\n\n\n\n\nWe can perhaps remove some more.\n\nm_zcp3 = let\n    form = @formula (1000/rt) ~ 1+F*P*Q*lQ*lT +\n                       zerocorr(1    +Q   +lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\nVarCorr(m_zcp3)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\nitem\n(Intercept)\n0.0032048\n0.0566108\n\n\n\n\nsubj\n(Intercept)\n0.0306166\n0.1749760\n\n\n\n\n\nQ: clr\n0.0007628\n0.0276190\n.\n\n\n\n\nlT: WD\n0.0010644\n0.0326259\n.\n.\n\n\nResidual\n\n0.0864753\n0.2940668\n\n\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_zcp3, m_zcp2, m_zcp, m_cpx)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + Q + lT | subj) + (1 | item)\n37\n7196\n\n\n\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + P + Q + lQ + lT | subj) + zerocorr(1 + P + Q + lT | item)\n42\n7189\n8\n5\n0.1781\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + F + P + Q + lQ + lT | subj) + zerocorr(1 + P + Q + lQ + lT | item)\n44\n7188\n0\n2\n0.9634\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + (1 + F + P + Q + lQ + lT | subj) + (1 + P + Q + lQ + lT | item)\n69\n7148\n41\n25\n0.0241\n\n\n\n\n\nAnd another iteration.\n\nm_zcp4 = let\n    form = @formula (1000/rt) ~ 1+F*P*Q*lQ*lT +\n                       zerocorr(1         +lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\nVarCorr(m_zcp4)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nitem\n(Intercept)\n0.0032067\n0.0566278\n\n\n\nsubj\n(Intercept)\n0.0306608\n0.1751023\n\n\n\n\nlT: WD\n0.0010896\n0.0330097\n.\n\n\nResidual\n\n0.0872330\n0.2953523\n\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_zcp4, m_zcp3, m_zcp2, m_zcp, m_cpx)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + lT | subj) + (1 | item)\n36\n7259\n\n\n\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + Q + lT | subj) + (1 | item)\n37\n7196\n63\n1\n&lt;1e-14\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + P + Q + lQ + lT | subj) + zerocorr(1 + P + Q + lT | item)\n42\n7189\n8\n5\n0.1781\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + F + P + Q + lQ + lT | subj) + zerocorr(1 + P + Q + lQ + lT | item)\n44\n7188\n0\n2\n0.9634\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + (1 + F + P + Q + lQ + lT | subj) + (1 + P + Q + lQ + lT | item)\n69\n7148\n41\n25\n0.0241\n\n\n\n\n\nToo much removed. Stay with m_zcp3, but extend with CPs.\n\nm_prm = let\n    form = @formula (1000/rt) ~ 1+F*P*Q*lQ*lT +\n                               (1+    Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\nVarCorr(m_prm)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\nitem\n(Intercept)\n0.0032009\n0.0565764\n\n\n\n\nsubj\n(Intercept)\n0.0306183\n0.1749808\n\n\n\n\n\nQ: clr\n0.0007627\n0.0276168\n+0.42\n\n\n\n\nlT: WD\n0.0010621\n0.0325904\n+0.26\n+0.38\n\n\nResidual\n\n0.0864769\n0.2940696\n\n\n\n\n\n\n\n\n5.1.1 post-hoc LMM\n\nm_prm = let\n    form = @formula (1000/rt) ~ 1+F*P*Q*lQ*lT +\n                               (1+    Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\nVarCorr(m_prm)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\nitem\n(Intercept)\n0.0032009\n0.0565764\n\n\n\n\nsubj\n(Intercept)\n0.0306183\n0.1749808\n\n\n\n\n\nQ: clr\n0.0007627\n0.0276168\n+0.42\n\n\n\n\nlT: WD\n0.0010621\n0.0325904\n+0.26\n+0.38\n\n\nResidual\n\n0.0864769\n0.2940696",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#vcs-and-cps-1",
    "href": "mrk17.html#vcs-and-cps-1",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "5.2 VCs and CPs",
    "text": "5.2 VCs and CPs\n\nMixedModels.likelihoodratiotest(m_zcp3, m_prm, m_cpx)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + zerocorr(1 + Q + lT | subj) + (1 | item)\n37\n7196\n\n\n\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + (1 + Q + lT | subj) + (1 | item)\n40\n7180\n16\n3\n0.0011\n\n\n:(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + (1 + F + P + Q + lQ + lT | subj) + (1 + P + Q + lQ + lT | item)\n69\n7148\n33\n29\n0.2971\n\n\n\n\n\nThe LRT favors the complex LMM, but not that œá¬≤ &lt; 2*(œá¬≤-dof); AIC and BIC suggest against selection.\n\ngof_summary = let\n  nms = [:m_zcp3, :m_prm, :m_cpx]\n  mods = eval.(nms)\n  lrt = MixedModels.likelihoodratiotest(m_zcp3, m_prm, m_cpx)\n  DataFrame(;\n    name = nms,\n    dof=dof.(mods),\n    deviance=round.(deviance.(mods), digits=0),\n    AIC=round.(aic.(mods),digits=0),\n    AICc=round.(aicc.(mods),digits=0),\n    BIC=round.(bic.(mods),digits=0),\n    œá¬≤=vcat(:., round.(lrt.tests.deviancediff, digits=0)),\n    œá¬≤_dof=vcat(:., round.(lrt.tests.dofdiff, digits=0)),\n    pvalue=vcat(:., round.(lrt.tests.pvalues, digits=3))\n  )\nend\n\n3√ó9 DataFrame\n\n\n\nRow\nname\ndof\ndeviance\nAIC\nAICc\nBIC\nœá¬≤\nœá¬≤_dof\npvalue\n\n\n\nSymbol\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nAny\nAny\nAny\n\n\n\n\n1\nm_zcp3\n37\n7196.0\n7270.0\n7270.0\n7555.0\n.\n.\n.\n\n\n2\nm_prm\n40\n7180.0\n7260.0\n7260.0\n7568.0\n16.0\n3.0\n0.001\n\n\n3\nm_cpx\n69\n7148.0\n7286.0\n7286.0\n7817.0\n33.0\n29.0\n0.297",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#crossed-fixed-effects",
    "href": "mrk17.html#crossed-fixed-effects",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "6.1 Crossed fixed effects",
    "text": "6.1 Crossed fixed effects\n\nm_mrk17_crossed =let\n   form = @formula (1000/rt) ~ 1 + F*P*Q*lQ*lT +\n        (1+Q | subj) + zerocorr(0+lT | subj) + zerocorr(1 + P | item) ;\n    fit(MixedModel, form, dat; contrasts, progress)\nend\n\nVarCorr(m_prm)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\nitem\n(Intercept)\n0.0032009\n0.0565764\n\n\n\n\nsubj\n(Intercept)\n0.0306183\n0.1749808\n\n\n\n\n\nQ: clr\n0.0007627\n0.0276168\n+0.42\n\n\n\n\nlT: WD\n0.0010621\n0.0325904\n+0.26\n+0.38\n\n\nResidual\n\n0.0864769\n0.2940696\n\n\n\n\n\n\n\n\nshow(m_mrk17_crossed)\n\nLinear mixed model fit by maximum likelihood\n :(1000 / rt) ~ 1 + F + P + Q + lQ + lT + F & P + F & Q + P & Q + F & lQ + P & lQ + Q & lQ + F & lT + P & lT + Q & lT + lQ & lT + F & P & Q + F & P & lQ + F & Q & lQ + P & Q & lQ + F & P & lT + F & Q & lT + P & Q & lT + F & lQ & lT + P & lQ & lT + Q & lQ & lT + F & P & Q & lQ + F & P & Q & lT + F & P & lQ & lT + F & Q & lQ & lT + P & Q & lQ & lT + F & P & Q & lQ & lT + (1 + Q | subj) + zerocorr(0 + lT | subj) + zerocorr(1 + P | item)\n   logLik   -2 logLik     AIC       AICc        BIC    \n -3593.4086  7186.8171  7264.8171  7265.0077  7565.3349\n\nVariance components:\n            Column    Variance   Std.Dev.    Corr.\nitem     (Intercept)  0.00320568 0.05661869\n         P: rel       0.00006693 0.00818097   .  \nsubj     (Intercept)  0.03061760 0.17497884\n         Q: clr       0.00076248 0.02761309 +0.42\n         lT: WD       0.00106209 0.03258968   .     .  \nResidual              0.08640800 0.29395238\n Number of obs: 16409; levels of grouping factors: 240, 73\n\n  Fixed-effects parameters:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n                                                   Coef.  Std. Error      z  Pr(&gt;|z|)\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n(Intercept)                                  1.63743      0.0209304   78.23    &lt;1e-99\nF: HF                                        0.019366     0.00431955   4.48    &lt;1e-05\nP: rel                                       0.0188081    0.00236113   7.97    &lt;1e-14\nQ: clr                                       0.042901     0.00396828  10.81    &lt;1e-26\nlQ: clr                                      0.00174653   0.00231531   0.75    0.4506\nlT: WD                                       0.00836023   0.00446182   1.87    0.0610\nF: HF & P: rel                              -0.00711249   0.00236171  -3.01    0.0026\nF: HF & Q: clr                              -0.00141259   0.00230067  -0.61    0.5392\nP: rel & Q: clr                              0.00134142   0.00230239   0.58    0.5601\nF: HF & lQ: clr                             -0.00105227   0.00232139  -0.45    0.6503\nP: rel & lQ: clr                            -0.00240743   0.00232056  -1.04    0.2995\nQ: clr & lQ: clr                             0.00759804   0.00231922   3.28    0.0011\nF: HF & lT: WD                               0.000536555  0.00231365   0.23    0.8166\nP: rel & lT: WD                              2.93223e-5   0.00231751   0.01    0.9899\nQ: clr & lT: WD                              0.00185532   0.00231773   0.80    0.4234\nlQ: clr & lT: WD                            -0.00524632   0.00231608  -2.27    0.0235\nF: HF & P: rel & Q: clr                     -0.000362238  0.00230272  -0.16    0.8750\nF: HF & P: rel & lQ: clr                    -0.00117754   0.00232025  -0.51    0.6118\nF: HF & Q: clr & lQ: clr                     0.00273699   0.00232283   1.18    0.2387\nP: rel & Q: clr & lQ: clr                   -0.0039323    0.0023222   -1.69    0.0904\nF: HF & P: rel & lT: WD                      0.0019864    0.00231879   0.86    0.3916\nF: HF & Q: clr & lT: WD                     -0.00112586   0.00231657  -0.49    0.6270\nP: rel & Q: clr & lT: WD                     0.000261827  0.00231924   0.11    0.9101\nF: HF & lQ: clr & lT: WD                     0.00150677   0.00232198   0.65    0.5164\nP: rel & lQ: clr & lT: WD                    8.67964e-5   0.00232177   0.04    0.9702\nQ: clr & lQ: clr & lT: WD                    0.00916751   0.00231827   3.95    &lt;1e-04\nF: HF & P: rel & Q: clr & lQ: clr           -0.00234443   0.00231978  -1.01    0.3122\nF: HF & P: rel & Q: clr & lT: WD            -0.00148721   0.00232057  -0.64    0.5216\nF: HF & P: rel & lQ: clr & lT: WD            0.00308764   0.00232145   1.33    0.1835\nF: HF & Q: clr & lQ: clr & lT: WD            0.00393598   0.00232128   1.70    0.0900\nP: rel & Q: clr & lQ: clr & lT: WD           0.00202623   0.00232125   0.87    0.3827\nF: HF & P: rel & Q: clr & lQ: clr & lT: WD   0.00144888   0.00231838   0.62    0.5320\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n\nFinally, a look at the fixed effects. The four-factor interaction reported in Masson & Kliegl (2013) was not replicated.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#nested-fixed-effects",
    "href": "mrk17.html#nested-fixed-effects",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "6.2 Nested fixed effects",
    "text": "6.2 Nested fixed effects\n\nm_mrk17_nested =let\n   form = @formula (1000/rt) ~ 1 + Q/(F/P) +\n        (1+Q | subj) + zerocorr(0+lT | subj) + zerocorr(1 + P | item) ;\n    fit(MixedModel, form, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n1.6374\n0.0209\n78.20\n&lt;1e-99\n0.0565\n0.1751\n\n\nQ: clr\n0.0428\n0.0040\n10.74\n&lt;1e-26\n\n0.0278\n\n\nQ: deg & F: HF\n0.0209\n0.0049\n4.26\n&lt;1e-04\n\n\n\n\nQ: clr & F: HF\n0.0179\n0.0049\n3.65\n0.0003\n\n\n\n\nQ: deg & F: LF & P: rel\n0.0244\n0.0047\n5.18\n&lt;1e-06\n\n\n\n\nQ: clr & F: LF & P: rel\n0.0278\n0.0047\n5.94\n&lt;1e-08\n\n\n\n\nQ: deg & F: HF & P: rel\n0.0110\n0.0047\n2.35\n0.0186\n\n\n\n\nQ: clr & F: HF & P: rel\n0.0126\n0.0046\n2.71\n0.0067\n\n\n\n\nP: rel\n\n\n\n\n0.0086\n\n\n\nlT: WD\n\n\n\n\n\n0.0337\n\n\nResidual\n0.2944",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#nesting-within-products-of-factors",
    "href": "mrk17.html#nesting-within-products-of-factors",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "7.1 Nesting within products of factors",
    "text": "7.1 Nesting within products of factors\nInclude parenthesis\n\nm_mrk17_nested =let\n   form = @formula (1000/rt) ~ 1 + Q/(F/P) +\n        (1+Q | subj) + zerocorr(0+lT | subj) + zerocorr(1 + P | item) ;\n    fit(MixedModel, form, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n1.6374\n0.0209\n78.20\n&lt;1e-99\n0.0565\n0.1751\n\n\nQ: clr\n0.0428\n0.0040\n10.74\n&lt;1e-26\n\n0.0278\n\n\nQ: deg & F: HF\n0.0209\n0.0049\n4.26\n&lt;1e-04\n\n\n\n\nQ: clr & F: HF\n0.0179\n0.0049\n3.65\n0.0003\n\n\n\n\nQ: deg & F: LF & P: rel\n0.0244\n0.0047\n5.18\n&lt;1e-06\n\n\n\n\nQ: clr & F: LF & P: rel\n0.0278\n0.0047\n5.94\n&lt;1e-08\n\n\n\n\nQ: deg & F: HF & P: rel\n0.0110\n0.0047\n2.35\n0.0186\n\n\n\n\nQ: clr & F: HF & P: rel\n0.0126\n0.0046\n2.71\n0.0067\n\n\n\n\nP: rel\n\n\n\n\n0.0086\n\n\n\nlT: WD\n\n\n\n\n\n0.0337\n\n\nResidual\n0.2944",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#selection-in-fixed-effects",
    "href": "mrk17.html#selection-in-fixed-effects",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "7.2 Selection in fixed effects",
    "text": "7.2 Selection in fixed effects\n\nusing RegressionFormulae\n# m_prm_5 is equivalent to m_prm\nm_prm_5 = let\n    form = @formula (1000/rt) ~ 1+(F+P+Q+lQ+lT)^5 + (1+Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend;\n\nm_prm_4 = let\n    form = @formula (1000/rt) ~ 1+(F+P+Q+lQ+lT)^4 + (1+Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend;\n\nm_prm_3 = let\n    form = @formula (1000/rt) ~ 1+(F+P+Q+lQ+lT)^3 + (1+Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend;\n\nm_prm_2 = let\n    form = @formula (1000/rt) ~ 1+(F+P+Q+lQ+lT)^2 + (1+Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend;\n\nm_prm_1 = let\n    form = @formula (1000/rt) ~ 1+ F+P+Q+lQ+lT +   (1+Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend;\n\n# Compare the fits\ngof_summary = let\n  nms = [:m_prm_1, :m_prm_2, :m_prm_3, :m_prm_4, :m_prm_5]\n  mods = eval.(nms)\n  lrt = MixedModels.likelihoodratiotest(m_prm_1, m_prm_2, m_prm_3, m_prm_4, m_prm_5)\n  DataFrame(;\n    name = nms,\n    dof=dof.(mods),\n    deviance=deviance.(mods),\n    AIC=aic.(mods),\n    AICc=aicc.(mods),\n    BIC=bic.(mods),\n    œá¬≤=vcat(:.,lrt.tests.deviancediff),\n    œá¬≤_dof=vcat(:.,lrt.tests.dofdiff),\n    pvalue=vcat(:., round.(lrt.tests.pvalues, digits=3))\n  )\nend\n\n5√ó9 DataFrame\n\n\n\nRow\nname\ndof\ndeviance\nAIC\nAICc\nBIC\nœá¬≤\nœá¬≤_dof\npvalue\n\n\n\nSymbol\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nAny\nAny\nAny\n\n\n\n\n1\nm_prm_1\n14\n7237.39\n7265.39\n7265.41\n7373.27\n.\n.\n.\n\n\n2\nm_prm_2\n24\n7209.2\n7257.2\n7257.27\n7442.13\n28.1868\n10\n0.002\n\n\n3\nm_prm_3\n34\n7187.57\n7255.57\n7255.71\n7517.56\n21.6317\n10\n0.017\n\n\n4\nm_prm_4\n39\n7180.61\n7258.61\n7258.8\n7559.13\n6.95863\n5\n0.224\n\n\n5\nm_prm_5\n40\n7180.21\n7260.21\n7260.41\n7568.44\n0.398591\n1\n0.528\n\n\n\n\n\n\nDepending on the level of precision of your hypothesis. You could stay with main effect (BIC), include 2-factor interactions (AIC; also called simple interactions) or include 3-factor interactions [œá¬≤ &lt; 2*(œá¬≤-dof); also called 2-way interactions].",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#posthoc-lmm",
    "href": "mrk17.html#posthoc-lmm",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "7.3 Posthoc LMM",
    "text": "7.3 Posthoc LMM\nWe are using only three factors for the illustruation.\n\nm_prm3 = let\n    form = @formula (1000/rt) ~ 1 + lT*lQ*Q +\n                               (1+    Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n1.6376\n0.0210\n78.10\n&lt;1e-99\n0.0596\n0.1750\n\n\nlT: WD\n0.0087\n0.0045\n1.93\n0.0530\n\n0.0328\n\n\nlQ: clr\n0.0016\n0.0023\n0.70\n0.4818\n\n\n\n\nQ: clr\n0.0428\n0.0040\n10.78\n&lt;1e-26\n\n0.0276\n\n\nlT: WD & lQ: clr\n-0.0056\n0.0023\n-2.39\n0.0167\n\n\n\n\nlT: WD & Q: clr\n0.0020\n0.0023\n0.87\n0.3862\n\n\n\n\nlQ: clr & Q: clr\n0.0076\n0.0023\n3.26\n0.0011\n\n\n\n\nlT: WD & lQ: clr & Q: clr\n0.0092\n0.0023\n3.94\n&lt;1e-04\n\n\n\n\nResidual\n0.2949\n\n\n\n\n\n\n\n\n\n\nThe lT & lQ & Q interactions is significant. Let‚Äôs follow it up with a post-hoc LMM, that is looking at the lQ & Q interaction in the two levels of whether the last word was a target or not.\n\nm_prm3_posthoc = let\n    form = @formula (1000/rt) ~ 1 + lT/(lQ*Q) +\n                               (1+    Q+lT | subj) + (1 | item);\n    fit(MixedModel, form, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n1.6376\n0.0210\n78.10\n&lt;1e-99\n0.0596\n0.1750\n\n\nlT: WD\n0.0087\n0.0045\n1.93\n0.0530\n\n0.0328\n\n\nlT: NW & lQ: clr\n0.0072\n0.0033\n2.19\n0.0285\n\n\n\n\nlT: WD & lQ: clr\n-0.0039\n0.0033\n-1.19\n0.2326\n\n\n\n\nlT: NW & Q: clr\n0.0408\n0.0046\n8.87\n&lt;1e-18\n\n\n\n\nlT: WD & Q: clr\n0.0448\n0.0046\n9.73\n&lt;1e-21\n\n\n\n\nlT: NW & lQ: clr & Q: clr\n-0.0016\n0.0033\n-0.49\n0.6275\n\n\n\n\nlT: WD & lQ: clr & Q: clr\n0.0167\n0.0033\n5.08\n&lt;1e-06\n\n\n\n\nQ: clr\n\n\n\n\n\n0.0276\n\n\nResidual\n0.2949\n\n\n\n\n\n\n\n\n\n\nThe source of the interaction are trials where the last trial was a word target; there is no evidence for the interaction when the last trial was a nonword target.\nThe original and post-hoc LMM have the same goodness of fit.\n\n[objective(m_prm3), objective(m_prm3_posthoc)]\n\n2-element Vector{Float64}:\n 7291.14543744855\n 7291.145437718473",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "mrk17.html#info",
    "href": "mrk17.html#info",
    "title": "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection",
    "section": "7.4 Info",
    "text": "7.4 Info\n\nversioninfo()\n\nJulia Version 1.11.5\nCommit 760b2e5b739 (2025-04-14 06:53 UTC)\nBuild Info:\n  Official https://julialang.org/ release\nPlatform Info:\n  OS: Linux (x86_64-linux-gnu)\n  CPU: 8 √ó 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz\n  WORD_SIZE: 64\n  LLVM: libLLVM-16.0.6 (ORCJIT, tigerlake)\nThreads: 8 default, 0 interactive, 4 GC (on 8 virtual cores)\nEnvironment:\n  JULIA_PROJECT = @.\n  JULIA_LOAD_PATH = @:@stdlib\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Masson, Rabe, & Kliegl, 2017) with Julia: Specification and selection"
    ]
  },
  {
    "objectID": "kwdyz11.html",
    "href": "kwdyz11.html",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "",
    "text": "We take the kwdyz11 dataset (Kliegl et al., 2011) from an experiment looking at three effects of visual cueing under four different cue-target relations (CTRs). Two horizontal rectangles are displayed above and below a central fixation point or they displayed in vertical orientation to the left and right of the fixation point. Subjects react to the onset of a small visual target occurring at one of the four ends of the two rectangles. The target is cued validly on 70% of trials by a brief flash of the corner of the rectangle at which it appears; it is cued invalidly at the three other locations 10% of the trials each.\nWe specify three contrasts for the four-level factor CTR that are derived from spatial, object-based, and attractor-like features of attention. They map onto sequential differences between appropriately ordered factor levels. At the level of fixed effects, there is the noteworthy result, that the attraction effect was estimated at 2 ms, that is clearly not significant. Nevertheless, there was a highly reliable variance component (VC) estimated for this effect. Moreover, the reliable individual differences in the attraction effect were negatively correlated with those in the spatial effect.\nUnfortunately, a few years after the publication, we determined that the reported LMM is actually singular and that the singularity is linked to a theoretically critical correlation parameter (CP) between the spatial effect and the attraction effect. Fortunately, there is also a larger dataset kkl15 from a replication and extension of this study (Kliegl et al., 2015), analyzed with kkl15.jl notebook. The critical CP (along with other fixed effects and CPs) was replicated in this study.\nA more comprehensive analysis was reported in the parsimonious mixed-model paper (Bates et al., 2015). Data and R scripts are also available in R-package RePsychLing. In this and the complementary kkl15.jl scripts, we provide some corresponding analyses with MixedModels.jl.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#residual-over-fitted-plot",
    "href": "kwdyz11.html#residual-over-fitted-plot",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "5.1 Residual-over-fitted plot",
    "text": "5.1 Residual-over-fitted plot\nThe slant in residuals show a lower and upper boundary of reaction times, that is we have have too few short and too few long residuals. Not ideal, but at least width of the residual band looks similar across the fitted values, that is there is no evidence for heteroskedasticity.\n\n\nCode\nset_aog_theme!()\ndraw(\n  data((; f=fitted(m1), r=residuals(m1))) *\n  mapping(:f =&gt; \"Fitted values\", :r =&gt; \"Residual from model m1\") *\n  visual(Scatter);\n)\n\n\n\n\n\n\n\nFigure¬†3: Residuals versus the fitted values for model m1 of the log response time.\n\n\n\n\nWith many observations the scatterplot is not that informative. Contour plots or heatmaps may be an alternative.\n\n\nCode\ndraw(\n  data((; f=fitted(m1), r=residuals(m1))) *\n  mapping(\n    :f =&gt; \"Fitted log response time\", :r =&gt; \"Residual from model m1\"\n  ) *\n  density();\n)\n\n\n\n\n\n\n\nFigure¬†4: Heatmap of residuals versus fitted values for model m1",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#q-q-plot",
    "href": "kwdyz11.html#q-q-plot",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "5.2 Q-Q plot",
    "text": "5.2 Q-Q plot\nThe plot of quantiles of model residuals over corresponding quantiles of the normal distribution should yield a straight line along the main diagonal.\n\nqqnorm(residuals(m1); qqline=:none)",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#observed-and-theoretical-normal-distribution",
    "href": "kwdyz11.html#observed-and-theoretical-normal-distribution",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "5.3 Observed and theoretical normal distribution",
    "text": "5.3 Observed and theoretical normal distribution\nThe violation of expectation is again due to the fact that the distribution of residuals is much narrower than expected from a normal distribution, as shown in Figure¬†5. Overall, it does not look too bad.\n\n\nCode\nlet\n  n = nrow(dat)\n  dat_rz = DataFrame(;\n    value=vcat(residuals(m1) ./ std(residuals(m1)), randn(n)),\n    curve=vcat(fill.(\"residual\", n), fill.(\"normal\", n)),\n  )\n  draw(\n    data(dat_rz) *\n    mapping(:value =&gt; \"Standardized residuals\"; color=:curve) *\n    density(; bandwidth=0.1);\n  )\nend\n\n\n\n\n\n\n\nFigure¬†5: Kernel density plot of the standardized residuals from model m1 compared to a Gaussian",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#overlay",
    "href": "kwdyz11.html#overlay",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "6.1 Overlay",
    "text": "6.1 Overlay\nThe first plot overlays shrinkage-corrected conditional modes of the random effects with within-subject-based and pooled GMs and experimental effects.\nTo be done",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#caterpillar-plot",
    "href": "kwdyz11.html#caterpillar-plot",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "6.2 Caterpillar plot",
    "text": "6.2 Caterpillar plot\nThe caterpillar plot, Figure¬†6, also reveals the high correlation between spatial sod and attraction dod effects.\n\n\nCode\ncaterpillar!(\n  Figure(; resolution=(800, 1000)), ranefinfo(m1, :Subj); orderby=2\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†6: Prediction intervals on the random effects for Subj in model m1",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#shrinkage-plot",
    "href": "kwdyz11.html#shrinkage-plot",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "6.3 Shrinkage plot",
    "text": "6.3 Shrinkage plot\nFigure¬†7 provides more evidence for a problem with the visualization of the spatial sod and attraction dod CP. The corresponding panel illustrates an implosion of conditional modes.\n\n\nCode\nshrinkageplot!(Figure(; resolution=(1000, 1000)), m1)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†7: Shrinkage plot of the conditional means of the random effects for model m1",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#generate-a-bootstrap-sample",
    "href": "kwdyz11.html#generate-a-bootstrap-sample",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "7.1 Generate a bootstrap sample",
    "text": "7.1 Generate a bootstrap sample\nWe generate 2500 samples for the 15 model parameters (4 fixed effect, 4 VCs, 6 CPs, and 1 residual).\n\n\nCode\nRandom.seed!(1234321)\nsamp = parametricbootstrap(2500, m1)\ntbl = samp.tbl\n\n\nTable with 26 columns and 2500 rows:\n      obj       Œ≤1       Œ≤2         Œ≤3         Œ≤4           œÉ         ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ -12780.3  5.92882  0.0903291  0.0414832  -0.00664853  0.191959  ‚ãØ\n 2  ‚îÇ -12744.1  5.94081  0.0983995  0.0320538  -0.00301866  0.192152  ‚ãØ\n 3  ‚îÇ -13008.0  5.91439  0.0812454  0.0462893  -0.0131145   0.191086  ‚ãØ\n 4  ‚îÇ -12877.3  5.94958  0.0986854  0.0354056  -0.0164526   0.19162   ‚ãØ\n 5  ‚îÇ -12618.7  5.96242  0.0953759  0.0426117  -0.00245025  0.192605  ‚ãØ\n 6  ‚îÇ -12930.3  5.95782  0.0880452  0.0286956  -0.0113571   0.191552  ‚ãØ\n 7  ‚îÇ -12419.5  5.96508  0.0997066  0.028214   -0.00930166  0.193267  ‚ãØ\n 8  ‚îÇ -12448.6  5.91907  0.0972766  0.0413664  -0.00679057  0.193108  ‚ãØ\n 9  ‚îÇ -12901.8  5.94039  0.0776489  0.0287682  -0.0197363   0.191522  ‚ãØ\n 10 ‚îÇ -12902.2  5.92652  0.0720784  0.0389606  -0.00760411  0.191632  ‚ãØ\n 11 ‚îÇ -12746.0  5.92423  0.0884694  0.0381241  -0.00675384  0.192067  ‚ãØ\n 12 ‚îÇ -13014.2  5.93067  0.0938316  0.0332705  0.00494843   0.191092  ‚ãØ\n 13 ‚îÇ -13249.4  5.88752  0.0882905  0.0390497  -0.00701687  0.190306  ‚ãØ\n 14 ‚îÇ -12511.7  5.91759  0.0708118  0.0457367  -0.014854    0.192887  ‚ãØ\n 15 ‚îÇ -13041.7  5.9563   0.0953965  0.0357252  0.00111447   0.191246  ‚ãØ\n 16 ‚îÇ -12322.5  5.9297   0.0857692  0.034836   -0.0161301   0.193445  ‚ãØ\n 17 ‚îÇ -13004.4  5.95912  0.0946321  0.0371024  -0.0137209   0.191294  ‚ãØ\n ‚ãÆ  ‚îÇ    ‚ãÆ         ‚ãÆ         ‚ãÆ          ‚ãÆ           ‚ãÆ          ‚ãÆ      ‚ã±",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#shortest-coverage-interval",
    "href": "kwdyz11.html#shortest-coverage-interval",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "7.2 Shortest coverage interval",
    "text": "7.2 Shortest coverage interval\nThe upper limit of the interval for the critical CP CTR: sod, CTR: dod is hitting the upper wall of a perfect correlation. This is evidence of singularity. The other intervals do not exhibit such pathologies; they appear to be ok.\n\n\nCode\nconfint(samp)\n\n\nDictTable with 2 columns and 15 rows:\n par   lower       upper\n ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Œ≤1  ‚îÇ 5.89946     5.97084\n Œ≤2  ‚îÇ 0.0708118   0.102437\n Œ≤3  ‚îÇ 0.0246619   0.048444\n Œ≤4  ‚îÇ -0.0205563  0.00220698\n œÅ1  ‚îÇ 0.240212    0.684779\n œÅ2  ‚îÇ -0.879      0.239835\n œÅ3  ‚îÇ -0.707556   0.504422\n œÅ4  ‚îÇ -0.137643   0.762191\n œÅ5  ‚îÇ 0.591271    0.999995\n œÅ6  ‚îÇ -0.902211   0.449066\n œÉ   ‚îÇ 0.190506    0.193579\n œÉ1  ‚îÇ 0.118872    0.169081\n œÉ2  ‚îÇ 0.0448516   0.071009\n œÉ3  ‚îÇ 0.00947894  0.0413044\n œÉ4  ‚îÇ 0.0144723   0.0383516",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#comparative-density-plots-of-bootstrapped-parameter-estimates",
    "href": "kwdyz11.html#comparative-density-plots-of-bootstrapped-parameter-estimates",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "7.3 Comparative density plots of bootstrapped parameter estimates",
    "text": "7.3 Comparative density plots of bootstrapped parameter estimates",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#residual",
    "href": "kwdyz11.html#residual",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "7.4 Residual",
    "text": "7.4 Residual\n\n\nCode\ndraw(\n  data(tbl) *\n  mapping(:œÉ =&gt; \"Residual standard deviation\") *\n  density();\n)\n\n\n\n\n\n\n\nFigure¬†8",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#fixed-effects-wo-gm",
    "href": "kwdyz11.html#fixed-effects-wo-gm",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "7.5 Fixed effects (w/o GM)",
    "text": "7.5 Fixed effects (w/o GM)\nThe shortest coverage interval for the GM ranges from 376 to 404 ms. To keep the plot range small we do not include its density here.\n\n\nCode\nlabels = [\n  \"CTR: sod\" =&gt; \"spatial effect\",\n  \"CTR: dos\" =&gt; \"object effect\",\n  \"CTR: dod\" =&gt; \"attraction effect\",\n  \"(Intercept)\" =&gt; \"grand mean\",\n]\ndraw(\n  data(tbl) *\n  mapping(\n    [:Œ≤2, :Œ≤3, :Œ≤4] .=&gt; \"Experimental effect size [ms]\";\n    color=dims(1) =&gt; renamer([\"spatial\", \"object\", \"attraction\"] .* \" effect\") =&gt;\n    \"Experimental effects\",\n  ) *\n  density();\n)\n\n\n\n\n\n\n\nFigure¬†9: Comparative density plots of the fixed-effects parameters for model m1\n\n\n\n\nThe densitiies correspond nicely with the shortest coverage intervals.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#variance-components-vcs",
    "href": "kwdyz11.html#variance-components-vcs",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "7.6 Variance components (VCs)",
    "text": "7.6 Variance components (VCs)\n\n\nCode\ndraw(\n  data(tbl) *\n  mapping(\n    [:œÉ1, :œÉ2, :œÉ3, :œÉ4] .=&gt; \"Standard deviations [ms]\";\n    color=dims(1) =&gt;\n    renamer(append!([\"Grand mean\"],[\"spatial\", \"object\", \"attraction\"] .* \" effect\")) =&gt;\n    \"Variance components\",\n  ) *\n  density();\n)\n\n\n\n\n\n\n\nFigure¬†10: Comparative density plots of the variance components for model m1\n\n\n\n\nThe VC are all very nicely defined.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kwdyz11.html#correlation-parameters-cps",
    "href": "kwdyz11.html#correlation-parameters-cps",
    "title": "RePsychLing Kliegl et al.¬†(2011)",
    "section": "7.7 Correlation parameters (CPs)",
    "text": "7.7 Correlation parameters (CPs)\n\n\nCode\nlet\n  labels = [\n    \"(Intercept), CTR: sod\" =&gt; \"GM, spatial\",\n    \"(Intercept), CTR: dos\" =&gt; \"GM, object\",\n    \"CTR: sod, CTR: dos\" =&gt; \"spatial, object\",\n    \"(Intercept), CTR: dod\" =&gt; \"GM, attraction\",\n    \"CTR: sod, CTR: dod\" =&gt; \"spatial, attraction\",\n    \"CTR: dos, CTR: dod\" =&gt; \"object, attraction\",\n  ]\n  draw(\n    data(tbl) *\n    mapping(\n      [:œÅ1, :œÅ2, :œÅ3, :œÅ4, :œÅ5, :œÅ6] .=&gt; \"Correlation\";\n      color=dims(1) =&gt; renamer(last.(labels)) =&gt; \"Correlation parameters\",\n    ) *\n    density();\n  )\nend\n\n\n\n\n\n\n\nFigure¬†11: Comparative density plots of the correlation parameters for model m1\n\n\n\n\nTwo of the CPs stand out positively. First, the correlation between GM and the spatial effect is well defined. Second, as discussed throughout this script, the CP between spatial and attraction effect is close to the 1.0 border and clearly not well defined. Therefore, this CP will be replicated with a larger sample in script kkl15.jl (Kliegl et al., 2015).",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl et al. (2011)"
    ]
  },
  {
    "objectID": "kb07.html",
    "href": "kb07.html",
    "title": "Bootstrapping a fitted model",
    "section": "",
    "text": "Begin by loading the packages to be used.\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing DataFrames\nusing MixedModels\nusing Random\nusing SMLP2025: dataset\n\nconst progress=false\n\n\n\n1 Data set and model\nThe kb07 data (Kronm√ºller & Barr, 2007) are one of the datasets provided by the MixedModels package.\n\nkb07 = dataset(:kb07)\n\nArrow.Table with 1789 rows, 7 columns, and schema:\n :subj      String\n :item      String\n :spkr      String\n :prec      String\n :load      String\n :rt_trunc  Int16\n :rt_raw    Int16\n\n\nConvert the table to a DataFrame for summary.\n\ndescribe(DataFrame(kb07))\n\n7√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nsubj\n\nS030\n\nS103\n0\nString\n\n\n2\nitem\n\nI01\n\nI32\n0\nString\n\n\n3\nspkr\n\nnew\n\nold\n0\nString\n\n\n4\nprec\n\nbreak\n\nmaintain\n0\nString\n\n\n5\nload\n\nno\n\nyes\n0\nString\n\n\n6\nrt_trunc\n2182.2\n579\n1940.0\n5171\n0\nInt16\n\n\n7\nrt_raw\n2226.24\n579\n1940.0\n15923\n0\nInt16\n\n\n\n\n\n\nThe experimental factors; spkr, prec, and load, are two-level factors. The EffectsCoding contrast is used with these to create a \\(\\pm1\\) encoding.\n\ncontrasts = Dict{Symbol,Any}(nm =&gt; EffectsCoding() for nm in (:spkr, :prec, :load))\n\nThe display of an initial model fit\n\nkbm01 = let\n  form = @formula(\n    rt_trunc ~\n      1 +\n      spkr * prec * load +\n      (1 + spkr + prec + load | subj) +\n      (1 + spkr + prec + load | item)\n  )\n  fit(MixedModel, form, kb07; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\nœÉ_item\n\n\n(Intercept)\n2181.6729\n77.3131\n28.22\n&lt;1e-99\n301.6736\n362.3182\n\n\nspkr: old\n67.7490\n18.2747\n3.71\n0.0002\n42.5441\n40.7073\n\n\nprec: maintain\n-333.9206\n47.1388\n-7.08\n&lt;1e-11\n61.9978\n246.8078\n\n\nload: yes\n78.7702\n19.5387\n4.03\n&lt;1e-04\n64.9874\n42.5139\n\n\nspkr: old & prec: maintain\n-21.9655\n15.8070\n-1.39\n0.1646\n\n\n\n\nspkr: old & load: yes\n18.3838\n15.8070\n1.16\n0.2448\n\n\n\n\nprec: maintain & load: yes\n4.5333\n15.8070\n0.29\n0.7743\n\n\n\n\nspkr: old & prec: maintain & load: yes\n23.6072\n15.8070\n1.49\n0.1353\n\n\n\n\nResidual\n668.5371\n\n\n\n\n\n\n\n\n\n\ndoes not include the estimated correlations of the random effects.\nThe VarCorr extractor displays these.\n\nVarCorr(kbm01)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\nsubj\n(Intercept)\n91006.9887\n301.6736\n\n\n\n\n\n\nspkr: old\n1810.0012\n42.5441\n+0.79\n\n\n\n\n\nprec: maintain\n3843.7268\n61.9978\n-0.59\n+0.02\n\n\n\n\nload: yes\n4223.3647\n64.9874\n+0.36\n+0.85\n+0.54\n\n\nitem\n(Intercept)\n131274.4558\n362.3182\n\n\n\n\n\n\nspkr: old\n1657.0830\n40.7073\n+0.44\n\n\n\n\n\nprec: maintain\n60914.1141\n246.8078\n-0.69\n+0.35\n\n\n\n\nload: yes\n1807.4303\n42.5139\n+0.32\n+0.15\n-0.14\n\n\nResidual\n\n446941.7901\n668.5371\n\n\n\n\n\n\n\n\nNone of the two-factor or three-factor interaction terms in the fixed-effects are significant. In the random-effects terms only the scalar random effects and the prec random effect for item appear to be warranted, leading to the reduced formula\n\nkbm02 = let\n  form = @formula(\n    rt_trunc ~\n      1 + spkr + prec + load + (1 | subj) + (1 + prec | item)\n  )\n  fit(MixedModel, form, kb07; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n2181.8526\n77.4681\n28.16\n&lt;1e-99\n364.7125\n298.0259\n\n\nspkr: old\n67.8790\n16.0785\n4.22\n&lt;1e-04\n\n\n\n\nprec: maintain\n-333.7906\n47.4472\n-7.03\n&lt;1e-11\n252.5212\n\n\n\nload: yes\n78.5904\n16.0785\n4.89\n&lt;1e-05\n\n\n\n\nResidual\n680.0319\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(kbm02)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nitem\n(Intercept)\n133015.242\n364.713\n\n\n\n\nprec: maintain\n63766.937\n252.521\n-0.70\n\n\nsubj\n(Intercept)\n88819.438\n298.026\n\n\n\nResidual\n\n462443.388\n680.032\n\n\n\n\n\n\nThese two models are nested and can be compared with a likelihood-ratio test.\n\nMixedModels.likelihoodratiotest(kbm02, kbm01)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nrt_trunc ~ 1 + spkr + prec + load + (1 | subj) + (1 + prec | item)\n9\n28664\n\n\n\n\n\nrt_trunc ~ 1 + spkr + prec + load + spkr & prec + spkr & load + prec & load + spkr & prec & load + (1 + spkr + prec + load | subj) + (1 + spkr + prec + load | item)\n29\n28637\n27\n20\n0.1431\n\n\n\n\n\nThe p-value of approximately 17% leads us to prefer the simpler model, kbm02, to the more complex, kbm01.\n\n\n2 A bootstrap sample\nCreate a bootstrap sample of a few thousand parameter estimates from the reduced model. The pseudo-random number generator is initialized to a fixed value for reproducibility.\n\nRandom.seed!(1234321)\nkbm02samp = parametricbootstrap(2000, kbm02)\nkbm02tbl = kbm02samp.tbl\n\nTable with 14 columns and 2000 rows:\n      obj      Œ≤1       Œ≤2       Œ≤3        Œ≤4       œÉ        œÉ1       œÉ2       ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ 28772.3  2163.91  60.5609  -312.083  53.8854  702.338  372.786  244.827  ‚ãØ\n 2  ‚îÇ 28715.1  2232.6   83.7997  -383.283  47.4501  693.167  391.838  214.007  ‚ãØ\n 3  ‚îÇ 28575.3  2194.67  65.0581  -348.837  78.2132  660.998  380.111  241.468  ‚ãØ\n 4  ‚îÇ 28728.5  2261.27  66.174   -351.407  89.6083  690.344  334.599  306.404  ‚ãØ\n 5  ‚îÇ 28631.4  2309.15  77.5687  -341.306  72.5969  676.497  323.766  269.468  ‚ãØ\n 6  ‚îÇ 28627.8  2091.9   54.8119  -295.505  74.487   667.146  426.8    278.072  ‚ãØ\n 7  ‚îÇ 28685.7  2291.62  73.7219  -396.564  84.4817  687.627  393.806  194.632  ‚ãØ\n 8  ‚îÇ 28654.4  2019.04  72.7075  -203.806  87.8736  679.826  304.365  208.355  ‚ãØ\n 9  ‚îÇ 28664.1  1999.72  60.8485  -308.63   74.0233  680.412  357.133  305.422  ‚ãØ\n 10 ‚îÇ 28618.3  2249.85  52.1815  -394.464  89.8091  670.656  385.063  226.332  ‚ãØ\n 11 ‚îÇ 28748.9  2166.95  77.9659  -326.597  81.0316  696.842  378.964  234.475  ‚ãØ\n 12 ‚îÇ 28731.4  2153.68  74.5144  -341.393  44.1758  701.902  323.245  177.602  ‚ãØ\n 13 ‚îÇ 28623.9  2155.23  93.193   -373.267  73.2941  671.256  335.979  217.312  ‚ãØ\n 14 ‚îÇ 28615.9  2344.1   62.8553  -314.684  88.7448  665.313  410.652  259.437  ‚ãØ\n 15 ‚îÇ 28636.2  2286.5   35.9889  -349.732  62.0524  670.473  361.649  304.037  ‚ãØ\n 16 ‚îÇ 28676.6  2289.43  76.9805  -298.765  87.139   686.466  316.203  232.853  ‚ãØ\n 17 ‚îÇ 28614.8  2044.53  53.2336  -304.859  112.995  675.065  354.352  220.038  ‚ãØ\n ‚ãÆ  ‚îÇ    ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ         ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ     ‚ã±\n\n\nOne of the uses of such a sample is to form ‚Äúconfidence intervals‚Äù on the parameters by obtaining the shortest interval that covers a given proportion (95%, by default) of the sample.\n\nconfint(kbm02samp)\n\nDictTable with 2 columns and 9 rows:\n par   lower      upper\n ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Œ≤1  ‚îÇ 2022.91    2334.0\n Œ≤2  ‚îÇ 34.0592    96.72\n Œ≤3  ‚îÇ -430.238   -239.803\n Œ≤4  ‚îÇ 46.5349    109.526\n œÅ1  ‚îÇ -0.907256  -0.490089\n œÉ   ‚îÇ 657.341    702.655\n œÉ1  ‚îÇ 270.067    451.968\n œÉ2  ‚îÇ 181.737    325.124\n œÉ3  ‚îÇ 233.834    364.512\n\n\nA sample like this can be used for more than just creating an interval because it approximates the distribution of the estimator. For the fixed-effects parameters the estimators are close to being normally distributed, Figure¬†1.\n\n\nCode\ndraw(\n  data(kbm02samp.Œ≤) * mapping(:Œ≤; color=:coefname) * AlgebraOfGraphics.density();\n  figure=(; resolution=(800, 450)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†1: Comparative densities of the fixed-effects coefficients in kbm02samp\n\n\n\n\n\n\nCode\nlet pars = [\"œÉ1\", \"œÉ2\", \"œÉ3\"]\n  draw(\n    data(kbm02tbl) *\n    mapping(pars .=&gt; \"œÉ\"; color=dims(1) =&gt; renamer(pars)) *\n    AlgebraOfGraphics.density();\n    figure=(; resolution=(800, 450)),\n  )\nend\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†2: Density plot of bootstrap samples standard deviation of random effects\n\n\n\n\n\n\nCode\ndraw(\n  data(kbm02tbl) *\n  mapping(:œÅ1 =&gt; \"Correlation\") *\n  AlgebraOfGraphics.density();\n  figure=(; resolution=(800, 450)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†3: Density plot of correlation parameters in bootstrap sample from model kbm02\n\n\n\n\n\n\n3 References\n\n\nKronm√ºller, E., & Barr, D. J. (2007). Perspective-free pragmatics: Broken precedents and the recovery-from-preemption hypothesis. Journal of Memory and Language, 56(3), 436‚Äì455. https://doi.org/10.1016/j.jml.2006.05.002\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.\n\n\n\n\n Back to top",
    "crumbs": [
      "Bootstrap and profiling",
      "Bootstrapping a fitted model"
    ]
  },
  {
    "objectID": "glmm.html",
    "href": "glmm.html",
    "title": "Generalized linear mixed models",
    "section": "",
    "text": "Load the packages to be used\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing DataFrameMacros\nusing DataFrames\nusing MixedModels\nusing MixedModelsMakie\nusing SMLP2025: dataset\n\nconst progress=false",
    "crumbs": [
      "Generalized linear mixed models"
    ]
  },
  {
    "objectID": "glmm.html#matrix-notation-for-the-sleepstudy-model",
    "href": "glmm.html#matrix-notation-for-the-sleepstudy-model",
    "title": "Generalized linear mixed models",
    "section": "1 Matrix notation for the sleepstudy model",
    "text": "1 Matrix notation for the sleepstudy model\n\nsleepstudy = DataFrame(dataset(:sleepstudy))\n\n180√ó3 DataFrame155 rows omitted\n\n\n\nRow\nsubj\ndays\nreaction\n\n\n\nString\nInt8\nFloat64\n\n\n\n\n1\nS308\n0\n249.56\n\n\n2\nS308\n1\n258.705\n\n\n3\nS308\n2\n250.801\n\n\n4\nS308\n3\n321.44\n\n\n5\nS308\n4\n356.852\n\n\n6\nS308\n5\n414.69\n\n\n7\nS308\n6\n382.204\n\n\n8\nS308\n7\n290.149\n\n\n9\nS308\n8\n430.585\n\n\n10\nS308\n9\n466.353\n\n\n11\nS309\n0\n222.734\n\n\n12\nS309\n1\n205.266\n\n\n13\nS309\n2\n202.978\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n169\nS371\n8\n350.781\n\n\n170\nS371\n9\n369.469\n\n\n171\nS372\n0\n269.412\n\n\n172\nS372\n1\n273.474\n\n\n173\nS372\n2\n297.597\n\n\n174\nS372\n3\n310.632\n\n\n175\nS372\n4\n287.173\n\n\n176\nS372\n5\n329.608\n\n\n177\nS372\n6\n334.482\n\n\n178\nS372\n7\n343.22\n\n\n179\nS372\n8\n369.142\n\n\n180\nS372\n9\n364.124\n\n\n\n\n\n\n\ncontrasts = Dict(:subj =&gt; Grouping())\nm1 = let f = @formula reaction ~ 1 + days + (1 + days | subj)\n  fit(MixedModel, f, sleepstudy; contrasts, progress)\nend\nprintln(m1)\n\nLinear mixed model fit by maximum likelihood\n reaction ~ 1 + days + (1 + days | subj)\n   logLik   -2 logLik     AIC       AICc        BIC    \n  -875.9697  1751.9393  1763.9393  1764.4249  1783.0971\n\nVariance components:\n            Column    Variance Std.Dev.   Corr.\nsubj     (Intercept)  565.51065 23.78047\n         days          32.68212  5.71683 +0.08\nResidual              654.94145 25.59182\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n                Coef.  Std. Error      z  Pr(&gt;|z|)\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n(Intercept)  251.405      6.63226  37.91    &lt;1e-99\ndays          10.4673     1.50224   6.97    &lt;1e-11\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n\nThe response vector, y, has 180 elements. The fixed-effects coefficient vector, Œ≤, has 2 elements and the fixed-effects model matrix, X, is of size 180 √ó 2.\n\nm1.y\n\n180-element view(::Matrix{Float64}, :, 3) with eltype Float64:\n 249.56\n 258.7047\n 250.8006\n 321.4398\n 356.8519\n 414.6901\n 382.2038\n 290.1486\n 430.5853\n 466.3535\n   ‚ãÆ\n 273.474\n 297.5968\n 310.6316\n 287.1726\n 329.6076\n 334.4818\n 343.2199\n 369.1417\n 364.1236\n\n\n\nm1.Œ≤\n\n2-element Vector{Float64}:\n 251.4051048484828\n  10.467285959596277\n\n\n\nm1.X\n\n180√ó2 Matrix{Float64}:\n 1.0  0.0\n 1.0  1.0\n 1.0  2.0\n 1.0  3.0\n 1.0  4.0\n 1.0  5.0\n 1.0  6.0\n 1.0  7.0\n 1.0  8.0\n 1.0  9.0\n ‚ãÆ    \n 1.0  1.0\n 1.0  2.0\n 1.0  3.0\n 1.0  4.0\n 1.0  5.0\n 1.0  6.0\n 1.0  7.0\n 1.0  8.0\n 1.0  9.0\n\n\nThe second column of X is just the days vector and the first column is all 1‚Äôs.\nThere are 36 random effects, 2 for each of the 18 levels of subj. The ‚Äúestimates‚Äù (technically, the conditional means or conditional modes) are returned as a vector of matrices, one matrix for each grouping factor. In this case there is only one grouping factor for the random effects so there is one one matrix which contains 18 intercept random effects and 18 slope random effects.\n\nm1.b\n\n1-element Vector{Matrix{Float64}}:\n [2.8158177107740383 -40.04844073875996 ‚Ä¶ 0.7232622004879082 12.118907715900336; 9.075511973765797 -8.64407958138207 ‚Ä¶ -0.9710526648887464 1.3106980698541022]\n\n\n\nonly(m1.b)   # only one grouping factor\n\n2√ó18 Matrix{Float64}:\n 2.81582  -40.0484   -38.4331  22.8321   ‚Ä¶  -24.7101   0.723262  12.1189\n 9.07551   -8.64408   -5.5134  -4.65872       4.6597  -0.971053   1.3107\n\n\nThere is a model matrix, Z, for the random effects. In general it has one chunk of columns for the first grouping factor, a chunk of columns for the second grouping factor, etc.\nIn this case there is only one grouping factor.\n\nInt.(first(m1.reterms))\n\n180√ó36 Matrix{Int64}:\n 1  0  0  0  0  0  0  0  0  0  0  0  0  ‚Ä¶  0  0  0  0  0  0  0  0  0  0  0  0\n 1  1  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  2  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  3  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  4  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  5  0  0  0  0  0  0  0  0  0  0  0  ‚Ä¶  0  0  0  0  0  0  0  0  0  0  0  0\n 1  6  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  7  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  8  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  9  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n ‚ãÆ              ‚ãÆ              ‚ãÆ        ‚ã±     ‚ãÆ              ‚ãÆ              ‚ãÆ\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  2\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  3\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  4\n 0  0  0  0  0  0  0  0  0  0  0  0  0  ‚Ä¶  0  0  0  0  0  0  0  0  0  0  1  5\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  6\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  7\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  8\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  9\n\n\nThe defining property of a linear model or linear mixed model is that the fitted values are linear combinations of the fixed-effects parameters and the random effects. We can write the fitted values as\n\nm1.X * m1.Œ≤ + only(m1.reterms) * vec(only(m1.b))\n\n180-element Vector{Float64}:\n 254.22092255925685\n 273.7637204926189\n 293.306518425981\n 312.84931635934305\n 332.3921142927051\n 351.9349122260672\n 371.4777101594293\n 391.0205080927913\n 410.56330602615344\n 430.1061039595155\n   ‚ãÆ\n 275.30199659383356\n 287.0799806232839\n 298.85796465273427\n 310.6359486821847\n 322.413932711635\n 334.19191674108544\n 345.9699007705358\n 357.7478847999862\n 369.52586882943655\n\n\n\nfitted(m1)   # just to check that these are indeed the same as calculated above\n\n180-element Vector{Float64}:\n 254.22092255925685\n 273.7637204926189\n 293.306518425981\n 312.84931635934305\n 332.3921142927051\n 351.9349122260672\n 371.4777101594293\n 391.0205080927913\n 410.56330602615344\n 430.1061039595155\n   ‚ãÆ\n 275.3019965938335\n 287.0799806232839\n 298.85796465273427\n 310.6359486821846\n 322.413932711635\n 334.19191674108544\n 345.96990077053573\n 357.7478847999862\n 369.52586882943655\n\n\nIn symbols we would write the linear predictor expression as \\[\n\\boldsymbol{\\eta} = \\mathbf{X}\\boldsymbol{\\beta} +\\mathbf{Z b}\n\\] where \\(\\boldsymbol{\\eta}\\) has 180 elements, \\(\\boldsymbol{\\beta}\\) has 2 elements, \\(\\bf b\\) has 36 elements, \\(\\bf X\\) is of size 180 √ó 2 and \\(\\bf Z\\) is of size 180 √ó 36.\nFor a linear model or linear mixed model the linear predictor is the mean response, \\(\\boldsymbol\\mu\\). That is, we can write the probability model in terms of a 180-dimensional random variable, \\(\\mathcal Y\\), for the response and a 36-dimensional random variable, \\(\\mathcal B\\), for the random effects as \\[\n\\begin{aligned}\n(\\mathcal{Y} | \\mathcal{B}=\\bf{b}) &\\sim\\mathcal{N}(\\bf{ X\\boldsymbol\\beta + Z b},\\sigma^2\\bf{I})\\\\\\\\\n\\mathcal{B}&\\sim\\mathcal{N}(\\bf{0},\\boldsymbol{\\Sigma}_{\\boldsymbol\\theta}) .\n\\end{aligned}\n\\] where \\(\\boldsymbol{\\Sigma}_\\boldsymbol{\\theta}\\) is a 36 √ó 36 symmetric covariance matrix that has a special form - it consists of 18 diagonal blocks, each of size 2 √ó 2 and all the same.\nRecall that this symmetric matrix can be constructed from the parameters \\(\\boldsymbol\\theta\\), which generate the lower triangular matrix \\(\\boldsymbol\\lambda\\), and the estimate \\(\\widehat{\\sigma^2}\\).\n\nm1.Œ∏\n\n3-element Vector{Float64}:\n 0.9292213025841999\n 0.018168360086059557\n 0.22264488361408383\n\n\n\nŒª = only(m1.Œª)  # with multiple grouping factors there will be multiple Œª's\n\n2√ó2 LinearAlgebra.LowerTriangular{Float64, Matrix{Float64}}:\n 0.929221    ‚ãÖ \n 0.0181684  0.222645\n\n\n\nŒ£ = varest(m1) * (Œª * Œª')\n\n2√ó2 Matrix{Float64}:\n 565.511  11.057\n  11.057  32.6821\n\n\nCompare the diagonal elements to the Variance column of\n\nVarCorr(m1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nsubj\n(Intercept)\n565.51065\n23.78047\n\n\n\n\ndays\n32.68212\n5.71683\n+0.08\n\n\nResidual\n\n654.94145\n25.59182",
    "crumbs": [
      "Generalized linear mixed models"
    ]
  },
  {
    "objectID": "glmm.html#linear-predictors-in-lmms-and-glmms",
    "href": "glmm.html#linear-predictors-in-lmms-and-glmms",
    "title": "Generalized linear mixed models",
    "section": "2 Linear predictors in LMMs and GLMMs",
    "text": "2 Linear predictors in LMMs and GLMMs\nWriting the model for \\(\\mathcal Y\\) as \\[\n(\\mathcal{Y} | \\mathcal{B}=\\bf{b})\\sim\\mathcal{N}(\\bf{ X\\boldsymbol\\beta + Z b},\\sigma^2\\bf{I})\n\\] may seem like over-mathematization (or ‚Äúoverkill‚Äù, if you prefer) relative to expressions like \\[\ny_i = \\beta_1 x_{i,1} + \\beta_2 x_{i,2}+ b_1 z_{i,1} +\\dots+b_{36} z_{i,36}+\\epsilon_i\n\\] but this more abstract form is necessary for generalizations.\nThe way that I read the first form is\n\n\n\n\n\n\nThe conditional distribution of the response vector, \\(\\mathcal Y\\), given that the random effects vector, \\(\\mathcal B =\\bf b\\), is a multivariate normal (or Gaussian) distribution whose mean, \\(\\boldsymbol\\mu\\), is the linear predictor, \\(\\boldsymbol\\eta=\\bf{X\\boldsymbol\\beta+Zb}\\), and whose covariance matrix is \\(\\sigma^2\\bf I\\). That is, conditional on \\(\\bf b\\), the elements of \\(\\mathcal Y\\) are independent normal random variables with constant variance, \\(\\sigma^2\\), and means of the form \\(\\boldsymbol\\mu = \\boldsymbol\\eta = \\bf{X\\boldsymbol\\beta+Zb}\\).\n\n\n\nSo the only things that differ in the distributions of the \\(y_i\\)‚Äôs are the means and they are determined by this linear predictor, \\(\\boldsymbol\\eta = \\bf{X\\boldsymbol\\beta+Zb}\\).",
    "crumbs": [
      "Generalized linear mixed models"
    ]
  },
  {
    "objectID": "glmm.html#generalized-linear-mixed-models",
    "href": "glmm.html#generalized-linear-mixed-models",
    "title": "Generalized linear mixed models",
    "section": "3 Generalized Linear Mixed Models",
    "text": "3 Generalized Linear Mixed Models\nConsider first a GLMM for a vector, \\(\\bf y\\), of binary (i.e.¬†yes/no) responses. The probability model for the conditional distribution \\(\\mathcal Y|\\mathcal B=\\bf b\\) consists of independent Bernoulli distributions where the mean, \\(\\mu_i\\), for the i‚Äôth response is again determined by the i‚Äôth element of a linear predictor, \\(\\boldsymbol\\eta = \\mathbf{X}\\boldsymbol\\beta+\\mathbf{Z b}\\).\nHowever, in this case we will run into trouble if we try to make \\(\\boldsymbol\\mu=\\boldsymbol\\eta\\) because \\(\\mu_i\\) is the probability of ‚Äúsuccess‚Äù for the i‚Äôth response and must be between 0 and 1. We can‚Äôt guarantee that the i‚Äôth component of \\(\\boldsymbol\\eta\\) will be between 0 and 1. To get around this problem we apply a transformation to take \\(\\eta_i\\) to \\(\\mu_i\\). For historical reasons this transformation is called the inverse link, written \\(g^{-1}\\), and the opposite transformation - from the probability scale to an unbounded scale - is called the link, g.\nEach probability distribution in the exponential family (which is most of the important ones), has a canonical link which comes from the form of the distribution itself. The details aren‚Äôt as important as recognizing that the distribution itself determines a preferred link function.\nFor the Bernoulli distribution, the canonical link is the logit or log-odds function, \\[\n\\eta = g(\\mu) = \\log\\left(\\frac{\\mu}{1-\\mu}\\right),\n\\] (it‚Äôs called log-odds because it is the logarithm of the odds ratio, \\(p/(1-p)\\)) and the canonical inverse link is the logistic \\[\n\\mu=g^{-1}(\\eta)=\\frac{1}{1+\\exp(-\\eta)}.\n\\] This is why fitting a binary response is sometimes called logistic regression.\nFor later use we define a Julia logistic function. See this presentation for more information than you could possibly want to know on how Julia converts code like this to run on the processor.\n\nincrement(x) = x + one(x)\nlogistic(Œ∑) = inv(increment(exp(-Œ∑)))\n\nlogistic (generic function with 1 method)\n\n\nTo reiterate, the probability model for a Generalized Linear Mixed Model (GLMM) is \\[\n\\begin{aligned}\n(\\mathcal{Y} | \\mathcal{B}=\\bf{b}) &\\sim\\mathcal{D}(\\bf{g^{-1}(X\\boldsymbol\\beta + Z b)},\\phi)\\\\\\\\\n\\mathcal{B}&\\sim\\mathcal{N}(\\bf{0},\\Sigma_{\\boldsymbol\\theta}) .\n\\end{aligned}\n\\] where \\(\\mathcal{D}\\) is the distribution family (such as Bernoulli or Poisson), \\(g^{-1}\\) is the inverse link and \\(\\phi\\) is a scale parameter for \\(\\mathcal{D}\\) if it has one. The important cases of the Bernoulli and Poisson distributions don‚Äôt have a scale parameter - once you know the mean you know everything you need to know about the distribution. (For those following the presentation, this poem by John Keats is the one with the couplet ‚ÄúBeauty is truth, truth beauty - that is all ye know on earth and all ye need to know.‚Äù)\n\n3.1 An example of a Bernoulli GLMM\nThe contra dataset in the MixedModels package is from a survey on the use of artificial contraception by women in Bangladesh.\n\ncontra = DataFrame(dataset(:contra))\n\n1934√ó5 DataFrame1909 rows omitted\n\n\n\nRow\ndist\nurban\nlivch\nage\nuse\n\n\n\nString\nString\nString\nFloat64\nString\n\n\n\n\n1\nD01\nY\n3+\n18.44\nN\n\n\n2\nD01\nY\n0\n-5.56\nN\n\n\n3\nD01\nY\n2\n1.44\nN\n\n\n4\nD01\nY\n3+\n8.44\nN\n\n\n5\nD01\nY\n0\n-13.56\nN\n\n\n6\nD01\nY\n0\n-11.56\nN\n\n\n7\nD01\nY\n3+\n18.44\nN\n\n\n8\nD01\nY\n3+\n-3.56\nN\n\n\n9\nD01\nY\n1\n-5.56\nN\n\n\n10\nD01\nY\n3+\n1.44\nN\n\n\n11\nD01\nY\n0\n-11.56\nY\n\n\n12\nD01\nY\n0\n-2.56\nN\n\n\n13\nD01\nY\n1\n-4.56\nN\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n1923\nD61\nN\n0\n-11.56\nY\n\n\n1924\nD61\nN\n3+\n1.44\nN\n\n\n1925\nD61\nN\n1\n-5.56\nN\n\n\n1926\nD61\nN\n3+\n14.44\nN\n\n\n1927\nD61\nN\n3+\n19.44\nN\n\n\n1928\nD61\nN\n2\n-9.56\nY\n\n\n1929\nD61\nN\n2\n-2.56\nN\n\n\n1930\nD61\nN\n3+\n14.44\nN\n\n\n1931\nD61\nN\n2\n-4.56\nN\n\n\n1932\nD61\nN\n3+\n14.44\nN\n\n\n1933\nD61\nN\n0\n-13.56\nN\n\n\n1934\nD61\nN\n3+\n10.44\nN\n\n\n\n\n\n\n\ncombine(groupby(contra, :dist), nrow)\n\n60√ó2 DataFrame35 rows omitted\n\n\n\nRow\ndist\nnrow\n\n\n\nString\nInt64\n\n\n\n\n1\nD01\n117\n\n\n2\nD02\n20\n\n\n3\nD03\n2\n\n\n4\nD04\n30\n\n\n5\nD05\n39\n\n\n6\nD06\n65\n\n\n7\nD07\n18\n\n\n8\nD08\n37\n\n\n9\nD09\n23\n\n\n10\nD10\n13\n\n\n11\nD11\n21\n\n\n12\nD12\n29\n\n\n13\nD13\n24\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n49\nD49\n4\n\n\n50\nD50\n19\n\n\n51\nD51\n37\n\n\n52\nD52\n61\n\n\n53\nD53\n19\n\n\n54\nD55\n6\n\n\n55\nD56\n45\n\n\n56\nD57\n27\n\n\n57\nD58\n33\n\n\n58\nD59\n10\n\n\n59\nD60\n32\n\n\n60\nD61\n42\n\n\n\n\n\n\nThe information recorded included woman‚Äôs age, the number of live children she has, whether she lives in an urban or rural setting, and the political district in which she lives.\nThe age was centered. Unfortunately, the version of the data to which I had access did not record what the centering value was.\nA data plot, Figure¬†1, shows that the probability of contraception use is not linear in age - it is low for younger women, higher for women in the middle of the range (assumed to be women in late 20‚Äôs to early 30‚Äôs) and low again for older women (late 30‚Äôs to early 40‚Äôs in this survey).\nIf we fit a model with only the age term in the fixed effects, that term will not be significant. This doesn‚Äôt mean that there is no ‚Äúage effect‚Äù, it only means that there is no significant linear effect for age.\n\n\nCode\ndraw(\n  data(\n    @transform(\n      contra,\n      :numuse = Int(:use == \"Y\"),\n      :urb = ifelse(:urban == \"Y\", \"Urban\", \"Rural\")\n    )\n  ) *\n  mapping(\n    :age =&gt; \"Centered age (yr)\",\n    :numuse =&gt; \"Frequency of contraception use\";\n    col=:urb,\n    color=:livch,\n  ) *\n  smooth();\n  figure=(; resolution=(800, 450)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†1: Smoothed relative frequency of contraception use versus centered age for women in the 1989 Bangladesh Fertility Survey\n\n\n\n\n\ncontrasts = Dict(\n  :dist =&gt; Grouping(),\n  :urban =&gt; HelmertCoding(),\n  :livch =&gt; DummyCoding(), # default, but no harm in being explicit\n)\nnAGQ = 9\ndist = Bernoulli()\ngm1 = let\n  form = @formula(\n    use ~ 1 + age + abs2(age) + urban + livch + (1 | dist)\n  )\n  fit(MixedModel, form, contra, dist; nAGQ, contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_dist\n\n\n(Intercept)\n-0.6871\n0.1686\n-4.08\n&lt;1e-04\n0.4786\n\n\nage\n0.0035\n0.0092\n0.38\n0.7022\n\n\n\nabs2(age)\n-0.0046\n0.0007\n-6.29\n&lt;1e-09\n\n\n\nurban: Y\n0.3484\n0.0600\n5.81\n&lt;1e-08\n\n\n\nlivch: 1\n0.8151\n0.1622\n5.02\n&lt;1e-06\n\n\n\nlivch: 2\n0.9165\n0.1851\n4.95\n&lt;1e-06\n\n\n\nlivch: 3+\n0.9154\n0.1858\n4.93\n&lt;1e-06\n\n\n\n\n\n\nNotice that the linear term for age is not significant but the quadratic term for age is highly significant. We usually retain the lower order term, even if it is not significant, if the higher order term is significant.\nNotice also that the parameter estimates for the treatment contrasts for livch are similar. Thus the distinction of 1, 2, or 3+ children is not as important as the contrast between having any children and not having any. Those women who already have children are more likely to use artificial contraception.\nFurthermore, the women without children have a different probability vs age profile than the women with children. To allow for this we define a binary children factor and incorporate an age&children interaction.\n\nVarCorr(gm1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\n\n\ndist\n(Intercept)\n0.229095\n0.478638\n\n\n\n\n\nNotice that there is no ‚Äúresidual‚Äù variance being estimated. This is because the Bernoulli distribution doesn‚Äôt have a scale parameter.\n\n\n3.2 Convert livch to a binary factor\n\n@transform!(contra, :children = :livch ‚â† \"0\")\n# add the associated contrast specifier\ncontrasts[:children] = EffectsCoding()\n\nEffectsCoding(nothing, nothing)\n\n\n\ngm2 = let\n  form = @formula(\n    use ~\n      1 +\n      age * children +\n      abs2(age) +\n      children +\n      urban +\n      (1 | dist)\n  )\n  fit(MixedModel, form, contra, dist; nAGQ, contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_dist\n\n\n(Intercept)\n-0.3614\n0.1275\n-2.84\n0.0046\n0.4757\n\n\nage\n-0.0131\n0.0110\n-1.19\n0.2351\n\n\n\nchildren: true\n0.6054\n0.1035\n5.85\n&lt;1e-08\n\n\n\nabs2(age)\n-0.0058\n0.0008\n-6.89\n&lt;1e-11\n\n\n\nurban: Y\n0.3567\n0.0602\n5.93\n&lt;1e-08\n\n\n\nage & children: true\n0.0342\n0.0127\n2.69\n0.0072\n\n\n\n\n\n\n\n\nCode\nlet\n  mods = [gm2, gm1]\n  DataFrame(;\n    model=[:gm2, :gm1],\n    npar=dof.(mods),\n    deviance=deviance.(mods),\n    AIC=aic.(mods),\n    BIC=bic.(mods),\n    AICc=aicc.(mods),\n  )\nend\n\n\n2√ó6 DataFrame\n\n\n\nRow\nmodel\nnpar\ndeviance\nAIC\nBIC\nAICc\n\n\n\nSymbol\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\ngm2\n7\n2364.92\n2379.18\n2418.15\n2379.24\n\n\n2\ngm1\n8\n2372.46\n2388.73\n2433.27\n2388.81\n\n\n\n\n\n\nBecause these models are not nested, we cannot do a likelihood ratio test. Nevertheless we see that the deviance is much lower in the model with age & children even though the 3 levels of livch have been collapsed into a single level of children. There is a substantial decrease in the deviance even though there are fewer parameters in model gm2 than in gm1. This decrease is because the flexibility of the model - its ability to model the behavior of the response - is being put to better use in gm2 than in gm1.\nAt present the calculation of the geomdof as sum(influence(m)) is not correctly defined in our code for a GLMM so we need to do some more work before we can examine those values.\n\n\n3.3 Using urban&dist as a grouping factor\nIt turns out that there can be more difference between urban and rural settings within the same political district than there is between districts. To model this difference we build a model with urban&dist as a grouping factor.\n\ngm3 = let\n  form = @formula(\n    use ~\n      1 +\n      age * children +\n      abs2(age) +\n      children +\n      urban +\n      (1 | urban & dist)\n  )\n  fit(MixedModel, form, contra, dist; nAGQ, contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_urban & dist\n\n\n(Intercept)\n-0.3415\n0.1269\n-2.69\n0.0071\n0.5761\n\n\nage\n-0.0129\n0.0112\n-1.16\n0.2471\n\n\n\nchildren: true\n0.6064\n0.1045\n5.80\n&lt;1e-08\n\n\n\nabs2(age)\n-0.0056\n0.0008\n-6.66\n&lt;1e-10\n\n\n\nurban: Y\n0.3936\n0.0859\n4.58\n&lt;1e-05\n\n\n\nage & children: true\n0.0332\n0.0128\n2.59\n0.0096\n\n\n\n\n\n\n\n\nCode\nlet\n  mods = [gm3, gm2, gm1]\n  DataFrame(;\n    model=[:gm3, :gm2, :gm1],\n    npar=dof.(mods),\n    deviance=deviance.(mods),\n    AIC=aic.(mods),\n    BIC=bic.(mods),\n    AICc=aicc.(mods),\n  )\nend\n\n\n3√ó6 DataFrame\n\n\n\nRow\nmodel\nnpar\ndeviance\nAIC\nBIC\nAICc\n\n\n\nSymbol\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\ngm3\n7\n2353.82\n2368.48\n2407.46\n2368.54\n\n\n2\ngm2\n7\n2364.92\n2379.18\n2418.15\n2379.24\n\n\n3\ngm1\n8\n2372.46\n2388.73\n2433.27\n2388.81\n\n\n\n\n\n\nNotice that the parameter count in gm3 is the same as that of gm2 - the thing that has changed is the number of levels of the grouping factor- resulting in a much lower deviance for gm3. This reinforces the idea that a simple count of the number of parameters to be estimated does not always reflect the complexity of the model.\n\ngm2\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_dist\n\n\n(Intercept)\n-0.3614\n0.1275\n-2.84\n0.0046\n0.4757\n\n\nage\n-0.0131\n0.0110\n-1.19\n0.2351\n\n\n\nchildren: true\n0.6054\n0.1035\n5.85\n&lt;1e-08\n\n\n\nabs2(age)\n-0.0058\n0.0008\n-6.89\n&lt;1e-11\n\n\n\nurban: Y\n0.3567\n0.0602\n5.93\n&lt;1e-08\n\n\n\nage & children: true\n0.0342\n0.0127\n2.69\n0.0072\n\n\n\n\n\n\n\ngm3\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_urban & dist\n\n\n(Intercept)\n-0.3415\n0.1269\n-2.69\n0.0071\n0.5761\n\n\nage\n-0.0129\n0.0112\n-1.16\n0.2471\n\n\n\nchildren: true\n0.6064\n0.1045\n5.80\n&lt;1e-08\n\n\n\nabs2(age)\n-0.0056\n0.0008\n-6.66\n&lt;1e-10\n\n\n\nurban: Y\n0.3936\n0.0859\n4.58\n&lt;1e-05\n\n\n\nage & children: true\n0.0332\n0.0128\n2.59\n0.0096\n\n\n\n\n\n\nThe coefficient for age may be regarded as insignificant but we retain it for two reasons: we have a term of age¬≤ (written abs2(age)) in the model and we have a significant interaction age & children in the model.\n\n\n3.4 Predictions for some subgroups\nFor a ‚Äútypical‚Äù district (random effect near zero) the predictions on the linear predictor scale for a woman whose age is near the centering value (i.e.¬†centered age of zero) are:\n\nusing Effects\ndesign = Dict(\n  :children =&gt; [true, false], :urban =&gt; [\"Y\", \"N\"], :age =&gt; [0.0]\n)\npreds = effects(design, gm3; invlink=AutoInvLink())\n\n4√ó7 DataFrame\n\n\n\nRow\nchildren\nage\nurban\nuse: Y\nerr\nlower\nupper\n\n\n\nBool\nFloat64\nString\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\ntrue\n0.0\nY\n0.65894\n0.0338299\n0.62511\n0.69277\n\n\n2\nfalse\n0.0\nY\n0.364863\n0.0534101\n0.311452\n0.418273\n\n\n3\ntrue\n0.0\nN\n0.467889\n0.0281378\n0.439751\n0.496026\n\n\n4\nfalse\n0.0\nN\n0.20726\n0.0364055\n0.170855\n0.243666",
    "crumbs": [
      "Generalized linear mixed models"
    ]
  },
  {
    "objectID": "glmm.html#summarizing-the-results",
    "href": "glmm.html#summarizing-the-results",
    "title": "Generalized linear mixed models",
    "section": "4 Summarizing the results",
    "text": "4 Summarizing the results\n\nFrom the data plot we can see a quadratic trend in the probability by age.\nThe patterns for women with children are similar and we do not need to distinguish between 1, 2, and 3+ children.\nWe do distinguish between those women who do not have children and those with children. This shows up in a significant age & children interaction term.\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.",
    "crumbs": [
      "Generalized linear mixed models"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html",
    "href": "contrasts_kwdyz11.html",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "",
    "text": "Code\nusing AlgebraOfGraphics\nusing CairoMakie\nusing Chain\nusing DataFrames\nusing MixedModels\nusing SMLP2025: dataset\nusing StatsBase\nusing StatsModels\n\nCairoMakie.activate!(; type=\"png\")\n\nprogress = false\n\n\nfalse",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#seqdiffcoding",
    "href": "contrasts_kwdyz11.html#seqdiffcoding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "4.1 SeqDiffCoding",
    "text": "4.1 SeqDiffCoding\nThe SeqDiffCoding contrast corresponds to MASS::contr.sdif() in R. The assignment of random factors such as Subj to Grouping() is necessary when the sample size is very large. We recommend to include it always, but in this tutorial we do so only in the first example.\n\nm1 = let levels = [\"val\", \"sod\", \"dos\", \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; SeqDiffCoding(; levels),\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0913\n54.96\n&lt;1e-99\n55.1998\n\n\nCTR: sod\n33.7817\n3.2874\n10.28\n&lt;1e-24\n23.2486\n\n\nCTR: dos\n13.9852\n2.3057\n6.07\n&lt;1e-08\n10.7538\n\n\nCTR: dod\n-2.7470\n2.2143\n-1.24\n0.2148\n9.5110\n\n\nResidual\n69.8348\n\n\n\n\n\n\n\n\n\nWhat does the intercept represent?\n\nmean(dat1.rt)\nmean(cellmeans.rt_mean)\n\n389.18622f0\n\n\nGrand Mean is mean of condition means.",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#hypothesiscoding",
    "href": "contrasts_kwdyz11.html#hypothesiscoding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "4.2 HypothesisCoding",
    "text": "4.2 HypothesisCoding\nHypothesisCoding is the most general option available. We can implement all ‚Äúcanned‚Äù contrasts ourselves. The next example reproduces the test statistics from SeqDiffCoding - with a minor modification illustrating the flexibility of going beyond the default version.\n\nm1b = let levels = [\"val\", \"sod\", \"dos\", \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n        -1  1 0  0\n         0 -1 1  0\n         0  0 1 -1\n      ];\n      levels,\n      labels=[\"spt\", \"obj\", \"grv\"],\n    ),\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0911\n54.96\n&lt;1e-99\n55.1984\n\n\nCTR: spt\n33.7817\n3.2876\n10.28\n&lt;1e-24\n23.2501\n\n\nCTR: obj\n13.9852\n2.3060\n6.06\n&lt;1e-08\n10.7572\n\n\nCTR: grv\n2.7469\n2.2146\n1.24\n0.2148\n9.5151\n\n\nResidual\n69.8348\n\n\n\n\n\n\n\n\n\nThe difference to the preprogrammed SeqDiffCoding is that for the third contrast we changed the direction of the contrast such that the sign of the effect is positive when the result is in agreement with theoretical expectation, that is we subtract the fourth level from the third, not the third level from the fourth.",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#dummycoding",
    "href": "contrasts_kwdyz11.html#dummycoding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "4.3 DummyCoding",
    "text": "4.3 DummyCoding\nThis contrast corresponds to contr.treatment() in R\n\nm2 = let\n  contrasts = Dict(:CTR =&gt; DummyCoding(; base=\"val\"))\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n358.0914\n6.1534\n58.19\n&lt;1e-99\n47.9055\n\n\nCTR: dod\n45.0200\n4.3625\n10.32\n&lt;1e-24\n32.2821\n\n\nCTR: dos\n47.7669\n3.5560\n13.43\n&lt;1e-40\n25.5314\n\n\nCTR: sod\n33.7817\n3.2868\n10.28\n&lt;1e-24\n23.2436\n\n\nResidual\n69.8349\n\n\n\n\n\n\n\n\n\nThe DummyCoding contrast has the disadvantage that the intercept returns the mean of the level specified as base, default is the first level, not the GM.",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#ychycaeitcoding",
    "href": "contrasts_kwdyz11.html#ychycaeitcoding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "4.4 YchycaeitCoding",
    "text": "4.4 YchycaeitCoding\nThe contrasts returned by DummyCoding may be exactly what we want. Can‚Äôt we have them, but also have the intercept estimate the GM, rather than the mean of the base level? Yes, we can! We call this ‚ÄúYou can have your cake and it eat, too‚Äù-Coding (YchycaeitCoding). And we use HypothesisCoding to achieve this outcome.\n\nm2b = let levels = [\"val\", \"sod\", \"dos\", \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n        -1 1 0 0\n        -1 0 1 0\n        -1 0 0 1\n      ];\n      levels,\n      labels=levels[2:end],\n    )\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0911\n54.96\n&lt;1e-99\n55.1978\n\n\nCTR: sod\n33.7817\n3.2873\n10.28\n&lt;1e-24\n23.2477\n\n\nCTR: dos\n47.7669\n3.5566\n13.43\n&lt;1e-40\n25.5370\n\n\nCTR: dod\n45.0200\n4.3634\n10.32\n&lt;1e-24\n32.2893\n\n\nResidual\n69.8348\n\n\n\n\n\n\n\n\n\nWe can simply move the column with -1s for a different base.\n\nm2c = let levels = [\"val\", \"sod\", \"dos\", \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n       1 -1  0  0\n       0 -1  1  0\n       0 -1  0  1\n      ];\n      levels,\n      labels=[\"val\", \"dos\", \"dod\"],\n    )\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0907\n54.96\n&lt;1e-99\n55.1949\n\n\nCTR: val\n-33.7818\n3.2884\n-10.27\n&lt;1e-24\n23.2574\n\n\nCTR: dos\n13.9852\n2.3041\n6.07\n&lt;1e-08\n10.7332\n\n\nCTR: dod\n11.2382\n2.3562\n4.77\n&lt;1e-05\n11.4364\n\n\nResidual\n69.8349\n\n\n\n\n\n\n\n\n\nWe can simply relevel the factor with a different base.\n\nm2d = let levels = [\"sod\", \"val\", \"dos\", \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n        -1 1 0 0\n        -1 0 1 0\n        -1 0 0 1\n      ];\n      levels,\n      labels=levels[2:end],\n    )\n  )\n  fit(MixedModel, form, dat1; contrasts)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0915\n54.96\n&lt;1e-99\n55.2013\n\n\nCTR: val\n-33.7817\n3.2874\n-10.28\n&lt;1e-24\n23.2483\n\n\nCTR: dos\n13.9852\n2.3057\n6.07\n&lt;1e-08\n10.7534\n\n\nCTR: dod\n11.2383\n2.3585\n4.77\n&lt;1e-05\n11.4644\n\n\nResidual\n69.8348",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#effectscoding",
    "href": "contrasts_kwdyz11.html#effectscoding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "4.5 EffectsCoding",
    "text": "4.5 EffectsCoding\nEffectsCoding estimates the difference between the Grand Mean and three of the four levels. The difference of the fourth levels can be computed from the Grand Mean and these three differences.\n\nm3 = let levels = [\"val\", \"sod\", \"dos\",  \"dod\"]\n  contrasts = Dict(:CTR =&gt; EffectsCoding(; levels, base=\"val\"))\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0780\n55.06\n&lt;1e-99\n55.0953\n\n\nCTR: sod\n2.1396\n1.3336\n1.60\n0.1086\n6.0051\n\n\nCTR: dos\n16.1248\n1.4401\n11.20\n&lt;1e-28\n7.3284\n\n\nCTR: dod\n13.3778\n1.9331\n6.92\n&lt;1e-11\n12.4701\n\n\nResidual\n69.8351\n\n\n\n\n\n\n\n\n\nThis contrast corresponds almost to contr.sum() in R. The ‚Äúalmost‚Äù qualification refers to the fact that EffectsCoding uses the first level as default base; contr.sum() uses the last factor level.\n\nm3b = let levels = [\"val\", \"sod\", \"dos\",  \"dod\"]\n  contrasts = Dict(:CTR =&gt; EffectsCoding(; levels, base = \"dod\"))\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0913\n54.96\n&lt;1e-99\n55.1994\n\n\nCTR: val\n-31.6422\n2.6425\n-11.97\n&lt;1e-32\n19.9522\n\n\nCTR: sod\n2.1396\n1.3337\n1.60\n0.1087\n6.0063\n\n\nCTR: dos\n16.1248\n1.4404\n11.19\n&lt;1e-28\n7.3312\n\n\nResidual\n69.8348\n\n\n\n\n\n\n\n\n\nHow could we achieve the default result with HypothesisCoding?\n\nm3c = let levels = [\"val\", \"sod\", \"dos\",  \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n         -1/4   3/4 -1/4  -1/4   # b - GM = b - (a+b+c+d)/4 =&gt;  -1/4*a + 3/4*b - 1/4*c - 1/4*d\n         -1/4  -1/4  3/4  -1/4   # c - GM = c - (a+b+c+d)/4 =&gt;  -1/4*a - 1/4*b + 3/4*c - 1/4*d\n         -1/4  -1/4 -1/4   3/4   # d - GM = d - (a+b+c+d)/4 =&gt;  -1/4*a - 1/4*b - 1/4*c + 3/4*d\n      ];\n      levels,\n      labels=levels[2:end],\n    )\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0920\n54.95\n&lt;1e-99\n55.2050\n\n\nCTR: sod\n2.1395\n1.3337\n1.60\n0.1087\n6.0067\n\n\nCTR: dos\n16.1248\n1.4405\n11.19\n&lt;1e-28\n7.3330\n\n\nCTR: dod\n13.3778\n1.9324\n6.92\n&lt;1e-11\n12.4640\n\n\nResidual\n69.8348",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#helmertcoding",
    "href": "contrasts_kwdyz11.html#helmertcoding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "4.6 HelmertCoding",
    "text": "4.6 HelmertCoding\nHelmertCoding codes each level as the difference from the average of the lower levels. With the default order of CTR levels we get the following test statistics. These contrasts are orthogonal.\n\nm4 = let levels = [\"val\", \"sod\", \"dos\",  \"dod\"]\n  contrasts = Dict(:CTR =&gt; HelmertCoding(; levels))\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0912\n54.96\n&lt;1e-99\n55.1986\n\n\nCTR: sod\n16.8909\n1.6436\n10.28\n&lt;1e-24\n11.6232\n\n\nCTR: dos\n10.2920\n0.8353\n12.32\n&lt;1e-34\n5.2568\n\n\nCTR: dod\n4.4593\n0.6441\n6.92\n&lt;1e-11\n4.1545\n\n\nResidual\n69.8349\n\n\n\n\n\n\n\n\n\n+ HeC1: (b - a)/2           # (391 - 358)/2 = 16.5\n+ HeC2: (c - (b+a)/2)/3     # (405 - (391 + 358)/2)/3 = 10.17 \n+ HeC3: (d - (c+b+a)/3)/4   # (402 - (405 + 391 + 358)/3)/4 = 4.33\nWe can reconstruct the estimates, but they are scaled by the number of levels involved. With HypothesisCoding we can estimate the ‚Äúunscaled‚Äù differences. Also the labeling of the contrasts is not as informative as they could be.\n\nm4b = let levels = [\"val\", \"sod\", \"dos\",  \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n          -1    1    0   0 \n         -1/2 -1/2   1   0\n         -1/3 -1/3 -1/3  1\n        \n      ];\n      levels,\n      labels= [\"2-1\", \"3-21\", \"4-321\"]\n    )\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0886\n54.98\n&lt;1e-99\n55.1784\n\n\nCTR: 2-1\n33.7817\n3.2874\n10.28\n&lt;1e-24\n23.2487\n\n\nCTR: 3-21\n30.8761\n2.5065\n12.32\n&lt;1e-34\n15.7751\n\n\nCTR: 4-321\n17.8371\n2.5765\n6.92\n&lt;1e-11\n16.6185\n\n\nResidual\n69.8349",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#reverse-helmertcoding",
    "href": "contrasts_kwdyz11.html#reverse-helmertcoding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "4.7 Reverse HelmertCoding",
    "text": "4.7 Reverse HelmertCoding\nReverse HelmertCoding codes each level as the difference from the average of the higher levels. To estimate these effects we simply reverse the order of factor levels. Of course, the contrasts are also orthogonal.\n\nm4c = let levels = reverse(StatsModels.levels(dat1.CTR))\n  contrasts = Dict(:CTR =&gt; HelmertCoding(; levels))\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0930\n54.95\n&lt;1e-99\n55.2132\n\n\nCTR: dos\n1.3734\n1.1072\n1.24\n0.2148\n4.7557\n\n\nCTR: sod\n-4.2039\n0.6845\n-6.14\n&lt;1e-09\n3.3523\n\n\nCTR: val\n-10.5474\n0.8808\n-11.97\n&lt;1e-32\n6.6508\n\n\nResidual\n69.8347\n\n\n\n\n\n\n\n\n\n+ HeC1:(c - d)/2            # (405 - 402)/2 = 1.5\n+ HeC2:(b - (c+d)/2)/3      # (391 - (405 + 402)/2)/3 = -4.17\n+ HeC3:(a - (b+c+d)/3/4     # (356  -(391 + 405 + 402)/3)/4 = -10.83\n‚Ä¶ and the unscaled-by-number-of-levels estimates.\n\nm4d = let levels = [\"val\", \"sod\", \"dos\",  \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n        0    0     1   -1 \n        0    1   -1/2 -1/2\n        1  -1/3  -1/3 -1/3\n      ];\n      levels,\n      labels= [\"3-4\", \"2-34\", \"1-234\"]\n    )\n  )\n  fit(MixedModel, form, dat1; contrasts)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0915\n54.96\n&lt;1e-99\n55.2014\n\n\nCTR: 3-4\n2.7469\n2.2143\n1.24\n0.2148\n9.5107\n\n\nCTR: 2-34\n-12.6117\n2.0529\n-6.14\n&lt;1e-09\n10.0486\n\n\nCTR: 1-234\n-42.1895\n3.5231\n-11.98\n&lt;1e-32\n26.6007\n\n\nResidual\n69.8348",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#anova-coding",
    "href": "contrasts_kwdyz11.html#anova-coding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "5.1 Anova Coding",
    "text": "5.1 Anova Coding\nFactorial designs (i.e., lab experiments) are traditionally analyzed with analysis of variance. The test statistics of main effects and interactions are based on an orthogonal set of contrasts. We specify them with HypothesisCoding.\n\n5.1.1 A(2) x B(2)\nAn A(2) x B(2) design can be recast as an F(4) design with the levels (A1-B1, A1-B2, A2-B1, A2-B2). The following contrast specification returns estimates for the main effect of A, the main effect of B, and the interaction of A and B. In a figure With A on the x-axis and the levels of B shown as two lines, the interaction tests the null hypothesis that the two lines are parallel. A positive coefficient implies overadditivity (diverging lines toward the right) and a negative coefficient underadditivity (converging lines).\n\nm5 = let levels = [\"val\", \"sod\", \"dos\", \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n        -1 -1 +1 +1          # A\n        -1 +1 -1 +1          # B\n        +1 -1 -1 +1          # A x B\n      ];\n      levels,\n      labels=[\"A\", \"B\", \"AxB\"],\n    ),\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0913\n54.96\n&lt;1e-99\n55.1994\n\n\nCTR: A\n59.0052\n5.1822\n11.39\n&lt;1e-29\n36.2045\n\n\nCTR: B\n31.0348\n4.6748\n6.64\n&lt;1e-10\n31.7121\n\n\nCTR: AxB\n-36.5287\n3.0926\n-11.81\n&lt;1e-31\n16.0038\n\n\nResidual\n69.8348\n\n\n\n\n\n\n\n\n\nIt is also helpful to see the corresponding layout of the four means for the interaction of A and B (i.e., the third contrast)\n        B1     B2\n   A1   +1     -1\n   A2   -1     +1\nThus, interaction tests whether the difference between main diagonal and minor diagonal is different from zero.\n\n\n5.1.2 A(2) x B(2) x C(2)\nGoing beyond the four level factor; it is also helpful to see the corresponding layout of the eight means for the interaction of A and B and C.\n          C1              C2\n      B1     B2        B1     B2\n A1   +1     -1   A1   -1     +1\n A2   -1     +1   A2   +1     -1",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#nested-coding",
    "href": "contrasts_kwdyz11.html#nested-coding",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "5.2 Nested coding",
    "text": "5.2 Nested coding\nNested contrasts are often specified as follow up as post-hoc tests for ANOVA interactions. They are orthogonal. We specify them with HypothesisCoding.\nAn A(2) x B(2) design can be recast as an F(4) design with the levels (A1-B1, A1-B2, A2-B1, A2-B2). The following contrast specification returns an estimate for the main effect of A and the effects of B nested in the two levels of A. In a figure With A on the x-axis and the levels of B shown as two lines, the second contrast tests whether A1-B1 is different from A1-B2 and the third contrast tests whether A2-B1 is different from A2-B2.\n\n\nm6 = let levels = [\"val\", \"sod\", \"dos\", \"dod\"]\n  contrasts = Dict(\n    :CTR =&gt; HypothesisCoding(\n      [\n        -1 -1 +1 +1\n        -1 +1  0  0\n         0  0 +1 -1\n      ];\n      levels,\n      labels=[\"do_so\", \"spt\", \"grv\"],\n    ),\n  )\n  fit(MixedModel, form, dat1; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Subj\n\n\n(Intercept)\n389.7336\n7.0937\n54.94\n&lt;1e-99\n55.2184\n\n\nCTR: do_so\n59.0052\n5.1816\n11.39\n&lt;1e-29\n36.1992\n\n\nCTR: spt\n33.7817\n3.2883\n10.27\n&lt;1e-24\n23.2561\n\n\nCTR: grv\n2.7469\n2.2146\n1.24\n0.2148\n9.5149\n\n\nResidual\n69.8348\n\n\n\n\n\n\n\n\n\nThe three contrasts for one main effect and two nested contrasts are orthogonal. There is no test of the interaction (parallelism).",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#standard-contrasts",
    "href": "contrasts_kwdyz11.html#standard-contrasts",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "7.1 Standard contrasts",
    "text": "7.1 Standard contrasts\nThe most commonly used contrasts are DummyCoding and EffectsCoding (which are similar to contr.treatment() and contr.sum() in R, respectively).",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#exotic-contrasts-rk-well",
    "href": "contrasts_kwdyz11.html#exotic-contrasts-rk-well",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "7.2 ‚ÄúExotic‚Äù contrasts (rk: well ‚Ä¶)",
    "text": "7.2 ‚ÄúExotic‚Äù contrasts (rk: well ‚Ä¶)\nWe also provide HelmertCoding and SeqDiffCoding (corresponding to base R‚Äôs contr.helmert() and MASS::contr.sdif()).",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "contrasts_kwdyz11.html#manual-contrasts",
    "href": "contrasts_kwdyz11.html#manual-contrasts",
    "title": "Contrast Coding of Visual Attention Effects",
    "section": "7.3 Manual contrasts",
    "text": "7.3 Manual contrasts\nContrastsCoding()\nThere are two ways to manually specify contrasts. First, you can specify them directly via ContrastsCoding. If you do, it‚Äôs good practice to specify the levels corresponding to the rows of the matrix, although they can be omitted in which case they‚Äôll be inferred from the data.\nHypothesisCoding()\nA better way to specify manual contrasts is via HypothesisCoding, where each row of the matrix corresponds to the weights given to the cell means of the levels corresponding to each column (see Schad et al. (2020) for more information).\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.",
    "crumbs": [
      "Contrast coding and transformations",
      "Contrast Coding of Visual Attention Effects"
    ]
  },
  {
    "objectID": "check_emotikon_transform.html",
    "href": "check_emotikon_transform.html",
    "title": "Transformed and original metrics in Emotikon",
    "section": "",
    "text": "In F√ºhner et al. (2021) the original metric of two tasks (Star, S20) is time, but they were transformed to speed scores in the publication prior to computing z-scores. The critical result is the absence of evidence for the age x Sex x Test interaction. Is this interaction significant if we analyse all tasks in their original metric?\nFitting the LMM of the publication takes time, roughly 1 hour. However, if you save the model parameters (and other relevant information), you can restore the fitted model object very quickly. The notebook also illustrates this procedure."
  },
  {
    "objectID": "check_emotikon_transform.html#getting-the-packages-and-data",
    "href": "check_emotikon_transform.html#getting-the-packages-and-data",
    "title": "Transformed and original metrics in Emotikon",
    "section": "1 Getting the packages and data",
    "text": "1 Getting the packages and data\n\n\nCode\nusing AlgebraOfGraphics\nusing Arrow\nusing CairoMakie\nusing DataFrames\nusing DataFrameMacros\nusing MixedModels\nusing MixedModelsMakie\nusing RCall\nusing SMLP2025: dataset\nusing Serialization\nusing StatsBase\n\n\n\n1.1 Data and figure in publication\n\ndat = DataFrame(dataset(:fggk21))\n\n525126√ó7 DataFrame525101 rows omitted\n\n\n\nRow\nCohort\nSchool\nChild\nSex\nage\nTest\nscore\n\n\n\nString\nString\nString\nString\nFloat64\nString\nFloat64\n\n\n\n\n1\n2013\nS100067\nC002352\nmale\n7.99452\nS20_r\n5.26316\n\n\n2\n2013\nS100067\nC002352\nmale\n7.99452\nBPT\n3.7\n\n\n3\n2013\nS100067\nC002352\nmale\n7.99452\nSLJ\n125.0\n\n\n4\n2013\nS100067\nC002352\nmale\n7.99452\nStar_r\n2.47146\n\n\n5\n2013\nS100067\nC002352\nmale\n7.99452\nRun\n1053.0\n\n\n6\n2013\nS100067\nC002353\nmale\n7.99452\nS20_r\n5.0\n\n\n7\n2013\nS100067\nC002353\nmale\n7.99452\nBPT\n4.1\n\n\n8\n2013\nS100067\nC002353\nmale\n7.99452\nSLJ\n116.0\n\n\n9\n2013\nS100067\nC002353\nmale\n7.99452\nStar_r\n1.76778\n\n\n10\n2013\nS100067\nC002353\nmale\n7.99452\nRun\n1089.0\n\n\n11\n2013\nS100067\nC002354\nmale\n7.99452\nS20_r\n4.54545\n\n\n12\n2013\nS100067\nC002354\nmale\n7.99452\nBPT\n3.9\n\n\n13\n2013\nS100067\nC002354\nmale\n7.99452\nSLJ\n111.0\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n525115\n2018\nS401470\nC117964\nmale\n9.10609\nStar_r\n1.63704\n\n\n525116\n2018\nS401470\nC117964\nmale\n9.10609\nRun\n864.0\n\n\n525117\n2018\nS401470\nC117965\nfemale\n9.10609\nS20_r\n4.65116\n\n\n525118\n2018\nS401470\nC117965\nfemale\n9.10609\nBPT\n3.8\n\n\n525119\n2018\nS401470\nC117965\nfemale\n9.10609\nSLJ\n123.0\n\n\n525120\n2018\nS401470\nC117965\nfemale\n9.10609\nStar_r\n1.52889\n\n\n525121\n2018\nS401470\nC117965\nfemale\n9.10609\nRun\n1080.0\n\n\n525122\n2018\nS800200\nC117966\nmale\n9.10609\nS20_r\n4.54545\n\n\n525123\n2018\nS800200\nC117966\nmale\n9.10609\nBPT\n3.8\n\n\n525124\n2018\nS800200\nC117966\nmale\n9.10609\nSLJ\n100.0\n\n\n525125\n2018\nS800200\nC117966\nmale\n9.10609\nStar_r\n2.18506\n\n\n525126\n2018\nS800200\nC117966\nmale\n9.10609\nRun\n990.0\n\n\n\n\n\n\n\n@transform!(dat, :a1 = :age - 8.5);\nselect!(groupby(dat, :Test), :, :score =&gt; zscore =&gt; :zScore);\ndescribe(dat)\n\n9√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nTest\n\nBPT\n\nStar_r\n0\nString\n\n\n2\nCohort\n\n2011\n\n2019\n0\nString\n\n\n3\nSchool\n\nS100043\n\nS800200\n0\nString\n\n\n4\nChild\n\nC002352\n\nC117966\n0\nString\n\n\n5\nSex\n\nfemale\n\nmale\n0\nString\n\n\n6\nage\n8.56073\n7.99452\n8.55852\n9.10609\n0\nFloat64\n\n\n7\nscore\n226.141\n1.14152\n4.65116\n1530.0\n0\nFloat64\n\n\n8\na1\n0.0607297\n-0.505476\n0.0585216\n0.606092\n0\nFloat64\n\n\n9\nzScore\n-3.91914e-13\n-3.1542\n0.00031088\n3.55078\n0\nFloat64\n\n\n\n\n\n\n\n\n1.2 Data and figure with z-scores based on original metric\n\n# dat_om = rcopy(R\"readRDS('./data/fggk21_om.rds')\");  #Don't know what the _om is\n# @transform!(dat_om, :a1 = :age - 8.5);\n# select!(groupby(dat_om, :Test), :, :score =&gt; zscore =&gt; :zScore);\n# describe(dat_om)"
  },
  {
    "objectID": "check_emotikon_transform.html#lmms",
    "href": "check_emotikon_transform.html#lmms",
    "title": "Transformed and original metrics in Emotikon",
    "section": "2 LMMs",
    "text": "2 LMMs\n\n2.1 Contrasts\n\ncontrasts = Dict(\n  :Test =&gt; SeqDiffCoding(),\n  :Sex =&gt; HelmertCoding(),\n);\n\n\n\n2.2 Formula\n\nf1 = @formula zScore ~\n  1 +\n  Test * a1 * Sex +\n  (1 + Test + a1 + Sex | School) +\n  (1 + Test | Child) +\n  zerocorr(1 + Test | Cohort);\n\n\n\n2.3 Restore LMM m1 from publication\n\nCommand for fitting LMM m1 = fit(MixedModel, f1, dat, contrasts=contr)\nFit statistics for LMM m1: Minimizing 5179 Time: 0 Time: 1:00:38 ( 0.70 s/it)\n\n\nm1x = LinearMixedModel(f1, dat; contrasts)\nrestoreoptsum!(m1x, \"./fits/fggk21_m1_optsum.json\")\n\n\n‚îå Warning: optsum was saved with an older version of MixedModels.jl: consider resaving.\n‚îî @ MixedModels ~/.julia/packages/MixedModels/bu3nA/src/serialization.jl:94\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\nœÉ_School\nœÉ_Cohort\n\n\n(Intercept)\n-0.0383\n0.0108\n-3.56\n0.0004\n0.5939\n0.2024\n0.0157\n\n\nTest: Run\n-0.0228\n0.0274\n-0.83\n0.4052\n0.8384\n0.3588\n0.0651\n\n\nTest: S20_r\n-0.0147\n0.0405\n-0.36\n0.7171\n0.5825\n0.3596\n0.1107\n\n\nTest: SLJ\n0.0328\n0.0330\n0.99\n0.3198\n0.4127\n0.3027\n0.0896\n\n\nTest: Star_r\n0.0006\n0.0197\n0.03\n0.9763\n0.5574\n0.3620\n0.0313\n\n\na1\n0.2713\n0.0086\n31.63\n&lt;1e-99\n\n0.0966\n\n\n\nSex: male\n0.2064\n0.0024\n86.55\n&lt;1e-99\n\n0.0245\n\n\n\nTest: Run & a1\n-0.4464\n0.0131\n-34.05\n&lt;1e-99\n\n\n\n\n\nTest: S20_r & a1\n0.1473\n0.0114\n12.97\n&lt;1e-37\n\n\n\n\n\nTest: SLJ & a1\n-0.0068\n0.0103\n-0.66\n0.5116\n\n\n\n\n\nTest: Star_r & a1\n0.0761\n0.0111\n6.84\n&lt;1e-11\n\n\n\n\n\nTest: Run & Sex: male\n-0.0900\n0.0037\n-24.10\n&lt;1e-99\n\n\n\n\n\nTest: S20_r & Sex: male\n-0.0912\n0.0032\n-28.23\n&lt;1e-99\n\n\n\n\n\nTest: SLJ & Sex: male\n0.0330\n0.0029\n11.24\n&lt;1e-28\n\n\n\n\n\nTest: Star_r & Sex: male\n-0.0720\n0.0032\n-22.65\n&lt;1e-99\n\n\n\n\n\na1 & Sex: male\n0.0010\n0.0069\n0.14\n0.8876\n\n\n\n\n\nTest: Run & a1 & Sex: male\n-0.0154\n0.0126\n-1.22\n0.2233\n\n\n\n\n\nTest: S20_r & a1 & Sex: male\n0.0129\n0.0109\n1.18\n0.2380\n\n\n\n\n\nTest: SLJ & a1 & Sex: male\n-0.0098\n0.0100\n-0.98\n0.3256\n\n\n\n\n\nTest: Star_r & a1 & Sex: male\n0.0166\n0.0108\n1.54\n0.1241\n\n\n\n\n\nResidual\n0.5880\n\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m1x)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\n\nChild\n(Intercept)\n0.3527294\n0.5939103\n\n\n\n\n\n\n\n\n\nTest: Run\n0.7029003\n0.8383915\n+0.11\n\n\n\n\n\n\n\n\nTest: S20_r\n0.3393356\n0.5825252\n+0.19\n-0.53\n\n\n\n\n\n\n\nTest: SLJ\n0.1702900\n0.4126621\n+0.05\n-0.14\n-0.29\n\n\n\n\n\n\nTest: Star_r\n0.3107227\n0.5574251\n-0.10\n+0.01\n-0.13\n-0.42\n\n\n\n\nSchool\n(Intercept)\n0.0409640\n0.2023957\n\n\n\n\n\n\n\n\n\nTest: Run\n0.1287690\n0.3588440\n+0.26\n\n\n\n\n\n\n\n\nTest: S20_r\n0.1293351\n0.3596319\n+0.01\n-0.57\n\n\n\n\n\n\n\nTest: SLJ\n0.0916522\n0.3027411\n-0.13\n+0.01\n-0.53\n\n\n\n\n\n\nTest: Star_r\n0.1310575\n0.3620187\n+0.26\n+0.09\n-0.06\n-0.28\n\n\n\n\n\na1\n0.0093412\n0.0966499\n+0.48\n+0.25\n-0.15\n-0.01\n+0.12\n\n\n\n\nSex: male\n0.0005999\n0.0244934\n+0.09\n+0.13\n-0.01\n+0.05\n-0.19\n+0.25\n\n\nCohort\n(Intercept)\n0.0002452\n0.0156587\n\n\n\n\n\n\n\n\n\nTest: Run\n0.0042389\n0.0651068\n.\n\n\n\n\n\n\n\n\nTest: S20_r\n0.0122535\n0.1106954\n.\n.\n\n\n\n\n\n\n\nTest: SLJ\n0.0080210\n0.0895599\n.\n.\n.\n\n\n\n\n\n\nTest: Star_r\n0.0009828\n0.0313498\n.\n.\n.\n.\n\n\n\n\nResidual\n\n0.3456872\n0.5879517\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4 Restore new LMM m1_om Star and S20 in original metric\n\nCommand for fitting LMM m1_om = fit(MixedModel, f1, dat_om, contrasts=contr)\nMinimizing 10502 Time: 0 Time: 2:09:40 ( 0.74 s/it)\nStore with: julia&gt; saveoptsum(‚Äú./fits/fggk21_m1_om_optsum.json‚Äù, m1_om)\nOnly for short-term and when desperate: julia&gt; serialize(‚Äú./fits/m1_om.jls‚Äù, m1_om);\n\n\n2.4.1 ‚Ä¶ restoreoptsum!()\n\nm1_om = LinearMixedModel(f1, dat; contrasts);\nrestoreoptsum!(m1_om, \"./fits/fggk21_m1_om_optsum.json\");\n\n\n\n2.4.2 ‚Ä¶ deserialize()\n\nm1x_om = deserialize(\"./fits/m1_om.jls\")\n\n\nVarCorr(m1x_om)\n\n\n\n\n2.5 Residual diagnostics for LMM m1\nResidual plots for published LMM\n\n#scatter(fitted(m1x), residuals(m1x)\n\n\n#qqnorm(m1x)\n\n\n\n2.6 Residual diagnostics for LMM m1_om\nResidual plots for LMM with Star and Speed in original metric.\n\n#scatter(fitted(m1_om_v2), residuals(m1_om_v2)\n\n\n#qqnorm(m1_om_v2)\n\n\n\nF√ºhner, T., Granacher, U., Golle, K., & Kliegl, R. (2021). Age and sex effects in physical fitness components of 108,295 third graders including 515 primary schools and 9 cohorts. Scientific Reports, 11(1). https://doi.org/10.1038/s41598-021-97000-4\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29."
  },
  {
    "objectID": "arrow.html",
    "href": "arrow.html",
    "title": "Saving data with Arrow",
    "section": "",
    "text": "1 The Arrow storage format\nThe Arrow storage format provides a language-agnostic storage and memory specification for columnar data tables, which just means ‚Äúsomething that looks like a data frame in R‚Äù. That is, an arrow table is an ordered, named collection of columns, all of the same length.\nThe columns can be of different types including numeric values, character strings, and factor-like representations - called DictEncoded.\nAn Arrow file can be read or written from R, Python, Julia and many other languages. Somewhat confusingly in R and Python the name feather, which refers to an earlier version of the storage format, is used in some function names like read_feather.\nInternally, the SMLP2025 package uses Arrow to store all of its datasets.\n\n\n2 The Emotikon data\nThe SMLP2021 repository contains a version of the data from F√ºhner et al. (2021) in notebooks/data/fggk21.arrow. After that file was created there were changes in the master RDS file on the osf.io site for the project. We will recreate the Arrow file here then split it into two separate tables, one with a row for each child in the study and one with a row for each test result.\nThe Arrow package for Julia does not export any function names, which means that the function to read an Arrow file must be called as Arrow.Table. It returns a column table, as described in the Tables package. This is like a read-only data frame, which can be easily converted to a full-fledged DataFrame if desired.\nThis arrangement allows for the Arrow package not to depend on the DataFrames package, which is a heavy-weight dependency, but still easily produce a DataFrame if warranted.\nLoad the packages to be used.\n\n\nCode\nusing AlgebraOfGraphics\nusing Arrow\nusing CairoMakie\nusing Chain\nusing DataFrameMacros\nusing DataFrames\nusing Downloads\nusing KernelDensity\nusing RCall   # access R from within Julia\nusing StatsBase\n\nCairoMakie.activate!(; type=\"svg\")\nusing AlgebraOfGraphics: density\n\n\n\n\n3 Downloading and importing the RDS file\nThis is similar to some of the code shown by Julius Krumbiegel on Monday. In the data directory of the emotikon project on osf.io under Data, the url for the rds data file is found to be [https://osf.io/xawdb/]. Note that we want version 2 of this file.\n\nfn = Downloads.download(\"https://osf.io/xawdb/download?version=2\");\n\n\ndfrm = rcopy(reval(\"\"\"readRDS(\"$(fn)\")\"\"\"))\n\n525126√ó7 DataFrame525101 rows omitted\n\n\n\nRow\nCohort\nSchool\nChild\nSex\nage\nTest\nscore\n\n\n\nCat‚Ä¶\nCat‚Ä¶\nCat‚Ä¶\nCat‚Ä¶\nFloat64\nCat‚Ä¶\nFloat64\n\n\n\n\n1\n2013\nS100067\nC002352\nmale\n7.99452\nS20_r\n5.26316\n\n\n2\n2013\nS100067\nC002352\nmale\n7.99452\nBPT\n3.7\n\n\n3\n2013\nS100067\nC002352\nmale\n7.99452\nSLJ\n125.0\n\n\n4\n2013\nS100067\nC002352\nmale\n7.99452\nStar_r\n2.47146\n\n\n5\n2013\nS100067\nC002352\nmale\n7.99452\nRun\n1053.0\n\n\n6\n2013\nS100067\nC002353\nmale\n7.99452\nS20_r\n5.0\n\n\n7\n2013\nS100067\nC002353\nmale\n7.99452\nBPT\n4.1\n\n\n8\n2013\nS100067\nC002353\nmale\n7.99452\nSLJ\n116.0\n\n\n9\n2013\nS100067\nC002353\nmale\n7.99452\nStar_r\n1.76778\n\n\n10\n2013\nS100067\nC002353\nmale\n7.99452\nRun\n1089.0\n\n\n11\n2013\nS100067\nC002354\nmale\n7.99452\nS20_r\n4.54545\n\n\n12\n2013\nS100067\nC002354\nmale\n7.99452\nBPT\n3.9\n\n\n13\n2013\nS100067\nC002354\nmale\n7.99452\nSLJ\n111.0\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n525115\n2018\nS401470\nC117964\nmale\n9.10609\nStar_r\n1.63704\n\n\n525116\n2018\nS401470\nC117964\nmale\n9.10609\nRun\n864.0\n\n\n525117\n2018\nS401470\nC117965\nfemale\n9.10609\nS20_r\n4.65116\n\n\n525118\n2018\nS401470\nC117965\nfemale\n9.10609\nBPT\n3.8\n\n\n525119\n2018\nS401470\nC117965\nfemale\n9.10609\nSLJ\n123.0\n\n\n525120\n2018\nS401470\nC117965\nfemale\n9.10609\nStar_r\n1.52889\n\n\n525121\n2018\nS401470\nC117965\nfemale\n9.10609\nRun\n1080.0\n\n\n525122\n2018\nS800200\nC117966\nmale\n9.10609\nS20_r\n4.54545\n\n\n525123\n2018\nS800200\nC117966\nmale\n9.10609\nBPT\n3.8\n\n\n525124\n2018\nS800200\nC117966\nmale\n9.10609\nSLJ\n100.0\n\n\n525125\n2018\nS800200\nC117966\nmale\n9.10609\nStar_r\n2.18506\n\n\n525126\n2018\nS800200\nC117966\nmale\n9.10609\nRun\n990.0\n\n\n\n\n\n\nNow write this file as a Arrow file and read it back in.\n\narrowfn = joinpath(\"data\", \"fggk21.arrow\")\nArrow.write(arrowfn, dfrm; compress=:lz4)\ntbl = Arrow.Table(arrowfn)\n\nArrow.Table with 525126 rows, 7 columns, and schema:\n :Cohort  String\n :School  String\n :Child   String\n :Sex     String\n :age     Float64\n :Test    String\n :score   Float64\n\n\n\nfilesize(arrowfn)\n\n3077850\n\n\n\ndf = DataFrame(tbl)\n\n525126√ó7 DataFrame525101 rows omitted\n\n\n\nRow\nCohort\nSchool\nChild\nSex\nage\nTest\nscore\n\n\n\nString\nString\nString\nString\nFloat64\nString\nFloat64\n\n\n\n\n1\n2013\nS100067\nC002352\nmale\n7.99452\nS20_r\n5.26316\n\n\n2\n2013\nS100067\nC002352\nmale\n7.99452\nBPT\n3.7\n\n\n3\n2013\nS100067\nC002352\nmale\n7.99452\nSLJ\n125.0\n\n\n4\n2013\nS100067\nC002352\nmale\n7.99452\nStar_r\n2.47146\n\n\n5\n2013\nS100067\nC002352\nmale\n7.99452\nRun\n1053.0\n\n\n6\n2013\nS100067\nC002353\nmale\n7.99452\nS20_r\n5.0\n\n\n7\n2013\nS100067\nC002353\nmale\n7.99452\nBPT\n4.1\n\n\n8\n2013\nS100067\nC002353\nmale\n7.99452\nSLJ\n116.0\n\n\n9\n2013\nS100067\nC002353\nmale\n7.99452\nStar_r\n1.76778\n\n\n10\n2013\nS100067\nC002353\nmale\n7.99452\nRun\n1089.0\n\n\n11\n2013\nS100067\nC002354\nmale\n7.99452\nS20_r\n4.54545\n\n\n12\n2013\nS100067\nC002354\nmale\n7.99452\nBPT\n3.9\n\n\n13\n2013\nS100067\nC002354\nmale\n7.99452\nSLJ\n111.0\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n525115\n2018\nS401470\nC117964\nmale\n9.10609\nStar_r\n1.63704\n\n\n525116\n2018\nS401470\nC117964\nmale\n9.10609\nRun\n864.0\n\n\n525117\n2018\nS401470\nC117965\nfemale\n9.10609\nS20_r\n4.65116\n\n\n525118\n2018\nS401470\nC117965\nfemale\n9.10609\nBPT\n3.8\n\n\n525119\n2018\nS401470\nC117965\nfemale\n9.10609\nSLJ\n123.0\n\n\n525120\n2018\nS401470\nC117965\nfemale\n9.10609\nStar_r\n1.52889\n\n\n525121\n2018\nS401470\nC117965\nfemale\n9.10609\nRun\n1080.0\n\n\n525122\n2018\nS800200\nC117966\nmale\n9.10609\nS20_r\n4.54545\n\n\n525123\n2018\nS800200\nC117966\nmale\n9.10609\nBPT\n3.8\n\n\n525124\n2018\nS800200\nC117966\nmale\n9.10609\nSLJ\n100.0\n\n\n525125\n2018\nS800200\nC117966\nmale\n9.10609\nStar_r\n2.18506\n\n\n525126\n2018\nS800200\nC117966\nmale\n9.10609\nRun\n990.0\n\n\n\n\n\n\n\n\n4 Avoiding needless repetition\nOne of the principles of relational database design is that information should not be repeated needlessly. Each row of df is determined by a combination of Child and Test, together producing a score, which can be converted to a zScore.\nThe other columns in the table, Cohort, School, age, and Sex, are properties of the Child.\nStoring these values redundantly in the full table takes up space but, more importantly, allows for inconsistency. As it stands, a given Child could be recorded as being in one Cohort for the Run test and in another Cohort for the S20_r test and nothing about the table would detect this as being an error.\nThe approach used in relational databases is to store the information for score in one table that contains only Child, Test and score, store the information for the Child in another table including Cohort, School, age and Sex. These tables can then be combined to create the table to be used for analysis by joining the different tables together.\nThe maintainers of the DataFrames package have put in a lot of work over the past few years to make joins quite efficient in Julia. Thus the processing penalty of reassembling the big table from three smaller tables is minimal.\nIt is important to note that the main advantage of using smaller tables that are joined together to produce the analysis table is the fact that the information in the analysis table is consistent by design.\n\n\n5 Creating the smaller table\n\nChild = unique(select(df, :Child, :School, :Cohort, :Sex, :age))\n\n108295√ó5 DataFrame108270 rows omitted\n\n\n\nRow\nChild\nSchool\nCohort\nSex\nage\n\n\n\nString\nString\nString\nString\nFloat64\n\n\n\n\n1\nC002352\nS100067\n2013\nmale\n7.99452\n\n\n2\nC002353\nS100067\n2013\nmale\n7.99452\n\n\n3\nC002354\nS100067\n2013\nmale\n7.99452\n\n\n4\nC002355\nS100122\n2013\nfemale\n7.99452\n\n\n5\nC002356\nS100146\n2013\nmale\n7.99452\n\n\n6\nC002357\nS100146\n2013\nmale\n7.99452\n\n\n7\nC002358\nS100146\n2013\nmale\n7.99452\n\n\n8\nC002359\nS100183\n2013\nfemale\n7.99452\n\n\n9\nC002360\nS100195\n2013\nfemale\n7.99452\n\n\n10\nC002361\nS100213\n2013\nmale\n7.99452\n\n\n11\nC002362\nS100237\n2013\nfemale\n7.99452\n\n\n12\nC002363\nS100237\n2013\nfemale\n7.99452\n\n\n13\nC002364\nS100250\n2013\nfemale\n7.99452\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n108284\nC117943\nS130539\n2018\nfemale\n9.10609\n\n\n108285\nC117944\nS130539\n2018\nmale\n9.10609\n\n\n108286\nC117945\nS130539\n2018\nmale\n9.10609\n\n\n108287\nC117946\nS130539\n2018\nmale\n9.10609\n\n\n108288\nC117956\nS400580\n2018\nmale\n9.10609\n\n\n108289\nC117957\nS400919\n2018\nmale\n9.10609\n\n\n108290\nC117958\nS400919\n2018\nmale\n9.10609\n\n\n108291\nC117959\nS400919\n2018\nmale\n9.10609\n\n\n108292\nC117962\nS401250\n2018\nfemale\n9.10609\n\n\n108293\nC117964\nS401470\n2018\nmale\n9.10609\n\n\n108294\nC117965\nS401470\n2018\nfemale\n9.10609\n\n\n108295\nC117966\nS800200\n2018\nmale\n9.10609\n\n\n\n\n\n\n\nlength(unique(Child.Child))  # should be 108295\n\n108295\n\n\n\nfilesize(\n  Arrow.write(\"./data/fggk21_Child.arrow\", Child; compress=:lz4)\n)\n\n1774946\n\n\n\nfilesize(\n  Arrow.write(\n    \"./data/fggk21_Score.arrow\",\n    select(df, :Child, :Test, :score);\n    compress=:lz4,\n  ),\n)\n\n2794058\n\n\n\n\n\n\n\n\nNote\n\n\n\nA careful examination of the file sizes versus that of ./data/fggk21.arrow will show that the separate tables combined take up more space than the original because of the compression. Compression algorithms are often more successful when applied to larger files.\n\n\nNow read the Arrow tables in and reassemble the original table.\n\nScore = DataFrame(Arrow.Table(\"./data/fggk21_Score.arrow\"))\n\n525126√ó3 DataFrame525101 rows omitted\n\n\n\nRow\nChild\nTest\nscore\n\n\n\nString\nString\nFloat64\n\n\n\n\n1\nC002352\nS20_r\n5.26316\n\n\n2\nC002352\nBPT\n3.7\n\n\n3\nC002352\nSLJ\n125.0\n\n\n4\nC002352\nStar_r\n2.47146\n\n\n5\nC002352\nRun\n1053.0\n\n\n6\nC002353\nS20_r\n5.0\n\n\n7\nC002353\nBPT\n4.1\n\n\n8\nC002353\nSLJ\n116.0\n\n\n9\nC002353\nStar_r\n1.76778\n\n\n10\nC002353\nRun\n1089.0\n\n\n11\nC002354\nS20_r\n4.54545\n\n\n12\nC002354\nBPT\n3.9\n\n\n13\nC002354\nSLJ\n111.0\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n525115\nC117964\nStar_r\n1.63704\n\n\n525116\nC117964\nRun\n864.0\n\n\n525117\nC117965\nS20_r\n4.65116\n\n\n525118\nC117965\nBPT\n3.8\n\n\n525119\nC117965\nSLJ\n123.0\n\n\n525120\nC117965\nStar_r\n1.52889\n\n\n525121\nC117965\nRun\n1080.0\n\n\n525122\nC117966\nS20_r\n4.54545\n\n\n525123\nC117966\nBPT\n3.8\n\n\n525124\nC117966\nSLJ\n100.0\n\n\n525125\nC117966\nStar_r\n2.18506\n\n\n525126\nC117966\nRun\n990.0\n\n\n\n\n\n\nAt this point we can create the z-score column by standardizing the scores for each Test. The code to do this follows Julius‚Äôs presentation on Monday.\n\n@transform!(groupby(Score, :Test), :zScore = @bycol zscore(:score))\n\n525126√ó4 DataFrame525101 rows omitted\n\n\n\nRow\nChild\nTest\nscore\nzScore\n\n\n\nString\nString\nFloat64\nFloat64\n\n\n\n\n1\nC002352\nS20_r\n5.26316\n1.7913\n\n\n2\nC002352\nBPT\n3.7\n-0.0622317\n\n\n3\nC002352\nSLJ\n125.0\n-0.0336567\n\n\n4\nC002352\nStar_r\n2.47146\n1.46874\n\n\n5\nC002352\nRun\n1053.0\n0.331058\n\n\n6\nC002353\nS20_r\n5.0\n1.15471\n\n\n7\nC002353\nBPT\n4.1\n0.498354\n\n\n8\nC002353\nSLJ\n116.0\n-0.498822\n\n\n9\nC002353\nStar_r\n1.76778\n-0.9773\n\n\n10\nC002353\nRun\n1089.0\n0.574056\n\n\n11\nC002354\nS20_r\n4.54545\n0.0551481\n\n\n12\nC002354\nBPT\n3.9\n0.218061\n\n\n13\nC002354\nSLJ\n111.0\n-0.757248\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n525115\nC117964\nStar_r\n1.63704\n-1.43175\n\n\n525116\nC117964\nRun\n864.0\n-0.944681\n\n\n525117\nC117965\nS20_r\n4.65116\n0.31086\n\n\n525118\nC117965\nBPT\n3.8\n0.0779146\n\n\n525119\nC117965\nSLJ\n123.0\n-0.137027\n\n\n525120\nC117965\nStar_r\n1.52889\n-1.8077\n\n\n525121\nC117965\nRun\n1080.0\n0.513306\n\n\n525122\nC117966\nS20_r\n4.54545\n0.0551481\n\n\n525123\nC117966\nBPT\n3.8\n0.0779146\n\n\n525124\nC117966\nSLJ\n100.0\n-1.32578\n\n\n525125\nC117966\nStar_r\n2.18506\n0.473217\n\n\n525126\nC117966\nRun\n990.0\n-0.0941883\n\n\n\n\n\n\n\nChild = DataFrame(Arrow.Table(\"./data/fggk21_Child.arrow\"))\n\n108295√ó5 DataFrame108270 rows omitted\n\n\n\nRow\nChild\nSchool\nCohort\nSex\nage\n\n\n\nString\nString\nString\nString\nFloat64\n\n\n\n\n1\nC002352\nS100067\n2013\nmale\n7.99452\n\n\n2\nC002353\nS100067\n2013\nmale\n7.99452\n\n\n3\nC002354\nS100067\n2013\nmale\n7.99452\n\n\n4\nC002355\nS100122\n2013\nfemale\n7.99452\n\n\n5\nC002356\nS100146\n2013\nmale\n7.99452\n\n\n6\nC002357\nS100146\n2013\nmale\n7.99452\n\n\n7\nC002358\nS100146\n2013\nmale\n7.99452\n\n\n8\nC002359\nS100183\n2013\nfemale\n7.99452\n\n\n9\nC002360\nS100195\n2013\nfemale\n7.99452\n\n\n10\nC002361\nS100213\n2013\nmale\n7.99452\n\n\n11\nC002362\nS100237\n2013\nfemale\n7.99452\n\n\n12\nC002363\nS100237\n2013\nfemale\n7.99452\n\n\n13\nC002364\nS100250\n2013\nfemale\n7.99452\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n108284\nC117943\nS130539\n2018\nfemale\n9.10609\n\n\n108285\nC117944\nS130539\n2018\nmale\n9.10609\n\n\n108286\nC117945\nS130539\n2018\nmale\n9.10609\n\n\n108287\nC117946\nS130539\n2018\nmale\n9.10609\n\n\n108288\nC117956\nS400580\n2018\nmale\n9.10609\n\n\n108289\nC117957\nS400919\n2018\nmale\n9.10609\n\n\n108290\nC117958\nS400919\n2018\nmale\n9.10609\n\n\n108291\nC117959\nS400919\n2018\nmale\n9.10609\n\n\n108292\nC117962\nS401250\n2018\nfemale\n9.10609\n\n\n108293\nC117964\nS401470\n2018\nmale\n9.10609\n\n\n108294\nC117965\nS401470\n2018\nfemale\n9.10609\n\n\n108295\nC117966\nS800200\n2018\nmale\n9.10609\n\n\n\n\n\n\n\ndf1 = disallowmissing!(leftjoin(Score, Child; on=:Child))\n\n525126√ó8 DataFrame525101 rows omitted\n\n\n\nRow\nChild\nTest\nscore\nzScore\nSchool\nCohort\nSex\nage\n\n\n\nString\nString\nFloat64\nFloat64\nString\nString\nString\nFloat64\n\n\n\n\n1\nC002352\nS20_r\n5.26316\n1.7913\nS100067\n2013\nmale\n7.99452\n\n\n2\nC002352\nBPT\n3.7\n-0.0622317\nS100067\n2013\nmale\n7.99452\n\n\n3\nC002352\nSLJ\n125.0\n-0.0336567\nS100067\n2013\nmale\n7.99452\n\n\n4\nC002352\nStar_r\n2.47146\n1.46874\nS100067\n2013\nmale\n7.99452\n\n\n5\nC002352\nRun\n1053.0\n0.331058\nS100067\n2013\nmale\n7.99452\n\n\n6\nC002353\nS20_r\n5.0\n1.15471\nS100067\n2013\nmale\n7.99452\n\n\n7\nC002353\nBPT\n4.1\n0.498354\nS100067\n2013\nmale\n7.99452\n\n\n8\nC002353\nSLJ\n116.0\n-0.498822\nS100067\n2013\nmale\n7.99452\n\n\n9\nC002353\nStar_r\n1.76778\n-0.9773\nS100067\n2013\nmale\n7.99452\n\n\n10\nC002353\nRun\n1089.0\n0.574056\nS100067\n2013\nmale\n7.99452\n\n\n11\nC002354\nS20_r\n4.54545\n0.0551481\nS100067\n2013\nmale\n7.99452\n\n\n12\nC002354\nBPT\n3.9\n0.218061\nS100067\n2013\nmale\n7.99452\n\n\n13\nC002354\nSLJ\n111.0\n-0.757248\nS100067\n2013\nmale\n7.99452\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n525115\nC117964\nStar_r\n1.63704\n-1.43175\nS401470\n2018\nmale\n9.10609\n\n\n525116\nC117964\nRun\n864.0\n-0.944681\nS401470\n2018\nmale\n9.10609\n\n\n525117\nC117965\nS20_r\n4.65116\n0.31086\nS401470\n2018\nfemale\n9.10609\n\n\n525118\nC117965\nBPT\n3.8\n0.0779146\nS401470\n2018\nfemale\n9.10609\n\n\n525119\nC117965\nSLJ\n123.0\n-0.137027\nS401470\n2018\nfemale\n9.10609\n\n\n525120\nC117965\nStar_r\n1.52889\n-1.8077\nS401470\n2018\nfemale\n9.10609\n\n\n525121\nC117965\nRun\n1080.0\n0.513306\nS401470\n2018\nfemale\n9.10609\n\n\n525122\nC117966\nS20_r\n4.54545\n0.0551481\nS800200\n2018\nmale\n9.10609\n\n\n525123\nC117966\nBPT\n3.8\n0.0779146\nS800200\n2018\nmale\n9.10609\n\n\n525124\nC117966\nSLJ\n100.0\n-1.32578\nS800200\n2018\nmale\n9.10609\n\n\n525125\nC117966\nStar_r\n2.18506\n0.473217\nS800200\n2018\nmale\n9.10609\n\n\n525126\nC117966\nRun\n990.0\n-0.0941883\nS800200\n2018\nmale\n9.10609\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe call to disallowmissing! is because the join will create columns that allow for missing values but we know that we should not get missing values in the result. This call will fail if, for some reason, missing values were created.\n\n\n\n\n6 Discovering patterns in the data\nOne of the motivations for creating the Child table was to be able to bin the ages according to the age of each child, not the age of each Child-Test combination. Not all children have all 5 test results. We can check the number of results by grouping on :Child and evaluate the number of rows in each group.\n\nnobsChild = combine(groupby(Score, :Child), nrow =&gt; :ntest)\n\n108295√ó2 DataFrame108270 rows omitted\n\n\n\nRow\nChild\nntest\n\n\n\nString\nInt64\n\n\n\n\n1\nC002352\n5\n\n\n2\nC002353\n5\n\n\n3\nC002354\n5\n\n\n4\nC002355\n5\n\n\n5\nC002356\n5\n\n\n6\nC002357\n5\n\n\n7\nC002358\n5\n\n\n8\nC002359\n4\n\n\n9\nC002360\n5\n\n\n10\nC002361\n4\n\n\n11\nC002362\n5\n\n\n12\nC002363\n5\n\n\n13\nC002364\n5\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n108284\nC117943\n5\n\n\n108285\nC117944\n5\n\n\n108286\nC117945\n5\n\n\n108287\nC117946\n5\n\n\n108288\nC117956\n5\n\n\n108289\nC117957\n4\n\n\n108290\nC117958\n5\n\n\n108291\nC117959\n5\n\n\n108292\nC117962\n5\n\n\n108293\nC117964\n5\n\n\n108294\nC117965\n5\n\n\n108295\nC117966\n5\n\n\n\n\n\n\nNow create a table of the number of children with 1, 2, ‚Ä¶, 5 test scores.\n\ncombine(groupby(nobsChild, :ntest), nrow)\n\n5√ó2 DataFrame\n\n\n\nRow\nntest\nnrow\n\n\n\nInt64\nInt64\n\n\n\n\n1\n1\n462\n\n\n2\n2\n729\n\n\n3\n3\n1739\n\n\n4\n4\n8836\n\n\n5\n5\n96529\n\n\n\n\n\n\nA natural question at this point is whether there is something about those students who have few observations. For example, are they from only a few schools?\nOne approach to examining properties like is to add the number of observations for each child to the :Child table. Later we can group the table according to this :ntest to look at properties of :Child by :ntest.\n\ngdf = groupby(\n  disallowmissing!(leftjoin(Child, nobsChild; on=:Child)), :ntest\n)\n\nGroupedDataFrame with 5 groups based on key: ntestFirst Group (462 rows): ntest = 1437 rows omitted\n\n\n\nRow\nChild\nSchool\nCohort\nSex\nage\nntest\n\n\n\nString\nString\nString\nString\nFloat64\nInt64\n\n\n\n\n1\nC002452\nS101175\n2013\nmale\n7.99452\n1\n\n\n2\nC002625\nS103329\n2013\nmale\n7.99452\n1\n\n\n3\nC002754\nS104814\n2013\nfemale\n7.99452\n1\n\n\n4\nC003269\nS102258\n2012\nfemale\n7.99726\n1\n\n\n5\nC003599\nS105843\n2012\nfemale\n7.99726\n1\n\n\n6\nC003807\nS100754\n2011\nmale\n8.0\n1\n\n\n7\nC003985\nS102945\n2011\nmale\n8.0\n1\n\n\n8\nC004086\nS104255\n2011\nmale\n8.0\n1\n\n\n9\nC004657\nS101400\n2014\nmale\n8.03833\n1\n\n\n10\nC005036\nS105909\n2014\nmale\n8.03833\n1\n\n\n11\nC005440\nS101023\n2019\nmale\n8.05202\n1\n\n\n12\nC005523\nS101825\n2019\nfemale\n8.05202\n1\n\n\n13\nC005697\nS103615\n2019\nmale\n8.05202\n1\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n451\nC112638\nS103718\n2015\nfemale\n9.0486\n1\n\n\n452\nC114749\nS112938\n2017\nmale\n9.06502\n1\n\n\n453\nC115460\nS101953\n2015\nmale\n9.08145\n1\n\n\n454\nC115569\nS100572\n2017\nmale\n9.08419\n1\n\n\n455\nC115587\nS100754\n2017\nfemale\n9.08419\n1\n\n\n456\nC117108\nS103196\n2018\nfemale\n9.10609\n1\n\n\n457\nC117229\nS103615\n2018\nmale\n9.10609\n1\n\n\n458\nC117230\nS103615\n2018\nmale\n9.10609\n1\n\n\n459\nC117419\nS104954\n2018\nfemale\n9.10609\n1\n\n\n460\nC117437\nS105004\n2018\nmale\n9.10609\n1\n\n\n461\nC117539\nS105636\n2018\nmale\n9.10609\n1\n\n\n462\nC117659\nS106483\n2018\nfemale\n9.10609\n1\n\n\n\n‚ãÆLast Group (96529 rows): ntest = 596504 rows omitted\n\n\n\nRow\nChild\nSchool\nCohort\nSex\nage\nntest\n\n\n\nString\nString\nString\nString\nFloat64\nInt64\n\n\n\n\n1\nC002352\nS100067\n2013\nmale\n7.99452\n5\n\n\n2\nC002353\nS100067\n2013\nmale\n7.99452\n5\n\n\n3\nC002354\nS100067\n2013\nmale\n7.99452\n5\n\n\n4\nC002355\nS100122\n2013\nfemale\n7.99452\n5\n\n\n5\nC002356\nS100146\n2013\nmale\n7.99452\n5\n\n\n6\nC002357\nS100146\n2013\nmale\n7.99452\n5\n\n\n7\nC002358\nS100146\n2013\nmale\n7.99452\n5\n\n\n8\nC002360\nS100195\n2013\nfemale\n7.99452\n5\n\n\n9\nC002362\nS100237\n2013\nfemale\n7.99452\n5\n\n\n10\nC002363\nS100237\n2013\nfemale\n7.99452\n5\n\n\n11\nC002364\nS100250\n2013\nfemale\n7.99452\n5\n\n\n12\nC002365\nS100304\n2013\nmale\n7.99452\n5\n\n\n13\nC002366\nS100304\n2013\nmale\n7.99452\n5\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n96518\nC117942\nS130539\n2018\nmale\n9.10609\n5\n\n\n96519\nC117943\nS130539\n2018\nfemale\n9.10609\n5\n\n\n96520\nC117944\nS130539\n2018\nmale\n9.10609\n5\n\n\n96521\nC117945\nS130539\n2018\nmale\n9.10609\n5\n\n\n96522\nC117946\nS130539\n2018\nmale\n9.10609\n5\n\n\n96523\nC117956\nS400580\n2018\nmale\n9.10609\n5\n\n\n96524\nC117958\nS400919\n2018\nmale\n9.10609\n5\n\n\n96525\nC117959\nS400919\n2018\nmale\n9.10609\n5\n\n\n96526\nC117962\nS401250\n2018\nfemale\n9.10609\n5\n\n\n96527\nC117964\nS401470\n2018\nmale\n9.10609\n5\n\n\n96528\nC117965\nS401470\n2018\nfemale\n9.10609\n5\n\n\n96529\nC117966\nS800200\n2018\nmale\n9.10609\n5\n\n\n\n\n\n\nAre the sexes represented more-or-less equally?\n\ncombine(groupby(first(gdf), :Sex), nrow =&gt; :nchild)\n\n2√ó2 DataFrame\n\n\n\nRow\nSex\nnchild\n\n\n\nString\nInt64\n\n\n\n\n1\nmale\n230\n\n\n2\nfemale\n232\n\n\n\n\n\n\n\ncombine(groupby(last(gdf), :Sex), nrow =&gt; :nchild)\n\n2√ó2 DataFrame\n\n\n\nRow\nSex\nnchild\n\n\n\nString\nInt64\n\n\n\n\n1\nmale\n47552\n\n\n2\nfemale\n48977\n\n\n\n\n\n\n\n\n7 Reading Arrow files in other languages\nThere are Arrow implementations for R (the arrow package) and for Python (pyarrow).\n\nimport pyarrow.feather: read_table\nread_table(\"./data/fggk21.arrow\")\n\n\nlibrary(arrow)\nread_ipc_file(\"./data/fggk21.arrow\")\n\n\n\n8 References\n\n\nF√ºhner, T., Granacher, U., Golle, K., & Kliegl, R. (2021). Age and sex effects in physical fitness components of 108,295 third graders including 515 primary schools and 9 cohorts. Scientific Reports, 11(1). https://doi.org/10.1038/s41598-021-97000-4\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.\n\n\n\n\n Back to top",
    "crumbs": [
      "Getting started with Julia",
      "Saving data with Arrow"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\n\n Back to top"
  },
  {
    "objectID": "AoGPlots.html",
    "href": "AoGPlots.html",
    "title": "Creating multi-panel plots",
    "section": "",
    "text": "This notebook shows creating a multi-panel plot similar to Figure 2 of F√ºhner et al. (2021).\nThe data are available from the SMLP2025 example datasets.\n\n\nCode\nusing Arrow\nusing AlgebraOfGraphics\nusing CairoMakie   # for displaying static plots\nusing DataFrames\nusing Statistics\nusing StatsBase\nusing SMLP2025: dataset\n\n\n\ntbl = dataset(\"fggk21\")\n\n\n[ Info: Downloading dataset...\n[ Info: done\n\n\n\n\nArrow.Table with 525126 rows, 7 columns, and schema:\n :Cohort  String\n :School  String\n :Child   String\n :Sex     String\n :age     Float64\n :Test    String\n :score   Float64\n\n\n\ntypeof(tbl)\n\nArrow.Table\n\n\n\ndf = DataFrame(tbl)\ntypeof(df)\n\nDataFrame\n\n\n\n1 Creating a summary data frame\nThe response to be plotted is the mean score by Test and Sex and age, rounded to the nearest 0.1 years.\nThe first task is to round the age to 1 digit after the decimal place, which can be done with select applied to a DataFrame. In some ways this is the most complicated expression in creating the plot so we will break it down. select is applied to DataFrame(dat), which is the conversion of the Arrow.Table, dat, to a DataFrame. This is necessary because an Arrow.Table is immutable but a DataFrame can be modified.\nThe arguments after the DataFrame describe how to modify the contents. The first : indicates that all the existing columns should be included. The other expression can be pairs (created with the =&gt; operator) of the form :col =&gt; function or of the form :col =&gt; function =&gt; :newname. (See the documentation of the DataFrames package for details.)\nIn this case the function is an anonymous function of the form round.(x, digits=1) where ‚Äúdot-broadcasting‚Äù is used to apply to the entire column (see this documentation for details).\n\ntransform!(df, :age, :age =&gt; (x -&gt; x .- 8.5) =&gt; :a1) # centered age (linear)\nselect!(groupby(df, :Test), :, :score =&gt; zscore =&gt; :zScore) # z-score\ntlabels = [     # establish order and labels of tbl.Test\n  \"Run\" =&gt; \"Endurance\",\n  \"Star_r\" =&gt; \"Coordination\",\n  \"S20_r\" =&gt; \"Speed\",\n  \"SLJ\" =&gt; \"PowerLOW\",\n  \"BPT\" =&gt; \"PowerUP\",\n];\n\nThe next stage is a group-apply-combine operation to group the rows by Sex, Test and rnd_age then apply mean to the zScore and also apply length to zScore to record the number in each group.\n\ndf2 = combine(\n  groupby(\n    select(df, :, :age =&gt; ByRow(x -&gt; round(x; digits=1)) =&gt; :age),\n    [:Sex, :Test, :age],\n  ),\n  :zScore =&gt; mean =&gt; :zScore,\n  :zScore =&gt; length =&gt; :n,\n)\n\n120√ó5 DataFrame95 rows omitted\n\n\n\nRow\nSex\nTest\nage\nzScore\nn\n\n\n\nString\nString\nFloat64\nFloat64\nInt64\n\n\n\n\n1\nmale\nS20_r\n8.0\n-0.0265138\n1223\n\n\n2\nmale\nBPT\n8.0\n0.026973\n1227\n\n\n3\nmale\nSLJ\n8.0\n0.121609\n1227\n\n\n4\nmale\nStar_r\n8.0\n-0.0571726\n1186\n\n\n5\nmale\nRun\n8.0\n0.292695\n1210\n\n\n6\nfemale\nS20_r\n8.0\n-0.35164\n1411\n\n\n7\nfemale\nBPT\n8.0\n-0.610355\n1417\n\n\n8\nfemale\nSLJ\n8.0\n-0.279872\n1418\n\n\n9\nfemale\nStar_r\n8.0\n-0.268221\n1381\n\n\n10\nfemale\nRun\n8.0\n-0.245573\n1387\n\n\n11\nmale\nS20_r\n8.1\n0.0608397\n3042\n\n\n12\nmale\nBPT\n8.1\n0.0955413\n3069\n\n\n13\nmale\nSLJ\n8.1\n0.123099\n3069\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n109\nmale\nStar_r\n9.0\n0.254973\n4049\n\n\n110\nmale\nRun\n9.0\n0.258082\n4034\n\n\n111\nfemale\nS20_r\n9.1\n-0.0286172\n1154\n\n\n112\nfemale\nBPT\n9.1\n-0.0752301\n1186\n\n\n113\nfemale\nSLJ\n9.1\n-0.094587\n1174\n\n\n114\nfemale\nStar_r\n9.1\n0.00276252\n1162\n\n\n115\nfemale\nRun\n9.1\n-0.235591\n1150\n\n\n116\nmale\nS20_r\n9.1\n0.325745\n1303\n\n\n117\nmale\nBPT\n9.1\n0.616416\n1320\n\n\n118\nmale\nSLJ\n9.1\n0.267577\n1310\n\n\n119\nmale\nStar_r\n9.1\n0.254342\n1297\n\n\n120\nmale\nRun\n9.1\n0.251045\n1294\n\n\n\n\n\n\n\n\n2 Creating the plot\nThe AlgebraOfGraphics package applies operators to the results of functions such as data (specify the data table to be used), mapping (designate the roles of columns), and visual (type of visual presentation).\n\nlet\n  design = mapping(:age, :zScore; color=:Sex, col=:Test)\n  lines = design * linear()\n  means = design * visual(Scatter; markersize=5)\n  draw(data(df2) * means + data(df) * lines)\nend\n\n\n\n\n\nTBD: Relabel factor levels (Boys, Girls; fitness components for Test)\nTBD: Relevel factors; why not levels from Tables?\nTBD: Set range (7.8 to 9.2 and tick marks (8, 8.5, 9) of axes.\nTBD: Move legend in plot?\n\n\n\nF√ºhner, T., Granacher, U., Golle, K., & Kliegl, R. (2021). Age and sex effects in physical fitness components of 108,295 third graders including 515 primary schools and 9 cohorts. Scientific Reports, 11(1). https://doi.org/10.1038/s41598-021-97000-4\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.\n\n\n\n\n Back to top",
    "crumbs": [
      "Visualizations and diagnostics",
      "Creating multi-panel plots"
    ]
  },
  {
    "objectID": "bootstrap.html",
    "href": "bootstrap.html",
    "title": "Parametric bootstrap for mixed-effects models",
    "section": "",
    "text": "The speed of MixedModels.jl relative to its predecessors makes the parametric bootstrap much more computationally tractable. This is valuable because the parametric bootstrap can be used to produce more accurate confidence intervals than methods based on standard errors or profiling of the likelihood surface.\nThis page is adapted from the MixedModels.jl docs\n\n1 The parametric bootstrap\nBootstrapping is a family of procedures for generating sample values of a statistic, allowing for visualization of the distribution of the statistic or for inference from this sample of values. Bootstrapping also belongs to a larger family of procedures called resampling, which are based on creating new samples of data from an existing one, then computing statistics on the new samples, in order to examine the distribution of the relevant statistics.\nA parametric bootstrap is used with a parametric model, m, that has been fit to data. The procedure is to simulate n response vectors from m using the estimated parameter values and refit m to these responses in turn, accumulating the statistics of interest at each iteration.\nThe parameters of a LinearMixedModel object are the fixed-effects parameters (Œ≤), the standard deviation (œÉ), of the per-observation noise, and the covariance parameter (Œ∏), that defines the variance-covariance matrices of the random effects. A technical description of the covariance parameter can be found in the MixedModels.jl docs. Lisa Schwetlick and Daniel Backhaus have provided a more beginner-friendly description of the covariance parameter in the documentation for MixedModelsSim.jl. For today‚Äôs purposes ‚Äì looking at the uncertainty in the estimates from a fitted model ‚Äì we can simply use values from the fitted model, but we will revisit the parametric bootstrap as a convenient way to simulate new data, potentially with different parameter values, for power analysis.\nAttach the packages to be used\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing DataFrames\nusing MixedModels\nusing MixedModelsMakie\nusing Random\nusing SMLP2025: dataset\n\nusing AlgebraOfGraphics: AlgebraOfGraphics as AoG\nconst progress=false\n\n\nNote that the precise stream of random numbers generated for a given seed can change between Julia versions. For exact reproducibility, you either need to have the exact same Julia version or use the StableRNGs package.\n\n\n2 A model of moderate complexity\nThe kb07 data (Kronm√ºller & Barr, 2007) are one of the datasets provided by the MixedModels package.\n\nkb07 = dataset(:kb07)\n\nArrow.Table with 1789 rows, 7 columns, and schema:\n :subj      String\n :item      String\n :spkr      String\n :prec      String\n :load      String\n :rt_trunc  Int16\n :rt_raw    Int16\n\n\nConvert the table to a DataFrame for summary.\n\nkb07 = DataFrame(kb07)\ndescribe(kb07)\n\n7√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nsubj\n\nS030\n\nS103\n0\nString\n\n\n2\nitem\n\nI01\n\nI32\n0\nString\n\n\n3\nspkr\n\nnew\n\nold\n0\nString\n\n\n4\nprec\n\nbreak\n\nmaintain\n0\nString\n\n\n5\nload\n\nno\n\nyes\n0\nString\n\n\n6\nrt_trunc\n2182.2\n579\n1940.0\n5171\n0\nInt16\n\n\n7\nrt_raw\n2226.24\n579\n1940.0\n15923\n0\nInt16\n\n\n\n\n\n\nThe experimental factors; spkr, prec, and load, are two-level factors.\n\ncontrasts = Dict(:spkr =&gt; EffectsCoding(),\n                 :prec =&gt; EffectsCoding(),\n                 :load =&gt; EffectsCoding(),\n)\n\nThe EffectsCoding contrast is used with these to create a ¬±1 encoding.\nWe can look at an initial fit of moderate complexity:\n\nform = @formula(rt_trunc ~ 1 + spkr * prec * load +\n                          (1 + spkr + prec + load | subj) +\n                          (1 + spkr + prec + load | item))\nm0 = fit(MixedModel, form, kb07; contrasts, progress)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\nœÉ_item\n\n\n(Intercept)\n2181.6729\n77.3131\n28.22\n&lt;1e-99\n301.6736\n362.3182\n\n\nspkr: old\n67.7490\n18.2747\n3.71\n0.0002\n42.5441\n40.7073\n\n\nprec: maintain\n-333.9206\n47.1388\n-7.08\n&lt;1e-11\n61.9978\n246.8078\n\n\nload: yes\n78.7702\n19.5387\n4.03\n&lt;1e-04\n64.9874\n42.5139\n\n\nspkr: old & prec: maintain\n-21.9655\n15.8070\n-1.39\n0.1646\n\n\n\n\nspkr: old & load: yes\n18.3838\n15.8070\n1.16\n0.2448\n\n\n\n\nprec: maintain & load: yes\n4.5333\n15.8070\n0.29\n0.7743\n\n\n\n\nspkr: old & prec: maintain & load: yes\n23.6072\n15.8070\n1.49\n0.1353\n\n\n\n\nResidual\n668.5371\n\n\n\n\n\n\n\n\n\n\nThe default display in Quarto uses the pretty MIME show method for the model and omits the estimated correlations of the random effects.\nThe VarCorr extractor displays these.\n\nVarCorr(m0)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\nsubj\n(Intercept)\n91006.9887\n301.6736\n\n\n\n\n\n\nspkr: old\n1810.0012\n42.5441\n+0.79\n\n\n\n\n\nprec: maintain\n3843.7268\n61.9978\n-0.59\n+0.02\n\n\n\n\nload: yes\n4223.3647\n64.9874\n+0.36\n+0.85\n+0.54\n\n\nitem\n(Intercept)\n131274.4558\n362.3182\n\n\n\n\n\n\nspkr: old\n1657.0830\n40.7073\n+0.44\n\n\n\n\n\nprec: maintain\n60914.1141\n246.8078\n-0.69\n+0.35\n\n\n\n\nload: yes\n1807.4303\n42.5139\n+0.32\n+0.15\n-0.14\n\n\nResidual\n\n446941.7901\n668.5371\n\n\n\n\n\n\n\n\nNone of the two-factor or three-factor interaction terms in the fixed-effects are significant. In the random-effects terms only the scalar random effects and the prec random effect for item appear to be warranted, leading to the reduced formula\n\n# formula f4 from https://doi.org/10.33016/nextjournal.100002\nform = @formula(rt_trunc ~ 1 + spkr * prec * load + (1 | subj) + (1 + prec | item))\n\nm1 = fit(MixedModel, form, kb07; contrasts, progress)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n2181.7582\n77.4709\n28.16\n&lt;1e-99\n364.7286\n298.1109\n\n\nspkr: old\n67.8114\n16.0526\n4.22\n&lt;1e-04\n\n\n\n\nprec: maintain\n-333.8582\n47.4629\n-7.03\n&lt;1e-11\n252.6687\n\n\n\nload: yes\n78.6849\n16.0525\n4.90\n&lt;1e-06\n\n\n\n\nspkr: old & prec: maintain\n-21.8802\n16.0525\n-1.36\n0.1729\n\n\n\n\nspkr: old & load: yes\n18.3214\n16.0526\n1.14\n0.2537\n\n\n\n\nprec: maintain & load: yes\n4.4710\n16.0526\n0.28\n0.7806\n\n\n\n\nspkr: old & prec: maintain & load: yes\n23.5219\n16.0525\n1.47\n0.1428\n\n\n\n\nResidual\n678.9318\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nitem\n(Intercept)\n133026.918\n364.729\n\n\n\n\nprec: maintain\n63841.496\n252.669\n-0.70\n\n\nsubj\n(Intercept)\n88870.080\n298.111\n\n\n\nResidual\n\n460948.432\n678.932\n\n\n\n\n\n\nThese two models are nested and can be compared with a likelihood-ratio test.\n\nMixedModels.likelihoodratiotest(m0, m1)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nrt_trunc ~ 1 + spkr + prec + load + spkr & prec + spkr & load + prec & load + spkr & prec & load + (1 | subj) + (1 + prec | item)\n13\n28658\n\n\n\n\n\nrt_trunc ~ 1 + spkr + prec + load + spkr & prec + spkr & load + prec & load + spkr & prec & load + (1 + spkr + prec + load | subj) + (1 + spkr + prec + load | item)\n29\n28637\n21\n16\n0.1650\n\n\n\n\n\nThe p-value of approximately 20% leads us to prefer the simpler model, m1, to the more complex, m0.\n\n\n3 Bootstrap basics\nTo bootstrap the model parameters, first initialize a random number generator then create a bootstrap sample and extract the table of parameter estimates from it.\n\nconst RNG = MersenneTwister(42)\nsamp = parametricbootstrap(RNG, 5_000, m1)\ntbl = samp.tbl\n\nTable with 18 columns and 5000 rows:\n      obj      Œ≤1       Œ≤2       Œ≤3        Œ≤4       Œ≤5        Œ≤6        ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ 28666.6  2173.04  55.6593  -359.246  87.1657  -35.2652  32.9777   ‚ãØ\n 2  ‚îÇ 28709.1  1973.88  88.8108  -313.755  83.8083  -23.2173  -15.9147  ‚ãØ\n 3  ‚îÇ 28575.8  2167.28  48.2509  -297.175  79.0748  -22.07    41.8946   ‚ãØ\n 4  ‚îÇ 28721.3  2259.36  65.9821  -386.726  82.7248  -35.3908  14.3295   ‚ãØ\n 5  ‚îÇ 28590.9  2182.95  45.0315  -410.478  109.293  -19.132   42.9369   ‚ãØ\n 6  ‚îÇ 28518.9  2167.98  61.0523  -360.56   75.7268  15.1612   61.9125   ‚ãØ\n 7  ‚îÇ 28702.9  2210.25  70.8323  -349.703  99.4985  -32.9348  16.797    ‚ãØ\n 8  ‚îÇ 28726.1  2235.04  59.248   -353.737  58.0711  -35.2804  10.0765   ‚ãØ\n 9  ‚îÇ 28734.7  2042.97  72.1467  -300.829  71.2183  -14.2944  10.7301   ‚ãØ\n 10 ‚îÇ 28609.2  2011.1   76.404   -254.606  63.9238  -37.8758  3.95621   ‚ãØ\n 11 ‚îÇ 28636.7  2166.35  71.1184  -324.401  58.5484  -21.7266  -31.4973  ‚ãØ\n 12 ‚îÇ 28659.2  2158.36  64.3944  -336.452  80.3281  -39.3608  1.96649   ‚ãØ\n 13 ‚îÇ 28637.3  2147.09  70.6536  -399.734  60.0463  -35.6682  28.4599   ‚ãØ\n 14 ‚îÇ 28672.7  2138.23  75.4572  -262.36   96.9987  -32.0501  26.9257   ‚ãØ\n 15 ‚îÇ 28662.5  2239.34  65.1886  -373.371  83.4639  -29.7632  5.43283   ‚ãØ\n 16 ‚îÇ 28604.9  2088.54  62.0142  -268.106  99.684   -27.3686  49.5337   ‚ãØ\n 17 ‚îÇ 28539.6  2313.47  61.1166  -337.951  74.769   -14.5982  48.7173   ‚ãØ\n ‚ãÆ  ‚îÇ    ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ         ‚ãÆ        ‚ãÆ         ‚ãÆ      ‚ã±\n\n\nAn empirical density plot of the estimates of the residual standard deviation is obtained as\n\nplt = data(tbl) * mapping(:œÉ) * AoG.density()\ndraw(plt; axis=(;title=\"Parametric bootstrap estimates of œÉ\"))\n\n\n\n\nA density plot of the estimates of the standard deviation of the random effects is obtained as\n\nplt = data(tbl) * mapping(\n  [:œÉ1, :œÉ2, :œÉ3] .=&gt; \"Bootstrap replicates of standard deviations\";\n  color=dims(1) =&gt; renamer([\"Item intercept\", \"Item speaker\", \"Subj\"])\n) * AoG.density()\ndraw(plt; figure=(;supertitle=\"Parametric bootstrap estimates of variance components\"))\n\n\n\n\nThe bootstrap sample can be used to generate intervals that cover a certain percentage of the bootstrapped values. We refer to these as ‚Äúcoverage intervals‚Äù, similar to a confidence interval. The shortest such intervals, obtained with the confint extractor, correspond to a highest posterior density interval in Bayesian inference.\nWe generate these for all random and fixed effects:\n\nconfint(samp; method=:shortest)\n\nDictTable with 2 columns and 13 rows:\n par   lower      upper\n ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Œ≤1  ‚îÇ 2033.36    2332.44\n Œ≤2  ‚îÇ 34.9886    98.421\n Œ≤3  ‚îÇ -430.861   -246.169\n Œ≤4  ‚îÇ 48.9002    112.424\n Œ≤5  ‚îÇ -51.4927   12.1684\n Œ≤6  ‚îÇ -13.6705   49.681\n Œ≤7  ‚îÇ -27.2138   34.6244\n Œ≤8  ‚îÇ -6.36896   55.7056\n œÅ1  ‚îÇ -0.899979  -0.460383\n œÉ   ‚îÇ 654.51     700.692\n œÉ1  ‚îÇ 264.114    448.733\n œÉ2  ‚îÇ 174.044    316.132\n œÉ3  ‚îÇ 228.265    359.429\n\n\n\ndraw(\n  data(samp.Œ≤) * mapping(:Œ≤; color=:coefname) * AoG.density();\n  figure=(; resolution=(800, 450)),\n)\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\nFor the fixed effects, MixedModelsMakie provides a convenience interface to plot the combined coverage intervals and density plots\n\nridgeplot(samp)\n\n\n\n\nOften the intercept will be on a different scale and potentially less interesting, so we can stop it from being included in the plot:\n\nridgeplot(samp; show_intercept=false)\n\n\n\n\n\n\n4 Singularity\nLet‚Äôs consider the classic dysetuff dataset:\n\ndyestuff = dataset(:dyestuff)\nmdye = fit(MixedModel, @formula(yield ~ 1 + (1 | batch)), dyestuff)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_batch\n\n\n(Intercept)\n1527.5000\n17.6946\n86.33\n&lt;1e-99\n37.2603\n\n\nResidual\n49.5101\n\n\n\n\n\n\n\n\n\n\nsampdye = parametricbootstrap(MersenneTwister(1234321), 10_000, mdye)\ntbldye = sampdye.tbl\n\nTable with 5 columns and 10000 rows:\n      obj      Œ≤1       œÉ        œÉ1       Œ∏1\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ 316.738  1528.14  43.5735  22.6691  0.520249\n 2  ‚îÇ 336.101  1552.01  58.1535  39.5166  0.679521\n 3  ‚îÇ 322.046  1501.55  51.857   0.0      0.0\n 4  ‚îÇ 326.893  1525.24  43.6512  66.3744  1.52056\n 5  ‚îÇ 331.544  1522.05  50.7415  51.0074  1.00524\n 6  ‚îÇ 326.892  1550.23  53.5174  19.0928  0.356759\n 7  ‚îÇ 313.786  1504.16  45.1878  0.0      0.0\n 8  ‚îÇ 322.636  1494.05  49.8556  17.7732  0.356494\n 9  ‚îÇ 323.582  1529.74  46.4678  35.2094  0.757716\n 10 ‚îÇ 321.639  1532.6   45.3573  32.4904  0.71632\n 11 ‚îÇ 331.565  1548.25  55.8562  28.7512  0.514736\n 12 ‚îÇ 310.076  1481.8   34.9418  38.4381  1.10006\n 13 ‚îÇ 314.492  1541.95  40.3751  28.3694  0.702646\n 14 ‚îÇ 340.876  1530.48  63.006   42.6409  0.676776\n 15 ‚îÇ 309.778  1496.17  41.5411  8.08346  0.19459\n 16 ‚îÇ 335.375  1530.32  57.4864  38.9066  0.676797\n 17 ‚îÇ 318.347  1511.28  41.0926  39.1128  0.951821\n ‚ãÆ  ‚îÇ    ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ\n\n\n\nplt = data(tbldye) * mapping(:œÉ1) * AoG.density()\ndraw(plt; axis=(;title=\"Parametric bootstrap estimates of œÉ_batch\"))\n\n\n\n\nNotice that this density plot has a spike, or mode, at zero. Although this mode appears to be diffuse, this is an artifact of the way that density plots are created. In fact, it is a pulse, as can be seen from a histogram.\n\nplt = data(tbldye) * mapping(:œÉ1) * AoG.histogram(;bins=100)\ndraw(plt; axis=(;title=\"Parametric bootstrap estimates of œÉ_batch\"))\n\n\n\n\nA value of zero for the standard deviation of the random effects is an example of a singular covariance. It is easy to detect the singularity in the case of a scalar random-effects term. However, it is not as straightforward to detect singularity in vector-valued random-effects terms.\nFor example, if we bootstrap a model fit to the sleepstudy data\n\nsleepstudy = dataset(:sleepstudy)\nmsleep = fit(MixedModel, @formula(reaction ~ 1 + days + (1 + days | subj)),\n             sleepstudy)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n251.4051\n6.6323\n37.91\n&lt;1e-99\n23.7805\n\n\ndays\n10.4673\n1.5022\n6.97\n&lt;1e-11\n5.7168\n\n\nResidual\n25.5918\n\n\n\n\n\n\n\n\n\n\nsampsleep = parametricbootstrap(MersenneTwister(666), 10_000, msleep)\ntblsleep = sampsleep.tbl\n\nTable with 10 columns and 10000 rows:\n      obj      Œ≤1       Œ≤2       œÉ        œÉ1       œÉ2       œÅ1           ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ 1694.07  258.109  10.7928  22.1713  13.6388  5.42872  0.430499     ‚ãØ\n 2  ‚îÇ 1731.59  241.267  9.77434  23.5943  23.882   7.07979  -0.277561    ‚ãØ\n 3  ‚îÇ 1706.51  254.403  10.6731  23.0742  21.4346  3.78782  0.493345     ‚ãØ\n 4  ‚îÇ 1737.33  257.833  7.61745  24.5028  27.2647  4.8567   -0.0190962   ‚ãØ\n 5  ‚îÇ 1764.5   244.154  13.0045  25.8322  30.9873  7.78254  -0.532286    ‚ãØ\n 6  ‚îÇ 1730.85  247.672  13.2977  24.3584  18.6105  5.87738  -0.0535883   ‚ãØ\n 7  ‚îÇ 1709.66  256.847  8.60197  22.4272  26.8884  6.62183  -0.638036    ‚ãØ\n 8  ‚îÇ 1776.49  252.028  9.56225  27.3708  27.7002  6.53333  -0.353783    ‚ãØ\n 9  ‚îÇ 1732.12  248.687  11.5173  23.7153  22.2865  6.69781  0.304236     ‚ãØ\n 10 ‚îÇ 1748.89  249.387  10.2581  25.3961  24.7505  5.44654  0.00471327   ‚ãØ\n 11 ‚îÇ 1735.34  247.16   8.57302  25.593   19.2151  3.99188  1.0          ‚ãØ\n 12 ‚îÇ 1757.34  248.074  9.76959  25.9834  29.2859  4.74129  0.216426     ‚ãØ\n 13 ‚îÇ 1727.32  248.007  12.8942  23.9314  32.1774  3.50451  0.152022     ‚ãØ\n 14 ‚îÇ 1753.38  252.684  9.88845  25.2124  21.3446  7.64867  -0.00704067  ‚ãØ\n 15 ‚îÇ 1731.05  262.218  7.70815  25.0737  18.1155  4.89347  -0.280397    ‚ãØ\n 16 ‚îÇ 1742.68  252.273  12.7376  24.4489  20.6843  7.47369  0.0242807    ‚ãØ\n 17 ‚îÇ 1727.37  243.956  12.107   24.6337  26.502   3.89643  -0.411438    ‚ãØ\n ‚ãÆ  ‚îÇ    ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ          ‚ãÆ       ‚ã±\n\n\nthe singularity can be exhibited as a standard deviation of zero or as a correlation of ¬±1.\n\nconfint(sampsleep)\n\nDictTable with 2 columns and 6 rows:\n par   lower      upper\n ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Œ≤1  ‚îÇ 238.265    264.28\n Œ≤2  ‚îÇ 7.56525    13.4072\n œÅ1  ‚îÇ -0.409958  1.0\n œÉ   ‚îÇ 22.6673    28.5759\n œÉ1  ‚îÇ 10.5606    33.2568\n œÉ2  ‚îÇ 3.08374    7.73233\n\n\nA histogram of the estimated correlations from the bootstrap sample has a spike at +1.\n\nplt = data(tblsleep) * mapping(:œÅ1) * AoG.histogram(;bins=100)\ndraw(plt; axis=(;title=\"Parametric bootstrap samples of correlation of random effects\"))\n\n\n\n\nor, as a count,\n\ncount(tblsleep.œÅ1  .‚âà 1)\n\n309\n\n\nClose examination of the histogram shows a few values of -1.\n\ncount(tblsleep.œÅ1 .‚âà -1)\n\n0\n\n\nFurthermore there are even a few cases where the estimate of the standard deviation of the random effect for the intercept is zero.\n\ncount(tblsleep.œÉ1 .‚âà 0)\n\n4\n\n\nThere is a general condition to check for singularity of an estimated covariance matrix or matrices in a bootstrap sample. The parameter optimized in the estimation is Œ∏, the relative covariance parameter. Some of the elements of this parameter vector must be non-negative and, when one of these components is approximately zero, one of the covariance matrices will be singular.\nThe issingular method for a MixedModel object that tests if a parameter vector Œ∏ corresponds to a boundary or singular fit.\nThis operation is encapsulated in a method for the issingular function that works on MixedModelBootstrap objects.\n\ncount(issingular(sampsleep))\n\n313\n\n\n\n\n5 References\n\n\nKronm√ºller, E., & Barr, D. J. (2007). Perspective-free pragmatics: Broken precedents and the recovery-from-preemption hypothesis. Journal of Memory and Language, 56(3), 436‚Äì455. https://doi.org/10.1016/j.jml.2006.05.002\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.\n\n\n\n\n Back to top",
    "crumbs": [
      "Bootstrap and profiling",
      "Parametric bootstrap for mixed-effects models"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html",
    "href": "contrasts_fggk21.html",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "",
    "text": "This script uses a subset of data reported in F√ºhner et al. (2021).\nTo circumvent delays associated with model fitting we work with models that are less complex than those in the reference publication. All the data to reproduce the models in the publication are used here, too; the script requires only a few changes to specify the more complex models in the paper.\nAll children were between 6.0 and 6.99 years at legal keydate (30 September) of school enrollment, that is in their ninth year of life in the third grade. To avoid delays associated with model fitting we work with a reduced data set and less complex models than those in the reference publication. The script requires only a few changes to specify the more complex models in the paper.\nThe script is structured in three main sections:",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#packages-and-functions",
    "href": "contrasts_fggk21.html#packages-and-functions",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "1.1 Packages and functions",
    "text": "1.1 Packages and functions\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing Chain\nusing CategoricalArrays\nusing DataFrames\nusing DataFrameMacros\nusing MixedModels\nusing ProgressMeter\nusing SMLP2025: dataset\nusing Statistics\nusing StatsBase\n\nProgressMeter.ijulia_behavior(:clear);",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#readme-for-datasetfggk21",
    "href": "contrasts_fggk21.html#readme-for-datasetfggk21",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "1.2 Readme for dataset(\"fggk21\")",
    "text": "1.2 Readme for dataset(\"fggk21\")\nNumber of scores: 525126\n\nCohort: 9 levels; 2011-2019\nSchool: 515 levels\nChild: 108295 levels; all children are between 8.0 and 8.99 years old\nSex: ‚ÄúGirls‚Äù (n=55,086), ‚ÄúBoys‚Äù (n= 53,209)\nage: testdate - middle of month of birthdate\nTest: 5 levels\n\nEndurance (Run): 6 minute endurance run [m]; to nearest 9m in 9x18m field\nCoordination (Star_r): star coordination run [m/s]; 9x9m field, 4 x diagonal = 50.912 m\nSpeed(S20_r): 20-meters sprint [m/s]\nMuscle power low (SLJ): standing long jump [cm]\nMuscle power up (BPT): 1-kg medicine ball push test [m]\n\nscore - see units",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#preprocessing",
    "href": "contrasts_fggk21.html#preprocessing",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "1.3 Preprocessing",
    "text": "1.3 Preprocessing\n\n1.3.1 Read data\n\ntbl = dataset(:fggk21)\n\nArrow.Table with 525126 rows, 7 columns, and schema:\n :Cohort  String\n :School  String\n :Child   String\n :Sex     String\n :age     Float64\n :Test    String\n :score   Float64\n\n\n\ndf = DataFrame(tbl)\ndescribe(df)\n\n7√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nCohort\n\n2011\n\n2019\n0\nString\n\n\n2\nSchool\n\nS100043\n\nS800200\n0\nString\n\n\n3\nChild\n\nC002352\n\nC117966\n0\nString\n\n\n4\nSex\n\nfemale\n\nmale\n0\nString\n\n\n5\nage\n8.56073\n7.99452\n8.55852\n9.10609\n0\nFloat64\n\n\n6\nTest\n\nBPT\n\nStar_r\n0\nString\n\n\n7\nscore\n226.141\n1.14152\n4.65116\n1530.0\n0\nFloat64\n\n\n\n\n\n\n\n\n1.3.2 Extract a stratified subsample\nWe extract a random sample of 500 children from the Sex (2) x Test (5) cells of the design. Cohort and School are random.\n\ndat = @chain df begin\n  @transform(:Sex = :Sex == \"female\" ? \"Girls\" : \"Boys\")\n  @groupby(:Test, :Sex)\n  combine(x -&gt; x[sample(1:nrow(x), 500), :])\nend\n\n5000√ó7 DataFrame4975 rows omitted\n\n\n\nRow\nTest\nSex\nCohort\nSchool\nChild\nage\nscore\n\n\n\nString\nString\nString\nString\nString\nFloat64\nFloat64\n\n\n\n\n1\nS20_r\nBoys\n2011\nS112409\nC071018\n8.6653\n4.44444\n\n\n2\nS20_r\nBoys\n2014\nS112665\nC064473\n8.61875\n4.54545\n\n\n3\nS20_r\nBoys\n2017\nS101679\nC110770\n9.02396\n4.87805\n\n\n4\nS20_r\nBoys\n2013\nS103690\nC098010\n8.9117\n5.0\n\n\n5\nS20_r\nBoys\n2016\nS104905\nC094296\n8.87885\n4.54545\n\n\n6\nS20_r\nBoys\n2014\nS101000\nC092174\n8.87064\n5.26316\n\n\n7\nS20_r\nBoys\n2018\nS103354\nC081713\n8.76934\n4.44444\n\n\n8\nS20_r\nBoys\n2017\nS104474\nC039983\n8.41342\n4.54545\n\n\n9\nS20_r\nBoys\n2014\nS104759\nC035884\n8.37509\n4.44444\n\n\n10\nS20_r\nBoys\n2011\nS100833\nC032395\n8.33676\n4.34783\n\n\n11\nS20_r\nBoys\n2015\nS102052\nC102329\n8.94456\n5.12821\n\n\n12\nS20_r\nBoys\n2013\nS101461\nC068244\n8.65982\n3.7037\n\n\n13\nS20_r\nBoys\n2019\nS102489\nC011148\n8.13689\n5.0\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n4989\nRun\nGirls\n2019\nS104632\nC028659\n8.3039\n864.0\n\n\n4990\nRun\nGirls\n2011\nS101485\nC098897\n8.91718\n972.0\n\n\n4991\nRun\nGirls\n2019\nS103561\nC085051\n8.80219\n882.0\n\n\n4992\nRun\nGirls\n2016\nS102295\nC083366\n8.79398\n1098.0\n\n\n4993\nRun\nGirls\n2011\nS105247\nC080369\n8.75017\n1040.0\n\n\n4994\nRun\nGirls\n2013\nS104735\nC002743\n7.99452\n968.0\n\n\n4995\nRun\nGirls\n2012\nS103676\nC050648\n8.50103\n918.0\n\n\n4996\nRun\nGirls\n2013\nS104863\nC068722\n8.65982\n900.0\n\n\n4997\nRun\nGirls\n2015\nS103421\nC038743\n8.39425\n981.0\n\n\n4998\nRun\nGirls\n2013\nS105089\nC002811\n7.99452\n837.0\n\n\n4999\nRun\nGirls\n2011\nS113207\nC052034\n8.50376\n1242.0\n\n\n5000\nRun\nGirls\n2019\nS103494\nC011272\n8.13689\n702.0\n\n\n\n\n\n\n\n\n1.3.3 Transformations\n\ntransform!(dat, :age, :age =&gt; (x -&gt; x .- 8.5) =&gt; :a1) # centered age (linear)\nselect!(groupby(dat, :Test), :, :score =&gt; zscore =&gt; :zScore) # z-score\n\n5000√ó9 DataFrame4975 rows omitted\n\n\n\nRow\nTest\nSex\nCohort\nSchool\nChild\nage\nscore\na1\nzScore\n\n\n\nString\nString\nString\nString\nString\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nS20_r\nBoys\n2011\nS112409\nC071018\n8.6653\n4.44444\n0.165298\n-0.191211\n\n\n2\nS20_r\nBoys\n2014\nS112665\nC064473\n8.61875\n4.54545\n0.118754\n0.0547834\n\n\n3\nS20_r\nBoys\n2017\nS101679\nC110770\n9.02396\n4.87805\n0.523956\n0.864766\n\n\n4\nS20_r\nBoys\n2013\nS103690\nC098010\n8.9117\n5.0\n0.411704\n1.16176\n\n\n5\nS20_r\nBoys\n2016\nS104905\nC094296\n8.87885\n4.54545\n0.37885\n0.0547834\n\n\n6\nS20_r\nBoys\n2014\nS101000\nC092174\n8.87064\n5.26316\n0.370637\n1.80264\n\n\n7\nS20_r\nBoys\n2018\nS103354\nC081713\n8.76934\n4.44444\n0.269336\n-0.191211\n\n\n8\nS20_r\nBoys\n2017\nS104474\nC039983\n8.41342\n4.54545\n-0.0865845\n0.0547834\n\n\n9\nS20_r\nBoys\n2014\nS104759\nC035884\n8.37509\n4.44444\n-0.124914\n-0.191211\n\n\n10\nS20_r\nBoys\n2011\nS100833\nC032395\n8.33676\n4.34783\n-0.163244\n-0.42651\n\n\n11\nS20_r\nBoys\n2015\nS102052\nC102329\n8.94456\n5.12821\n0.444559\n1.47398\n\n\n12\nS20_r\nBoys\n2013\nS101461\nC068244\n8.65982\n3.7037\n0.159822\n-1.99517\n\n\n13\nS20_r\nBoys\n2019\nS102489\nC011148\n8.13689\n5.0\n-0.363107\n1.16176\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n4989\nRun\nGirls\n2019\nS104632\nC028659\n8.3039\n864.0\n-0.196099\n-0.929724\n\n\n4990\nRun\nGirls\n2011\nS101485\nC098897\n8.91718\n972.0\n0.41718\n-0.201898\n\n\n4991\nRun\nGirls\n2019\nS103561\nC085051\n8.80219\n882.0\n0.30219\n-0.80842\n\n\n4992\nRun\nGirls\n2016\nS102295\nC083366\n8.79398\n1098.0\n0.293977\n0.647233\n\n\n4993\nRun\nGirls\n2011\nS105247\nC080369\n8.75017\n1040.0\n0.250171\n0.256363\n\n\n4994\nRun\nGirls\n2013\nS104735\nC002743\n7.99452\n968.0\n-0.505476\n-0.228854\n\n\n4995\nRun\nGirls\n2012\nS103676\nC050648\n8.50103\n918.0\n0.00102669\n-0.565811\n\n\n4996\nRun\nGirls\n2013\nS104863\nC068722\n8.65982\n900.0\n0.159822\n-0.687116\n\n\n4997\nRun\nGirls\n2015\nS103421\nC038743\n8.39425\n981.0\n-0.105749\n-0.141246\n\n\n4998\nRun\nGirls\n2013\nS105089\nC002811\n7.99452\n837.0\n-0.505476\n-1.11168\n\n\n4999\nRun\nGirls\n2011\nS113207\nC052034\n8.50376\n1242.0\n0.00376454\n1.61767\n\n\n5000\nRun\nGirls\n2019\nS103494\nC011272\n8.13689\n702.0\n-0.363107\n-2.02146\n\n\n\n\n\n\n\ndat2 = combine(\n  groupby(dat, [:Test, :Sex]),\n  :score =&gt; mean,\n  :score =&gt; std,\n  :zScore =&gt; mean,\n  :zScore =&gt; std,\n)\n\n10√ó6 DataFrame\n\n\n\nRow\nTest\nSex\nscore_mean\nscore_std\nzScore_mean\nzScore_std\n\n\n\nString\nString\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nS20_r\nBoys\n4.60524\n0.423461\n0.200374\n1.03127\n\n\n2\nBPT\nBoys\n3.994\n0.715953\n0.301831\n1.00045\n\n\n3\nSLJ\nBoys\n129.318\n19.7558\n0.184655\n1.00662\n\n\n4\nStar_r\nBoys\n2.08204\n0.278542\n0.18712\n1.00609\n\n\n5\nRun\nBoys\n1040.85\n156.946\n0.262078\n1.05768\n\n\n6\nS20_r\nGirls\n4.44068\n0.380354\n-0.200374\n0.926293\n\n\n7\nBPT\nGirls\n3.562\n0.647452\n-0.301831\n0.904729\n\n\n8\nSLJ\nGirls\n122.07\n18.8283\n-0.184655\n0.959364\n\n\n9\nStar_r\nGirls\n1.97843\n0.265496\n-0.18712\n0.958969\n\n\n10\nRun\nGirls\n963.07\n128.135\n-0.262078\n0.863519\n\n\n\n\n\n\n\n\n1.3.4 Figure of age x Sex x Test interactions\nThe main results of relevance here are shown in Figure 2 of Scientific Reports 11:17566.",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#seqdiffcoding-contr1",
    "href": "contrasts_fggk21.html#seqdiffcoding-contr1",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "2.1 SeqDiffCoding: contr1",
    "text": "2.1 SeqDiffCoding: contr1\nSeqDiffCoding was used in the publication. This specification tests pairwise differences between the five neighboring levels of Test, that is:\n\nSDC1: 2-1\nSDC2: 3-2\nSDC3: 4-3\nSDC4: 5-4\n\nThe levels were sorted such that these contrasts map onto four a priori hypotheses; in other words, they are theoretically motivated pairwise comparisons. The motivation also encompasses theoretically motivated interactions with Sex. The order of levels can also be explicitly specified during contrast construction. This is very useful if levels are in a different order in the dataframe. We recommend the explicit specification to increase transparency of the code.\nThe statistical disadvantage of SeqDiffCoding is that the contrasts are not orthogonal, that is the contrasts are correlated. This is obvious from the fact that levels 2, 3, and 4 are all used in two contrasts. One consequence of this is that correlation parameters estimated between neighboring contrasts (e.g., 2-1 and 3-2) are difficult to interpret. Usually, they will be negative because assuming some practical limitation on the overall range (e.g., between levels 1 and 3), a small ‚Äú2-1‚Äù effect ‚Äúcorrelates‚Äù negatively with a larger ‚Äú3-2‚Äù effect for mathematical reasons.\nObviously, the tradeoff between theoretical motivation and statistical purity is something that must be considered carefully when planning the analysis.\n\ncontr1 = merge(\n  Dict(nm =&gt; Grouping() for nm in (:School, :Child, :Cohort)),\n  Dict(\n    :Sex =&gt; EffectsCoding(; levels=[\"Girls\", \"Boys\"]),\n    :Test =&gt; SeqDiffCoding(;\n      levels=[\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"]\n    ),\n  ),\n)\n\nDict{Symbol, StatsModels.AbstractContrasts} with 5 entries:\n  :Child  =&gt; Grouping()\n  :School =&gt; Grouping()\n  :Test   =&gt; SeqDiffCoding([\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"])\n  :Cohort =&gt; Grouping()\n  :Sex    =&gt; EffectsCoding(nothing, [\"Girls\", \"Boys\"])\n\n\n\nf_ovi_1 = @formula zScore ~ 1 + Test + (1 | Child);\n\n\nm_ovi_SeqDiff_1 = fit(MixedModel, f_ovi_1, dat; contrasts=contr1)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n0.0010\n0.0143\n0.07\n0.9432\n0.6857\n\n\nTest: Star_r\n-0.0030\n0.0444\n-0.07\n0.9465\n\n\n\nTest: S20_r\n-0.0049\n0.0444\n-0.11\n0.9128\n\n\n\nTest: SLJ\n0.0062\n0.0444\n0.14\n0.8892\n\n\n\nTest: BPT\n-0.0101\n0.0444\n-0.23\n0.8194\n\n\n\nResidual\n0.7276\n\n\n\n\n\n\n\n\n\nIn this case, any differences between tests identified by the contrasts would be spurious because each test was standardized (i.e., M=0, \\(SD\\)=1). The differences could also be due to an imbalance in the number of boys and girls or in the number of missing observations for each test.\nThe primary interest in this study related to interactions of the test contrasts with and age and Sex. We start with age (linear) and its interaction with the four test contrasts.\n\nm_ovi_SeqDiff_2 = let\n  form = @formula zScore ~ 1 + Test * a1 + (1 | Child)\n  fit(MixedModel, form, dat; contrasts=contr1)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0195\n0.0144\n-1.35\n0.1757\n0.6938\n\n\nTest: Star_r\n-0.0146\n0.0446\n-0.33\n0.7430\n\n\n\nTest: S20_r\n0.0028\n0.0447\n0.06\n0.9498\n\n\n\nTest: SLJ\n0.0014\n0.0449\n0.03\n0.9757\n\n\n\nTest: BPT\n-0.0260\n0.0449\n-0.58\n0.5621\n\n\n\na1\n0.3992\n0.0490\n8.14\n&lt;1e-15\n\n\n\nTest: Star_r & a1\n0.2218\n0.1519\n1.46\n0.1441\n\n\n\nTest: S20_r & a1\n-0.1607\n0.1536\n-1.05\n0.2956\n\n\n\nTest: SLJ & a1\n0.0260\n0.1547\n0.17\n0.8666\n\n\n\nTest: BPT & a1\n0.4748\n0.1534\n3.10\n0.0020\n\n\n\nResidual\n0.7087\n\n\n\n\n\n\n\n\n\nThe difference between older and younger children is larger for Star_r than for Run (0.2473). S20_r did not differ significantly from Star_r (-0.0377) and SLJ (-0.0113) The largest difference in developmental gain was between BPT and SLJ (0.3355).\nPlease note that standard errors of this LMM are anti-conservative because the LMM is missing a lot of information in the RES (e..g., contrast-related VCs snd CPs for Child, School, and Cohort.\nNext we add the main effect of Sex and its interaction with the four test contrasts.\n\nm_ovi_SeqDiff_3 = let\n  form = @formula zScore ~ 1 + Test * (a1 + Sex) + (1 | Child)\n  fit(MixedModel, form, dat; contrasts=contr1)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0193\n0.0140\n-1.38\n0.1670\n0.6432\n\n\nTest: Star_r\n-0.0156\n0.0435\n-0.36\n0.7204\n\n\n\nTest: S20_r\n0.0069\n0.0436\n0.16\n0.8748\n\n\n\nTest: SLJ\n-0.0002\n0.0438\n-0.00\n0.9970\n\n\n\nTest: BPT\n-0.0238\n0.0437\n-0.55\n0.5857\n\n\n\na1\n0.3838\n0.0477\n8.04\n&lt;1e-15\n\n\n\nSex: Boys\n0.2236\n0.0138\n16.25\n&lt;1e-58\n\n\n\nTest: Star_r & a1\n0.2503\n0.1482\n1.69\n0.0911\n\n\n\nTest: S20_r & a1\n-0.2180\n0.1498\n-1.45\n0.1457\n\n\n\nTest: SLJ & a1\n0.0450\n0.1508\n0.30\n0.7655\n\n\n\nTest: BPT & a1\n0.4451\n0.1495\n2.98\n0.0029\n\n\n\nTest: Star_r & Sex: Boys\n-0.0685\n0.0429\n-1.60\n0.1104\n\n\n\nTest: S20_r & Sex: Boys\n0.0041\n0.0430\n0.10\n0.9232\n\n\n\nTest: SLJ & Sex: Boys\n-0.0136\n0.0429\n-0.32\n0.7512\n\n\n\nTest: BPT & Sex: Boys\n0.1108\n0.0429\n2.58\n0.0099\n\n\n\nResidual\n0.7194\n\n\n\n\n\n\n\n\n\nThe significant interactions with Sex reflect mostly differences related to muscle power, where the physiological constitution gives boys an advantage. The sex difference is smaller when coordination and cognition play a role ‚Äì as in the Star_r test. (Caveat: SEs are estimated with an underspecified RES.)\nThe final step in this first series is to add the interactions between the three covariates. A significant interaction between any of the four Test contrasts and age (linear) x Sex was hypothesized to reflect a prepubertal signal (i.e., hormones start to rise in girls‚Äô ninth year of life). However, this hypothesis is linked to a specific shape of the interaction: Girls would need to gain more than boys in tests of muscular power.\n\nf_ovi = @formula zScore ~ 1 + Test * a1 * Sex + (1 | Child)\nm_ovi_SeqDiff = fit(MixedModel, f_ovi, dat; contrasts=contr1)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0188\n0.0140\n-1.34\n0.1788\n0.6429\n\n\nTest: Star_r\n-0.0159\n0.0435\n-0.36\n0.7156\n\n\n\nTest: S20_r\n0.0091\n0.0436\n0.21\n0.8346\n\n\n\nTest: SLJ\n-0.0020\n0.0438\n-0.05\n0.9628\n\n\n\nTest: BPT\n-0.0228\n0.0437\n-0.52\n0.6018\n\n\n\na1\n0.3837\n0.0477\n8.04\n&lt;1e-15\n\n\n\nSex: Boys\n0.2262\n0.0140\n16.17\n&lt;1e-58\n\n\n\nTest: Star_r & a1\n0.2504\n0.1482\n1.69\n0.0910\n\n\n\nTest: S20_r & a1\n-0.2170\n0.1498\n-1.45\n0.1474\n\n\n\nTest: SLJ & a1\n0.0448\n0.1508\n0.30\n0.7664\n\n\n\nTest: BPT & a1\n0.4446\n0.1496\n2.97\n0.0030\n\n\n\nTest: Star_r & Sex: Boys\n-0.0666\n0.0435\n-1.53\n0.1259\n\n\n\nTest: S20_r & Sex: Boys\n0.0087\n0.0436\n0.20\n0.8423\n\n\n\nTest: SLJ & Sex: Boys\n-0.0200\n0.0438\n-0.46\n0.6474\n\n\n\nTest: BPT & Sex: Boys\n0.1143\n0.0437\n2.61\n0.0090\n\n\n\na1 & Sex: Boys\n-0.0518\n0.0477\n-1.09\n0.2776\n\n\n\nTest: Star_r & a1 & Sex: Boys\n-0.0384\n0.1482\n-0.26\n0.7956\n\n\n\nTest: S20_r & a1 & Sex: Boys\n-0.0917\n0.1498\n-0.61\n0.5405\n\n\n\nTest: SLJ & a1 & Sex: Boys\n0.1303\n0.1508\n0.86\n0.3875\n\n\n\nTest: BPT & a1 & Sex: Boys\n-0.0782\n0.1496\n-0.52\n0.6009\n\n\n\nResidual\n0.7194\n\n\n\n\n\n\n\n\n\nThe results are very clear: Despite an abundance of statistical power there is no evidence for the differences between boys and girls in how much they gain in the ninth year of life in these five tests. The authors argue that, in this case, absence of evidence looks very much like evidence of absence of a hypothesized interaction.\nIn the next two sections we use different contrasts. Does this have a bearing on this result? We still ignore for now that we are looking at anti-conservative test statistics.",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#helmertcoding-contr2",
    "href": "contrasts_fggk21.html#helmertcoding-contr2",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "2.2 HelmertCoding: contr2",
    "text": "2.2 HelmertCoding: contr2\nThe second set of contrasts uses HelmertCoding. Helmert coding codes each level as the difference from the average of the lower levels. With the default order of Test levels we get the following test statistics which we describe in reverse order of appearance in model output\n\nHeC4: 5 - mean(1,2,3,4)\nHeC3: 4 - mean(1,2,3)\nHeC2: 3 - mean(1,2)\nHeC1: 2 - 1\n\nIn the model output, HeC1 will be reported first and HeC4 last.\nThere is some justification for the HeC4 specification in a post-hoc manner because the fifth test (BPT) turned out to be different from the other four tests in that high performance is most likely not only related to physical fitness, but also to overweight/obesity, that is for a subset of children high scores on this test might be indicative of physical unfitness. A priori the SDC4 contrast 5-4 between BPT (5) and SLJ (4) was motivated because conceptually both are tests of the physical fitness component Muscular Power, BPT for upper limbs and SLJ for lower limbs, respectively.\nOne could argue that there is justification for HeC3 because Run (1), Star_r (2), and S20 (3) involve running but SLJ (4) does not. Sports scientists, however, recoil. For them it does not make much sense to average the different running tests, because they draw on completely different physiological resources; it is a variant of the old apples-and-oranges problem.\nThe justification for HeC3 is thatRun (1) and Star_r (2) draw more strongly on cardiosrespiratory Endurance than S20 (3) due to the longer duration of the runs compared to sprinting for 20 m which is a pure measure of the physical-fitness component Speed. Again, sports scientists are not very happy with this proposal.\nFinally, HeC1 contrasts the fitness components Endurance, indicated best by Run (1), and Coordination, indicated by Star_r (2). Endurance (i.e., running for 6 minutes) is considered to be the best indicator of health-related status among the five tests because it is a rather pure measure of cardiorespiratory fitness. The Star_r test requires execution of a pre-instructed sequence of forward, sideways, and backward runs. This coordination of body movements implies a demand on working memory (i.e., remembering the order of these subruns) and executive control processes, but performats also depends on endurance. HeC1 yields a measure of Coordination ‚Äúcorrected‚Äù for the contribution of Endurance.\nThe statistical advantage of HelmertCoding is that the resulting contrasts are orthogonal (uncorrelated). This allows for optimal partitioning of variance and statistical power. It is also more efficient to estimate ‚Äúorthogonal‚Äù than ‚Äúnon-orthogonal‚Äù random-effect structures.\n\ncontr2 = Dict(\n  :School =&gt; Grouping(),\n  :Child =&gt; Grouping(),\n  :Cohort =&gt; Grouping(),\n  :Sex =&gt; EffectsCoding(; levels=[\"Girls\", \"Boys\"]),\n  :Test =&gt; HelmertCoding(;\n    levels=[\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"],\n  ),\n);\n\n\nm_ovi_Helmert = fit(MixedModel, f_ovi, dat; contrasts=contr2)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0188\n0.0140\n-1.34\n0.1788\n0.6429\n\n\nTest: Star_r\n-0.0079\n0.0218\n-0.36\n0.7156\n\n\n\nTest: S20_r\n0.0004\n0.0126\n0.03\n0.9751\n\n\n\nTest: SLJ\n-0.0003\n0.0090\n-0.04\n0.9719\n\n\n\nTest: BPT\n-0.0048\n0.0069\n-0.69\n0.4896\n\n\n\na1\n0.3837\n0.0477\n8.04\n&lt;1e-15\n\n\n\nSex: Boys\n0.2262\n0.0140\n16.17\n&lt;1e-58\n\n\n\nTest: Star_r & a1\n0.1252\n0.0741\n1.69\n0.0910\n\n\n\nTest: S20_r & a1\n-0.0306\n0.0429\n-0.71\n0.4756\n\n\n\nTest: SLJ & a1\n-0.0041\n0.0310\n-0.13\n0.8946\n\n\n\nTest: BPT & a1\n0.0864\n0.0233\n3.72\n0.0002\n\n\n\nTest: Star_r & Sex: Boys\n-0.0333\n0.0218\n-1.53\n0.1259\n\n\n\nTest: S20_r & Sex: Boys\n-0.0082\n0.0126\n-0.65\n0.5142\n\n\n\nTest: SLJ & Sex: Boys\n-0.0091\n0.0090\n-1.02\n0.3093\n\n\n\nTest: BPT & Sex: Boys\n0.0174\n0.0069\n2.53\n0.0115\n\n\n\na1 & Sex: Boys\n-0.0518\n0.0477\n-1.09\n0.2776\n\n\n\nTest: Star_r & a1 & Sex: Boys\n-0.0192\n0.0741\n-0.26\n0.7956\n\n\n\nTest: S20_r & a1 & Sex: Boys\n-0.0370\n0.0429\n-0.86\n0.3892\n\n\n\nTest: SLJ & a1 & Sex: Boys\n0.0141\n0.0310\n0.46\n0.6491\n\n\n\nTest: BPT & a1 & Sex: Boys\n-0.0072\n0.0233\n-0.31\n0.7573\n\n\n\nResidual\n0.7194\n\n\n\n\n\n\n\n\n\nWe forego a detailed discussion of the effects, but note that again none of the interactions between age x Sex with the four test contrasts was significant.\nThe default labeling of Helmert contrasts may lead to confusions with other contrasts. Therefore, we could provide our own labels:\nlabels=[\"c2.1\", \"c3.12\", \"c4.123\", \"c5.1234\"]\nOnce the order of levels is memorized the proposed labelling is very transparent.",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#hypothesiscoding-contr3",
    "href": "contrasts_fggk21.html#hypothesiscoding-contr3",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "2.3 HypothesisCoding: contr3",
    "text": "2.3 HypothesisCoding: contr3\nThe third set of contrasts uses HypothesisCoding. Hypothesis coding allows the user to specify their own a priori contrast matrix, subject to the mathematical constraint that the matrix has full rank. For example, sport scientists agree that the first four tests can be contrasted with BPT, because the difference is akin to a correction of overall physical fitness. However, they want to keep the pairwise comparisons for the first four tests.\n\nHyC1: BPT - mean(1,2,3,4)\nHyC2: Star_r - Run_r\nHyC3: Run_r - S20_r\nHyC4: S20_r - SLJ\n\n\ncontr3 = Dict(\n  :School =&gt; Grouping(),\n  :Child =&gt; Grouping(),\n  :Cohort =&gt; Grouping(),\n  :Sex =&gt; EffectsCoding(; levels=[\"Girls\", \"Boys\"]),\n  :Test =&gt; HypothesisCoding(\n    [\n      -1 -1 -1 -1 +4\n      -1 +1  0  0  0\n       0 -1 +1  0  0\n       0  0 -1 +1  0\n    ];\n    levels=[\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"],\n    labels=[\"BPT-other\", \"Star-End\", \"S20-Star\", \"SLJ-S20\"],\n  ),\n);\n\n\nm_ovi_Hypo = fit(MixedModel, f_ovi, dat; contrasts=contr3)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0188\n0.0140\n-1.34\n0.1788\n0.6429\n\n\nTest: BPT-other\n-0.0951\n0.1376\n-0.69\n0.4896\n\n\n\nTest: Star-End\n-0.0159\n0.0435\n-0.36\n0.7156\n\n\n\nTest: S20-Star\n0.0091\n0.0436\n0.21\n0.8346\n\n\n\nTest: SLJ-S20\n-0.0020\n0.0438\n-0.05\n0.9628\n\n\n\na1\n0.3837\n0.0477\n8.04\n&lt;1e-15\n\n\n\nSex: Boys\n0.2262\n0.0140\n16.17\n&lt;1e-58\n\n\n\nTest: BPT-other & a1\n1.7290\n0.4651\n3.72\n0.0002\n\n\n\nTest: Star-End & a1\n0.2504\n0.1482\n1.69\n0.0910\n\n\n\nTest: S20-Star & a1\n-0.2170\n0.1498\n-1.45\n0.1474\n\n\n\nTest: SLJ-S20 & a1\n0.0448\n0.1508\n0.30\n0.7664\n\n\n\nTest: BPT-other & Sex: Boys\n0.3478\n0.1376\n2.53\n0.0115\n\n\n\nTest: Star-End & Sex: Boys\n-0.0666\n0.0435\n-1.53\n0.1259\n\n\n\nTest: S20-Star & Sex: Boys\n0.0087\n0.0436\n0.20\n0.8423\n\n\n\nTest: SLJ-S20 & Sex: Boys\n-0.0200\n0.0438\n-0.46\n0.6474\n\n\n\na1 & Sex: Boys\n-0.0518\n0.0477\n-1.09\n0.2776\n\n\n\nTest: BPT-other & a1 & Sex: Boys\n-0.1437\n0.4651\n-0.31\n0.7573\n\n\n\nTest: Star-End & a1 & Sex: Boys\n-0.0384\n0.1482\n-0.26\n0.7956\n\n\n\nTest: S20-Star & a1 & Sex: Boys\n-0.0917\n0.1498\n-0.61\n0.5405\n\n\n\nTest: SLJ-S20 & a1 & Sex: Boys\n0.1303\n0.1508\n0.86\n0.3875\n\n\n\nResidual\n0.7194\n\n\n\n\n\n\n\n\n\nWith HypothesisCoding we must generate our own labels for the contrasts. The default labeling of contrasts is usually not interpretable. Therefore, we provide our own.\nAnyway, none of the interactions between age x Sex with the four Test contrasts was significant for these contrasts.\n\ncontr1b = Dict(\n  :School =&gt; Grouping(),\n  :Child =&gt; Grouping(),\n  :Cohort =&gt; Grouping(),\n  :Sex =&gt; EffectsCoding(; levels=[\"Girls\", \"Boys\"]),\n  :Test =&gt; HypothesisCoding(\n    [\n      -1 +1  0  0  0\n       0 -1 +1  0  0\n       0  0 -1 +1  0\n       0  0  0 -1 +1\n    ];\n    levels=[\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"],\n    labels=[\"Star-Run\", \"S20-Star\", \"SLJ-S20\", \"BPT-SLJ\"],\n  ),\n);\n\n\nm_ovi_SeqDiff_v2 = fit(MixedModel, f_ovi, dat; contrasts=contr1b)\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0188\n0.0140\n-1.34\n0.1788\n0.6429\n\n\nTest: Star-Run\n-0.0159\n0.0435\n-0.36\n0.7156\n\n\n\nTest: S20-Star\n0.0091\n0.0436\n0.21\n0.8346\n\n\n\nTest: SLJ-S20\n-0.0020\n0.0438\n-0.05\n0.9628\n\n\n\nTest: BPT-SLJ\n-0.0228\n0.0437\n-0.52\n0.6018\n\n\n\na1\n0.3837\n0.0477\n8.04\n&lt;1e-15\n\n\n\nSex: Boys\n0.2262\n0.0140\n16.17\n&lt;1e-58\n\n\n\nTest: Star-Run & a1\n0.2504\n0.1482\n1.69\n0.0910\n\n\n\nTest: S20-Star & a1\n-0.2170\n0.1498\n-1.45\n0.1474\n\n\n\nTest: SLJ-S20 & a1\n0.0448\n0.1508\n0.30\n0.7664\n\n\n\nTest: BPT-SLJ & a1\n0.4446\n0.1496\n2.97\n0.0030\n\n\n\nTest: Star-Run & Sex: Boys\n-0.0666\n0.0435\n-1.53\n0.1259\n\n\n\nTest: S20-Star & Sex: Boys\n0.0087\n0.0436\n0.20\n0.8423\n\n\n\nTest: SLJ-S20 & Sex: Boys\n-0.0200\n0.0438\n-0.46\n0.6474\n\n\n\nTest: BPT-SLJ & Sex: Boys\n0.1143\n0.0437\n2.61\n0.0090\n\n\n\na1 & Sex: Boys\n-0.0518\n0.0477\n-1.09\n0.2776\n\n\n\nTest: Star-Run & a1 & Sex: Boys\n-0.0384\n0.1482\n-0.26\n0.7956\n\n\n\nTest: S20-Star & a1 & Sex: Boys\n-0.0917\n0.1498\n-0.61\n0.5405\n\n\n\nTest: SLJ-S20 & a1 & Sex: Boys\n0.1303\n0.1508\n0.86\n0.3875\n\n\n\nTest: BPT-SLJ & a1 & Sex: Boys\n-0.0782\n0.1496\n-0.52\n0.6009\n\n\n\nResidual\n0.7194\n\n\n\n\n\n\n\n\n\n\nm_zcp_SeqD = let\n  form = @formula(\n    zScore ~ 1 + Test * a1 * Sex + zerocorr(1 + Test | Child)\n  )\n  fit(MixedModel, form, dat; contrasts=contr1b)\nend\n\n\nMinimizing 20    Time: 0:00:00 ( 5.05 ms/it)\n   objective: 13795.683241425395\n\n\nMinimizing 120    Time: 0:00:00 ( 6.42 ms/it)\n   objective: 13793.207823274213\n\n\nMinimizing 145    Time: 0:00:00 ( 6.24 ms/it)\n   objective: 13741.960703184766\n\n\nMinimizing 164    Time: 0:00:01 ( 6.15 ms/it)\n   objective: 13739.14886031774\n\n\nMinimizing 183    Time: 0:00:01 ( 6.07 ms/it)\n   objective: 13732.66897216879\n\n\nMinimizing 202    Time: 0:00:01 ( 6.00 ms/it)\n   objective: 13700.34532823171\n\n\nMinimizing 221    Time: 0:00:01 ( 5.95 ms/it)\n   objective: 13686.002058622606\n\n\nMinimizing 240    Time: 0:00:01 ( 5.90 ms/it)\n   objective: 13596.748074113195\n\n\nMinimizing 259    Time: 0:00:01 ( 5.86 ms/it)\n   objective: 13583.461503415856\n\n\nMinimizing 278    Time: 0:00:01 ( 5.83 ms/it)\n   objective: 13575.253250048925\n\n\nMinimizing 297    Time: 0:00:01 ( 5.80 ms/it)\n   objective: 13558.689391318498\n\n\nMinimizing 316    Time: 0:00:01 ( 5.77 ms/it)\n   objective: 13479.247420699656\n\n\nMinimizing 335    Time: 0:00:01 ( 5.75 ms/it)\n   objective: 13471.862043551708\n\n\nMinimizing 354    Time: 0:00:02 ( 5.74 ms/it)\n   objective: 13457.678063101353\n\n\nMinimizing 373    Time: 0:00:02 ( 5.71 ms/it)\n   objective: 13444.617229539333\n\n\nMinimizing 392    Time: 0:00:02 ( 5.70 ms/it)\n   objective: 13377.232742409076\n\n\nMinimizing 411    Time: 0:00:02 ( 5.68 ms/it)\n   objective: 13337.649624507554\n\n\nMinimizing 430    Time: 0:00:02 ( 5.66 ms/it)\n   objective: 13297.419276472006\n\n\nMinimizing 449    Time: 0:00:02 ( 5.65 ms/it)\n   objective: 13286.663743705765\n\n\nMinimizing 468    Time: 0:00:02 ( 5.63 ms/it)\n   objective: 13244.796417240068\n\n\nMinimizing 487    Time: 0:00:02 ( 5.62 ms/it)\n   objective: 13243.540927933835\n\n\nMinimizing 506    Time: 0:00:02 ( 5.61 ms/it)\n   objective: 13243.471950346124\n\n\nMinimizing 525    Time: 0:00:02 ( 5.60 ms/it)\n   objective: 13243.443647816894\n\n\nMinimizing 544    Time: 0:00:03 ( 5.60 ms/it)\n   objective: 13243.505080257164\n\n\nMinimizing 563    Time: 0:00:03 ( 5.59 ms/it)\n   objective: 13243.447473559354\n\n\nMinimizing 573    Time: 0:00:03 ( 5.59 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0185\n0.0142\n-1.31\n0.1918\n0.7342\n\n\nTest: Star-Run\n-0.0302\n0.0445\n-0.68\n0.4968\n0.5561\n\n\nTest: S20-Star\n0.0178\n0.0415\n0.43\n0.6687\n0.8972\n\n\nTest: SLJ-S20\n0.0023\n0.0410\n0.06\n0.9552\n0.7252\n\n\nTest: BPT-SLJ\n-0.0253\n0.0440\n-0.58\n0.5644\n0.5520\n\n\na1\n0.3851\n0.0484\n7.96\n&lt;1e-14\n\n\n\nSex: Boys\n0.2260\n0.0142\n15.93\n&lt;1e-56\n\n\n\nTest: Star-Run & a1\n0.3863\n0.1499\n2.58\n0.0100\n\n\n\nTest: S20-Star & a1\n-0.3056\n0.1425\n-2.15\n0.0319\n\n\n\nTest: SLJ-S20 & a1\n0.0494\n0.1414\n0.35\n0.7268\n\n\n\nTest: BPT-SLJ & a1\n0.4331\n0.1499\n2.89\n0.0039\n\n\n\nTest: Star-Run & Sex: Boys\n-0.0483\n0.0445\n-1.09\n0.2769\n\n\n\nTest: S20-Star & Sex: Boys\n0.0024\n0.0415\n0.06\n0.9544\n\n\n\nTest: SLJ-S20 & Sex: Boys\n-0.0239\n0.0410\n-0.58\n0.5600\n\n\n\nTest: BPT-SLJ & Sex: Boys\n0.1203\n0.0440\n2.74\n0.0062\n\n\n\na1 & Sex: Boys\n-0.0487\n0.0484\n-1.01\n0.3143\n\n\n\nTest: Star-Run & a1 & Sex: Boys\n0.0500\n0.1499\n0.33\n0.7385\n\n\n\nTest: S20-Star & a1 & Sex: Boys\n-0.1452\n0.1425\n-1.02\n0.3082\n\n\n\nTest: SLJ-S20 & a1 & Sex: Boys\n0.1354\n0.1414\n0.96\n0.3385\n\n\n\nTest: BPT-SLJ & a1 & Sex: Boys\n-0.0479\n0.1499\n-0.32\n0.7494\n\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nm_zcp_SeqD_2 = let\n  form = @formula(\n    zScore ~ 1 + Test * a1 * Sex + (0 + Test | Child)\n  )\n  fit(MixedModel, form, dat; contrasts=contr1b)\nend\n\n\nMinimizing 14    Time: 0:00:00 ( 7.23 ms/it)\n   objective: 13958.096276689357\n\n\nMinimizing 27    Time: 0:00:00 ( 7.49 ms/it)\n   objective: 13853.927330950353\n\n\nMinimizing 41    Time: 0:00:00 ( 7.55 ms/it)\n   objective: 13803.383837775404\n\n\nMinimizing 55    Time: 0:00:00 ( 7.48 ms/it)\n   objective: 13796.934814512784\n\n\nMinimizing 69    Time: 0:00:00 ( 7.43 ms/it)\n   objective: 13792.445534257555\n\n\nMinimizing 83    Time: 0:00:00 ( 7.40 ms/it)\n   objective: 13788.22936564114\n\n\nMinimizing 97    Time: 0:00:00 ( 7.38 ms/it)\n   objective: 13785.950514535827\n\n\nMinimizing 111    Time: 0:00:00 ( 7.40 ms/it)\n   objective: 13776.33910504711\n\n\nMinimizing 125    Time: 0:00:00 ( 7.38 ms/it)\n   objective: 13769.960050097303\n\n\nMinimizing 139    Time: 0:00:01 ( 7.51 ms/it)\n   objective: 13758.987887558946\n\n\nMinimizing 152    Time: 0:00:01 ( 7.56 ms/it)\n   objective: 13752.08500110124\n\n\nMinimizing 165    Time: 0:00:01 ( 7.60 ms/it)\n   objective: 13724.251290422086\n\n\nMinimizing 178    Time: 0:00:01 ( 7.62 ms/it)\n   objective: 13722.373179668572\n\n\nMinimizing 191    Time: 0:00:01 ( 7.64 ms/it)\n   objective: 13717.282916745942\n\n\nMinimizing 204    Time: 0:00:01 ( 7.66 ms/it)\n   objective: 13706.653406941261\n\n\nMinimizing 217    Time: 0:00:01 ( 7.67 ms/it)\n   objective: 13703.625243910175\n\n\nMinimizing 230    Time: 0:00:01 ( 7.70 ms/it)\n   objective: 13700.628048879833\n\n\nMinimizing 243    Time: 0:00:01 ( 7.70 ms/it)\n   objective: 13697.294438737033\n\n\nMinimizing 257    Time: 0:00:01 ( 7.69 ms/it)\n   objective: 13694.937824610322\n\n\nMinimizing 271    Time: 0:00:02 ( 7.67 ms/it)\n   objective: 13676.825293034999\n\n\nMinimizing 285    Time: 0:00:02 ( 7.66 ms/it)\n   objective: 13652.223597624568\n\n\nMinimizing 299    Time: 0:00:02 ( 7.65 ms/it)\n   objective: 13650.346941961903\n\n\nMinimizing 313    Time: 0:00:02 ( 7.64 ms/it)\n   objective: 13647.161426349616\n\n\nMinimizing 327    Time: 0:00:02 ( 7.63 ms/it)\n   objective: 13645.57626070399\n\n\nMinimizing 341    Time: 0:00:02 ( 7.62 ms/it)\n   objective: 13644.892115771425\n\n\nMinimizing 355    Time: 0:00:02 ( 7.61 ms/it)\n   objective: 13643.3473999997\n\n\nMinimizing 369    Time: 0:00:02 ( 7.60 ms/it)\n   objective: 13641.214443028613\n\n\nMinimizing 383    Time: 0:00:02 ( 7.59 ms/it)\n   objective: 13637.808332160923\n\n\nMinimizing 398    Time: 0:00:03 ( 7.58 ms/it)\n   objective: 13636.067738704303\n\n\nMinimizing 412    Time: 0:00:03 ( 7.57 ms/it)\n   objective: 13635.376249776786\n\n\nMinimizing 426    Time: 0:00:03 ( 7.56 ms/it)\n   objective: 13634.914254977135\n\n\nMinimizing 440    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13633.124443268756\n\n\nMinimizing 454    Time: 0:00:03 ( 7.54 ms/it)\n   objective: 13632.47935622231\n\n\nMinimizing 468    Time: 0:00:03 ( 7.53 ms/it)\n   objective: 13631.019888788105\n\n\nMinimizing 482    Time: 0:00:03 ( 7.52 ms/it)\n   objective: 13630.146438775642\n\n\nMinimizing 496    Time: 0:00:03 ( 7.51 ms/it)\n   objective: 13629.06921492465\n\n\nMinimizing 510    Time: 0:00:03 ( 7.51 ms/it)\n   objective: 13626.426415769027\n\n\nMinimizing 524    Time: 0:00:03 ( 7.51 ms/it)\n   objective: 13625.243561489799\n\n\nMinimizing 538    Time: 0:00:04 ( 7.50 ms/it)\n   objective: 13623.350727268931\n\n\nMinimizing 552    Time: 0:00:04 ( 7.50 ms/it)\n   objective: 13620.695504290867\n\n\nMinimizing 566    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13619.692248866388\n\n\nMinimizing 580    Time: 0:00:04 ( 7.48 ms/it)\n   objective: 13618.901107685797\n\n\nMinimizing 594    Time: 0:00:04 ( 7.48 ms/it)\n   objective: 13617.961860516418\n\n\nMinimizing 608    Time: 0:00:04 ( 7.47 ms/it)\n   objective: 13615.630681165501\n\n\nMinimizing 622    Time: 0:00:04 ( 7.47 ms/it)\n   objective: 13612.495062240527\n\n\nMinimizing 636    Time: 0:00:04 ( 7.47 ms/it)\n   objective: 13612.25530977275\n\n\nMinimizing 650    Time: 0:00:04 ( 7.46 ms/it)\n   objective: 13611.081608791963\n\n\nMinimizing 664    Time: 0:00:04 ( 7.46 ms/it)\n   objective: 13610.876335451998\n\n\nMinimizing 678    Time: 0:00:05 ( 7.45 ms/it)\n   objective: 13610.183452997386\n\n\nMinimizing 692    Time: 0:00:05 ( 7.45 ms/it)\n   objective: 13609.260136878787\n\n\nMinimizing 706    Time: 0:00:05 ( 7.45 ms/it)\n   objective: 13609.113817546538\n\n\nMinimizing 720    Time: 0:00:05 ( 7.45 ms/it)\n   objective: 13608.38725905057\n\n\nMinimizing 734    Time: 0:00:05 ( 7.44 ms/it)\n   objective: 13608.004155805032\n\n\nMinimizing 748    Time: 0:00:05 ( 7.44 ms/it)\n   objective: 13607.46888799686\n\n\nMinimizing 762    Time: 0:00:05 ( 7.44 ms/it)\n   objective: 13607.120436040444\n\n\nMinimizing 776    Time: 0:00:05 ( 7.44 ms/it)\n   objective: 13606.588860711145\n\n\nMinimizing 790    Time: 0:00:05 ( 7.44 ms/it)\n   objective: 13604.936030481156\n\n\nMinimizing 804    Time: 0:00:05 ( 7.44 ms/it)\n   objective: 13603.436514260968\n\n\nMinimizing 818    Time: 0:00:06 ( 7.44 ms/it)\n   objective: 13596.343514460754\n\n\nMinimizing 832    Time: 0:00:06 ( 7.44 ms/it)\n   objective: 13592.91227025399\n\n\nMinimizing 846    Time: 0:00:06 ( 7.44 ms/it)\n   objective: 13590.161566468909\n\n\nMinimizing 860    Time: 0:00:06 ( 7.44 ms/it)\n   objective: 13581.595047366864\n\n\nMinimizing 874    Time: 0:00:06 ( 7.43 ms/it)\n   objective: 13557.14456280414\n\n\nMinimizing 888    Time: 0:00:06 ( 7.43 ms/it)\n   objective: 13554.428574828737\n\n\nMinimizing 902    Time: 0:00:06 ( 7.43 ms/it)\n   objective: 13552.666766131566\n\n\nMinimizing 916    Time: 0:00:06 ( 7.43 ms/it)\n   objective: 13550.495216698357\n\n\nMinimizing 930    Time: 0:00:06 ( 7.43 ms/it)\n   objective: 13545.147481685504\n\n\nMinimizing 944    Time: 0:00:07 ( 7.43 ms/it)\n   objective: 13540.952735456027\n\n\nMinimizing 958    Time: 0:00:07 ( 7.43 ms/it)\n   objective: 13535.298311951447\n\n\nMinimizing 972    Time: 0:00:07 ( 7.43 ms/it)\n   objective: 13478.97848741302\n\n\nMinimizing 986    Time: 0:00:07 ( 7.42 ms/it)\n   objective: 13474.04101929214\n\n\nMinimizing 1000    Time: 0:00:07 ( 7.42 ms/it)\n   objective: 13471.279839430776\n\n\nMinimizing 1014    Time: 0:00:07 ( 7.42 ms/it)\n   objective: 13467.62096486811\n\n\nMinimizing 1028    Time: 0:00:07 ( 7.42 ms/it)\n   objective: 13464.904848033104\n\n\nMinimizing 1042    Time: 0:00:07 ( 7.41 ms/it)\n   objective: 13460.668928991203\n\n\nMinimizing 1056    Time: 0:00:07 ( 7.42 ms/it)\n   objective: 13455.801378786855\n\n\nMinimizing 1070    Time: 0:00:07 ( 7.42 ms/it)\n   objective: 13439.30322656611\n\n\nMinimizing 1084    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13434.936221505981\n\n\nMinimizing 1098    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13431.629253630876\n\n\nMinimizing 1112    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13430.27094196232\n\n\nMinimizing 1126    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13428.32147980835\n\n\nMinimizing 1140    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13427.008781705867\n\n\nMinimizing 1154    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13423.832056229221\n\n\nMinimizing 1168    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13418.1877526592\n\n\nMinimizing 1182    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13417.027217532872\n\n\nMinimizing 1196    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13416.384959456918\n\n\nMinimizing 1210    Time: 0:00:08 ( 7.41 ms/it)\n   objective: 13415.86996836555\n\n\nMinimizing 1224    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13414.540291210811\n\n\nMinimizing 1238    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13410.902471829402\n\n\nMinimizing 1252    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13409.02326577132\n\n\nMinimizing 1266    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13408.971552701063\n\n\nMinimizing 1280    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13408.112999286896\n\n\nMinimizing 1294    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13407.347452882983\n\n\nMinimizing 1308    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13406.302893406064\n\n\nMinimizing 1322    Time: 0:00:09 ( 7.41 ms/it)\n   objective: 13403.147487496164\n\n\nMinimizing 1452    Time: 0:00:10 ( 7.46 ms/it)\n   objective: 13396.499925294469\n\n\nMinimizing 1467    Time: 0:00:10 ( 7.47 ms/it)\n   objective: 13396.028721310948\n\n\nMinimizing 1481    Time: 0:00:11 ( 7.47 ms/it)\n   objective: 13395.783816010793\n\n\nMinimizing 1494    Time: 0:00:11 ( 7.47 ms/it)\n   objective: 13395.130973266627\n\n\nMinimizing 1508    Time: 0:00:11 ( 7.47 ms/it)\n   objective: 13394.386299829697\n\n\nMinimizing 1522    Time: 0:00:11 ( 7.47 ms/it)\n   objective: 13394.275554611042\n\n\nMinimizing 1535    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13393.236971147227\n\n\nMinimizing 1548    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13390.940343763257\n\n\nMinimizing 1561    Time: 0:00:11 ( 7.49 ms/it)\n   objective: 13388.821894539258\n\n\nMinimizing 1574    Time: 0:00:11 ( 7.49 ms/it)\n   objective: 13388.114929612886\n\n\nMinimizing 1587    Time: 0:00:11 ( 7.50 ms/it)\n   objective: 13386.003462989014\n\n\nMinimizing 1600    Time: 0:00:12 ( 7.50 ms/it)\n   objective: 13384.704826393165\n\n\nMinimizing 1612    Time: 0:00:12 ( 7.51 ms/it)\n   objective: 13384.198502577477\n\n\nMinimizing 1624    Time: 0:00:12 ( 7.53 ms/it)\n   objective: 13383.440127206675\n\n\nMinimizing 1637    Time: 0:00:12 ( 7.54 ms/it)\n   objective: 13381.177182780462\n\n\nMinimizing 1651    Time: 0:00:12 ( 7.53 ms/it)\n   objective: 13380.794009953068\n\n\nMinimizing 1665    Time: 0:00:12 ( 7.53 ms/it)\n   objective: 13380.36527182076\n\n\nMinimizing 1679    Time: 0:00:12 ( 7.53 ms/it)\n   objective: 13380.078461932688\n\n\nMinimizing 1693    Time: 0:00:12 ( 7.53 ms/it)\n   objective: 13379.343392701368\n\n\nMinimizing 1707    Time: 0:00:12 ( 7.53 ms/it)\n   objective: 13377.30160623927\n\n\nMinimizing 1721    Time: 0:00:12 ( 7.53 ms/it)\n   objective: 13376.043305249943\n\n\nMinimizing 1735    Time: 0:00:13 ( 7.52 ms/it)\n   objective: 13376.00233811485\n\n\nMinimizing 1749    Time: 0:00:13 ( 7.52 ms/it)\n   objective: 13375.290025818656\n\n\nMinimizing 1763    Time: 0:00:13 ( 7.53 ms/it)\n   objective: 13373.972775665883\n\n\nMinimizing 1776    Time: 0:00:13 ( 7.53 ms/it)\n   objective: 13372.872327688165\n\n\nMinimizing 1790    Time: 0:00:13 ( 7.53 ms/it)\n   objective: 13371.130258506077\n\n\nMinimizing 1804    Time: 0:00:13 ( 7.53 ms/it)\n   objective: 13371.081322021782\n\n\nMinimizing 1818    Time: 0:00:13 ( 7.53 ms/it)\n   objective: 13370.471792827768\n\n\nMinimizing 1832    Time: 0:00:13 ( 7.53 ms/it)\n   objective: 13370.088945210315\n\n\nMinimizing 1846    Time: 0:00:13 ( 7.52 ms/it)\n   objective: 13369.651776962797\n\n\nMinimizing 1860    Time: 0:00:13 ( 7.52 ms/it)\n   objective: 13368.276197292027\n\n\nMinimizing 1874    Time: 0:00:14 ( 7.52 ms/it)\n   objective: 13367.40223621107\n\n\nMinimizing 1888    Time: 0:00:14 ( 7.53 ms/it)\n   objective: 13366.113846081906\n\n\nMinimizing 1902    Time: 0:00:14 ( 7.53 ms/it)\n   objective: 13362.615450903206\n\n\nMinimizing 1916    Time: 0:00:14 ( 7.53 ms/it)\n   objective: 13361.57418047337\n\n\nMinimizing 1930    Time: 0:00:14 ( 7.52 ms/it)\n   objective: 13359.446770258015\n\n\nMinimizing 1944    Time: 0:00:14 ( 7.52 ms/it)\n   objective: 13355.172257229657\n\n\nMinimizing 1958    Time: 0:00:14 ( 7.52 ms/it)\n   objective: 13350.76648153551\n\n\nMinimizing 1972    Time: 0:00:14 ( 7.52 ms/it)\n   objective: 13343.545543528453\n\n\nMinimizing 1986    Time: 0:00:14 ( 7.52 ms/it)\n   objective: 13304.96965935541\n\n\nMinimizing 2000    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13295.306214661556\n\n\nMinimizing 2014    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13294.68902252012\n\n\nMinimizing 2028    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13290.779357267646\n\n\nMinimizing 2042    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13290.493271156723\n\n\nMinimizing 2056    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13288.771001319139\n\n\nMinimizing 2070    Time: 0:00:15 ( 7.50 ms/it)\n   objective: 13288.585431753745\n\n\nMinimizing 2084    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13287.494644271326\n\n\nMinimizing 2097    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13287.077433486382\n\n\nMinimizing 2111    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13285.189492507168\n\n\nMinimizing 2125    Time: 0:00:15 ( 7.51 ms/it)\n   objective: 13282.734983694638\n\n\nMinimizing 2139    Time: 0:00:16 ( 7.51 ms/it)\n   objective: 13281.192448682254\n\n\nMinimizing 2153    Time: 0:00:16 ( 7.50 ms/it)\n   objective: 13280.895421725\n\n\nMinimizing 2168    Time: 0:00:16 ( 7.50 ms/it)\n   objective: 13279.445149912266\n\n\nMinimizing 2182    Time: 0:00:16 ( 7.50 ms/it)\n   objective: 13278.955480167395\n\n\nMinimizing 2196    Time: 0:00:16 ( 7.50 ms/it)\n   objective: 13278.293569932313\n\n\nMinimizing 2210    Time: 0:00:16 ( 7.50 ms/it)\n   objective: 13276.147149746947\n\n\nMinimizing 2224    Time: 0:00:16 ( 7.49 ms/it)\n   objective: 13275.571666197502\n\n\nMinimizing 2238    Time: 0:00:16 ( 7.49 ms/it)\n   objective: 13274.233028785486\n\n\nMinimizing 2252    Time: 0:00:16 ( 7.49 ms/it)\n   objective: 13274.22226883912\n\n\nMinimizing 2266    Time: 0:00:16 ( 7.49 ms/it)\n   objective: 13274.22245773206\n\n\nMinimizing 2280    Time: 0:00:17 ( 7.49 ms/it)\n   objective: 13274.221622243494\n\n\nMinimizing 2294    Time: 0:00:17 ( 7.49 ms/it)\n   objective: 13274.221755675404\n\n\nMinimizing 2308    Time: 0:00:17 ( 7.49 ms/it)\n   objective: 13274.221952518972\n\n\nMinimizing 2322    Time: 0:00:17 ( 7.49 ms/it)\n   objective: 13274.220180784338\n\n\nMinimizing 2336    Time: 0:00:17 ( 7.49 ms/it)\n   objective: 13274.221187317482\n\n\nMinimizing 2350    Time: 0:00:17 ( 7.48 ms/it)\n   objective: 13274.221742416805\n\n\nMinimizing 2364    Time: 0:00:17 ( 7.48 ms/it)\n   objective: 13274.220323532572\n\n\nMinimizing 2378    Time: 0:00:17 ( 7.48 ms/it)\n   objective: 13274.221058141367\n\n\nMinimizing 2392    Time: 0:00:17 ( 7.48 ms/it)\n   objective: 13274.22060523661\n\n\nMinimizing 2406    Time: 0:00:18 ( 7.48 ms/it)\n   objective: 13274.220183199664\n\n\nMinimizing 2420    Time: 0:00:18 ( 7.48 ms/it)\n   objective: 13274.220333634468\n\n\nMinimizing 2434    Time: 0:00:18 ( 7.48 ms/it)\n   objective: 13274.220417155884\n\n\nMinimizing 2448    Time: 0:00:18 ( 7.48 ms/it)\n   objective: 13274.22018123747\n\n\nMinimizing 2462    Time: 0:00:18 ( 7.48 ms/it)\n   objective: 13274.220330580283\n\n\nMinimizing 2476    Time: 0:00:18 ( 7.48 ms/it)\n   objective: 13274.220491772372\n\n\nMinimizing 2490    Time: 0:00:18 ( 7.48 ms/it)\n   objective: 13274.220171288747\n\n\nMinimizing 2496    Time: 0:00:18 ( 7.48 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0192\n0.0139\n-1.38\n0.1677\n\n\n\nTest: Star-Run\n-0.0087\n0.0438\n-0.20\n0.8420\n\n\n\nTest: S20-Star\n0.0081\n0.0442\n0.18\n0.8544\n\n\n\nTest: SLJ-S20\n-0.0058\n0.0443\n-0.13\n0.8964\n\n\n\nTest: BPT-SLJ\n-0.0168\n0.0430\n-0.39\n0.6957\n\n\n\na1\n0.3843\n0.0475\n8.09\n&lt;1e-15\n\n\n\nSex: Boys\n0.2260\n0.0139\n16.23\n&lt;1e-58\n\n\n\nTest: Star-Run & a1\n0.2319\n0.1493\n1.55\n0.1205\n\n\n\nTest: S20-Star & a1\n-0.2279\n0.1519\n-1.50\n0.1335\n\n\n\nTest: SLJ-S20 & a1\n0.0432\n0.1523\n0.28\n0.7768\n\n\n\nTest: BPT-SLJ & a1\n0.4363\n0.1469\n2.97\n0.0030\n\n\n\nTest: Star-Run & Sex: Boys\n-0.0675\n0.0438\n-1.54\n0.1233\n\n\n\nTest: S20-Star & Sex: Boys\n0.0100\n0.0442\n0.23\n0.8218\n\n\n\nTest: SLJ-S20 & Sex: Boys\n-0.0204\n0.0443\n-0.46\n0.6451\n\n\n\nTest: BPT-SLJ & Sex: Boys\n0.1181\n0.0430\n2.75\n0.0060\n\n\n\na1 & Sex: Boys\n-0.0491\n0.0475\n-1.03\n0.3018\n\n\n\nTest: Star-Run & a1 & Sex: Boys\n-0.0262\n0.1493\n-0.18\n0.8605\n\n\n\nTest: S20-Star & a1 & Sex: Boys\n-0.0848\n0.1519\n-0.56\n0.5764\n\n\n\nTest: SLJ-S20 & a1 & Sex: Boys\n0.1249\n0.1523\n0.82\n0.4121\n\n\n\nTest: BPT-SLJ & a1 & Sex: Boys\n-0.0676\n0.1469\n-0.46\n0.6454\n\n\n\nTest: BPT\n\n\n\n\n0.9321\n\n\nTest: SLJ\n\n\n\n\n0.9763\n\n\nTest: Star_r\n\n\n\n\n0.9712\n\n\nTest: Run\n\n\n\n\n0.9560\n\n\nTest: S20_r\n\n\n\n\n0.9731\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nm_cpx_0_SeqDiff = let\n  f_cpx_0 = @formula(\n    zScore ~ 1 + Test * a1 * Sex + (0 + Test | Child)\n  )\n  fit(MixedModel, f_cpx_0, dat; contrasts=contr1b)\nend\n\n\nMinimizing 14    Time: 0:00:00 ( 7.34 ms/it)\n   objective: 13958.096276689357\n\n\nMinimizing 27    Time: 0:00:00 ( 7.56 ms/it)\n   objective: 13853.927330950353\n\n\nMinimizing 41    Time: 0:00:00 ( 7.53 ms/it)\n   objective: 13803.383837775404\n\n\nMinimizing 55    Time: 0:00:00 ( 7.45 ms/it)\n   objective: 13796.934814512784\n\n\nMinimizing 69    Time: 0:00:00 ( 7.44 ms/it)\n   objective: 13792.445534257555\n\n\nMinimizing 83    Time: 0:00:00 ( 7.46 ms/it)\n   objective: 13788.22936564114\n\n\nMinimizing 96    Time: 0:00:00 ( 7.51 ms/it)\n   objective: 13783.035912345247\n\n\nMinimizing 110    Time: 0:00:00 ( 7.53 ms/it)\n   objective: 13775.13623788351\n\n\nMinimizing 124    Time: 0:00:00 ( 7.53 ms/it)\n   objective: 13770.07399426604\n\n\nMinimizing 138    Time: 0:00:01 ( 7.54 ms/it)\n   objective: 13759.26041876622\n\n\nMinimizing 152    Time: 0:00:01 ( 7.54 ms/it)\n   objective: 13752.08500110124\n\n\nMinimizing 166    Time: 0:00:01 ( 7.55 ms/it)\n   objective: 13723.972723588993\n\n\nMinimizing 180    Time: 0:00:01 ( 7.55 ms/it)\n   objective: 13723.167141937301\n\n\nMinimizing 194    Time: 0:00:01 ( 7.54 ms/it)\n   objective: 13710.58791697586\n\n\nMinimizing 208    Time: 0:00:01 ( 7.54 ms/it)\n   objective: 13705.803343243024\n\n\nMinimizing 222    Time: 0:00:01 ( 7.55 ms/it)\n   objective: 13702.427301929349\n\n\nMinimizing 236    Time: 0:00:01 ( 7.55 ms/it)\n   objective: 13698.654193031074\n\n\nMinimizing 250    Time: 0:00:01 ( 7.55 ms/it)\n   objective: 13696.018390315492\n\n\nMinimizing 264    Time: 0:00:01 ( 7.54 ms/it)\n   objective: 13686.49874591076\n\n\nMinimizing 278    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13667.62909957605\n\n\nMinimizing 292    Time: 0:00:02 ( 7.53 ms/it)\n   objective: 13650.89492414067\n\n\nMinimizing 306    Time: 0:00:02 ( 7.53 ms/it)\n   objective: 13648.823544564762\n\n\nMinimizing 320    Time: 0:00:02 ( 7.53 ms/it)\n   objective: 13646.50159827088\n\n\nMinimizing 334    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13645.314876869354\n\n\nMinimizing 348    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13644.313864126347\n\n\nMinimizing 362    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13642.737040022923\n\n\nMinimizing 376    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13640.267886857324\n\n\nMinimizing 389    Time: 0:00:02 ( 7.56 ms/it)\n   objective: 13636.35678914146\n\n\nMinimizing 403    Time: 0:00:03 ( 7.56 ms/it)\n   objective: 13635.98719239693\n\n\nMinimizing 417    Time: 0:00:03 ( 7.56 ms/it)\n   objective: 13635.241892536935\n\n\nMinimizing 431    Time: 0:00:03 ( 7.56 ms/it)\n   objective: 13634.243383715217\n\n\nMinimizing 445    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13632.660758973852\n\n\nMinimizing 459    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13632.089519032248\n\n\nMinimizing 473    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13630.593334011697\n\n\nMinimizing 487    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13629.90743421398\n\n\nMinimizing 501    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13628.720796560312\n\n\nMinimizing 515    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13625.464378166998\n\n\nMinimizing 529    Time: 0:00:03 ( 7.54 ms/it)\n   objective: 13625.023349144914\n\n\nMinimizing 543    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13622.33086434201\n\n\nMinimizing 557    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13620.354457868081\n\n\nMinimizing 571    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13619.526624894766\n\n\nMinimizing 585    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13618.53727570122\n\n\nMinimizing 599    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13616.682628098115\n\n\nMinimizing 613    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13614.558869058052\n\n\nMinimizing 627    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13612.359120344616\n\n\nMinimizing 641    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13611.735153795882\n\n\nMinimizing 655    Time: 0:00:04 ( 7.54 ms/it)\n   objective: 13611.002603083627\n\n\nMinimizing 669    Time: 0:00:05 ( 7.54 ms/it)\n   objective: 13610.705960653293\n\n\nMinimizing 683    Time: 0:00:05 ( 7.53 ms/it)\n   objective: 13609.814866800429\n\n\nMinimizing 697    Time: 0:00:05 ( 7.53 ms/it)\n   objective: 13609.216502147527\n\n\nMinimizing 711    Time: 0:00:05 ( 7.53 ms/it)\n   objective: 13609.025161622085\n\n\nMinimizing 725    Time: 0:00:05 ( 7.53 ms/it)\n   objective: 13608.326385454264\n\n\nMinimizing 739    Time: 0:00:05 ( 7.53 ms/it)\n   objective: 13607.747006054597\n\n\nMinimizing 753    Time: 0:00:05 ( 7.53 ms/it)\n   objective: 13607.289649735067\n\n\nMinimizing 767    Time: 0:00:05 ( 7.53 ms/it)\n   objective: 13606.995514857404\n\n\nMinimizing 781    Time: 0:00:05 ( 7.52 ms/it)\n   objective: 13606.007656368056\n\n\nMinimizing 795    Time: 0:00:05 ( 7.52 ms/it)\n   objective: 13604.85657138568\n\n\nMinimizing 808    Time: 0:00:06 ( 7.53 ms/it)\n   objective: 13602.314845663957\n\n\nMinimizing 821    Time: 0:00:06 ( 7.54 ms/it)\n   objective: 13594.910161295502\n\n\nMinimizing 834    Time: 0:00:06 ( 7.55 ms/it)\n   objective: 13592.704539083803\n\n\nMinimizing 847    Time: 0:00:06 ( 7.55 ms/it)\n   objective: 13589.751873383666\n\n\nMinimizing 860    Time: 0:00:06 ( 7.56 ms/it)\n   objective: 13581.595047366864\n\n\nMinimizing 873    Time: 0:00:06 ( 7.57 ms/it)\n   objective: 13556.226794152717\n\n\nMinimizing 885    Time: 0:00:06 ( 7.59 ms/it)\n   objective: 13554.697132546506\n\n\nMinimizing 898    Time: 0:00:06 ( 7.59 ms/it)\n   objective: 13553.273292355625\n\n\nMinimizing 912    Time: 0:00:06 ( 7.59 ms/it)\n   objective: 13550.906743516018\n\n\nMinimizing 926    Time: 0:00:07 ( 7.59 ms/it)\n   objective: 13547.161816581873\n\n\nMinimizing 939    Time: 0:00:07 ( 7.60 ms/it)\n   objective: 13542.048005684235\n\n\nMinimizing 952    Time: 0:00:07 ( 7.61 ms/it)\n   objective: 13537.125357302488\n\n\nMinimizing 964    Time: 0:00:07 ( 7.62 ms/it)\n   objective: 13525.106149069652\n\n\nMinimizing 976    Time: 0:00:07 ( 7.63 ms/it)\n   objective: 13475.525990767092\n\n\nMinimizing 989    Time: 0:00:07 ( 7.64 ms/it)\n   objective: 13473.05261422792\n\n\nMinimizing 1002    Time: 0:00:07 ( 7.64 ms/it)\n   objective: 13471.400608978183\n\n\nMinimizing 1015    Time: 0:00:07 ( 7.66 ms/it)\n   objective: 13468.22931400111\n\n\nMinimizing 1027    Time: 0:00:07 ( 7.68 ms/it)\n   objective: 13465.060680291033\n\n\nMinimizing 1038    Time: 0:00:07 ( 7.70 ms/it)\n   objective: 13461.464610103663\n\n\nMinimizing 1050    Time: 0:00:08 ( 7.71 ms/it)\n   objective: 13457.984455057325\n\n\nMinimizing 1060    Time: 0:00:08 ( 7.75 ms/it)\n   objective: 13451.069499727775\n\n\nMinimizing 1073    Time: 0:00:08 ( 7.75 ms/it)\n   objective: 13437.381535768662\n\n\nMinimizing 1086    Time: 0:00:08 ( 7.75 ms/it)\n   objective: 13434.752389616056\n\n\nMinimizing 1100    Time: 0:00:08 ( 7.75 ms/it)\n   objective: 13431.463722382134\n\n\nMinimizing 1114    Time: 0:00:08 ( 7.75 ms/it)\n   objective: 13430.047552469878\n\n\nMinimizing 1127    Time: 0:00:08 ( 7.75 ms/it)\n   objective: 13428.265628631823\n\n\nMinimizing 1140    Time: 0:00:08 ( 7.75 ms/it)\n   objective: 13427.008781705867\n\n\nMinimizing 1155    Time: 0:00:08 ( 7.74 ms/it)\n   objective: 13423.818989366067\n\n\nMinimizing 1170    Time: 0:00:09 ( 7.74 ms/it)\n   objective: 13417.689060552599\n\n\nMinimizing 1183    Time: 0:00:09 ( 7.74 ms/it)\n   objective: 13417.026442689763\n\n\nMinimizing 1197    Time: 0:00:09 ( 7.74 ms/it)\n   objective: 13416.295648205458\n\n\nMinimizing 1211    Time: 0:00:09 ( 7.73 ms/it)\n   objective: 13415.827222082196\n\n\nMinimizing 1225    Time: 0:00:09 ( 7.73 ms/it)\n   objective: 13414.392298516563\n\n\nMinimizing 1239    Time: 0:00:09 ( 7.73 ms/it)\n   objective: 13410.653631607413\n\n\nMinimizing 1252    Time: 0:00:09 ( 7.73 ms/it)\n   objective: 13409.02326577132\n\n\nMinimizing 1266    Time: 0:00:09 ( 7.73 ms/it)\n   objective: 13408.971552701063\n\n\nMinimizing 1280    Time: 0:00:09 ( 7.73 ms/it)\n   objective: 13408.112999286896\n\n\nMinimizing 1294    Time: 0:00:09 ( 7.73 ms/it)\n   objective: 13407.347452882983\n\n\nMinimizing 1307    Time: 0:00:10 ( 7.75 ms/it)\n   objective: 13406.230097508065\n\n\nMinimizing 1320    Time: 0:00:10 ( 7.75 ms/it)\n   objective: 13403.765760666742\n\n\nMinimizing 1333    Time: 0:00:10 ( 7.75 ms/it)\n   objective: 13402.559464187223\n\n\nMinimizing 1346    Time: 0:00:10 ( 7.75 ms/it)\n   objective: 13400.88059039502\n\n\nMinimizing 1359    Time: 0:00:10 ( 7.75 ms/it)\n   objective: 13400.358802278424\n\n\nMinimizing 1372    Time: 0:00:10 ( 7.75 ms/it)\n   objective: 13399.866453116505\n\n\nMinimizing 1385    Time: 0:00:10 ( 7.76 ms/it)\n   objective: 13399.52804883835\n\n\nMinimizing 1398    Time: 0:00:10 ( 7.76 ms/it)\n   objective: 13398.091054886107\n\n\nMinimizing 1413    Time: 0:00:10 ( 7.75 ms/it)\n   objective: 13397.351686860238\n\n\nMinimizing 1428    Time: 0:00:11 ( 7.74 ms/it)\n   objective: 13396.885477692755\n\n\nMinimizing 1442    Time: 0:00:11 ( 7.74 ms/it)\n   objective: 13396.745824346748\n\n\nMinimizing 1457    Time: 0:00:11 ( 7.73 ms/it)\n   objective: 13396.348966975158\n\n\nMinimizing 1472    Time: 0:00:11 ( 7.73 ms/it)\n   objective: 13395.860932297146\n\n\nMinimizing 1485    Time: 0:00:11 ( 7.73 ms/it)\n   objective: 13395.641645482545\n\n\nMinimizing 1498    Time: 0:00:11 ( 7.73 ms/it)\n   objective: 13395.253788860959\n\n\nMinimizing 1511    Time: 0:00:11 ( 7.74 ms/it)\n   objective: 13394.379128830537\n\n\nMinimizing 1524    Time: 0:00:11 ( 7.74 ms/it)\n   objective: 13394.031012129191\n\n\nMinimizing 1540    Time: 0:00:11 ( 7.76 ms/it)\n   objective: 13392.717272966613\n\n\nMinimizing 1556    Time: 0:00:12 ( 7.76 ms/it)\n   objective: 13389.030039464065\n\n\nMinimizing 1569    Time: 0:00:12 ( 7.76 ms/it)\n   objective: 13388.561064527981\n\n\nMinimizing 1582    Time: 0:00:12 ( 7.76 ms/it)\n   objective: 13387.017674476563\n\n\nMinimizing 1595    Time: 0:00:12 ( 7.77 ms/it)\n   objective: 13384.681565676641\n\n\nMinimizing 1609    Time: 0:00:12 ( 7.77 ms/it)\n   objective: 13384.555567526942\n\n\nMinimizing 1623    Time: 0:00:12 ( 7.77 ms/it)\n   objective: 13383.50573498341\n\n\nMinimizing 1636    Time: 0:00:12 ( 7.77 ms/it)\n   objective: 13381.6350629503\n\n\nMinimizing 1650    Time: 0:00:12 ( 7.77 ms/it)\n   objective: 13380.796699471146\n\n\nMinimizing 1663    Time: 0:00:12 ( 7.78 ms/it)\n   objective: 13380.429526104766\n\n\nMinimizing 1676    Time: 0:00:13 ( 7.78 ms/it)\n   objective: 13380.127944557229\n\n\nMinimizing 1691    Time: 0:00:13 ( 7.77 ms/it)\n   objective: 13379.585392558336\n\n\nMinimizing 1706    Time: 0:00:13 ( 7.76 ms/it)\n   objective: 13377.471403563977\n\n\nMinimizing 1720    Time: 0:00:13 ( 7.76 ms/it)\n   objective: 13376.040893756915\n\n\nMinimizing 1734    Time: 0:00:13 ( 7.76 ms/it)\n   objective: 13376.007039001444\n\n\nMinimizing 1748    Time: 0:00:13 ( 7.76 ms/it)\n   objective: 13375.313998967074\n\n\nMinimizing 1762    Time: 0:00:13 ( 7.76 ms/it)\n   objective: 13374.087303372435\n\n\nMinimizing 1776    Time: 0:00:13 ( 7.76 ms/it)\n   objective: 13372.872327688165\n\n\nMinimizing 1791    Time: 0:00:13 ( 7.75 ms/it)\n   objective: 13371.164474875666\n\n\nMinimizing 1806    Time: 0:00:13 ( 7.74 ms/it)\n   objective: 13371.05283466111\n\n\nMinimizing 1821    Time: 0:00:14 ( 7.74 ms/it)\n   objective: 13370.35759383552\n\n\nMinimizing 1835    Time: 0:00:14 ( 7.74 ms/it)\n   objective: 13370.044852119943\n\n\nMinimizing 1849    Time: 0:00:14 ( 7.73 ms/it)\n   objective: 13369.543146585173\n\n\nMinimizing 1864    Time: 0:00:14 ( 7.73 ms/it)\n   objective: 13368.01490652017\n\n\nMinimizing 1879    Time: 0:00:14 ( 7.72 ms/it)\n   objective: 13366.436958723003\n\n\nMinimizing 1894    Time: 0:00:14 ( 7.72 ms/it)\n   objective: 13365.541597705494\n\n\nMinimizing 1907    Time: 0:00:14 ( 7.72 ms/it)\n   objective: 13362.364337662832\n\n\nMinimizing 1921    Time: 0:00:14 ( 7.72 ms/it)\n   objective: 13361.505467874274\n\n\nMinimizing 1935    Time: 0:00:14 ( 7.72 ms/it)\n   objective: 13357.401451159007\n\n\nMinimizing 1949    Time: 0:00:15 ( 7.72 ms/it)\n   objective: 13353.712245474831\n\n\nMinimizing 1963    Time: 0:00:15 ( 7.71 ms/it)\n   objective: 13345.706344684251\n\n\nMinimizing 1977    Time: 0:00:15 ( 7.71 ms/it)\n   objective: 13341.370426637324\n\n\nMinimizing 1991    Time: 0:00:15 ( 7.72 ms/it)\n   objective: 13299.907716276459\n\n\nMinimizing 2005    Time: 0:00:15 ( 7.71 ms/it)\n   objective: 13295.171338045402\n\n\nMinimizing 2019    Time: 0:00:15 ( 7.71 ms/it)\n   objective: 13292.741236303656\n\n\nMinimizing 2032    Time: 0:00:15 ( 7.72 ms/it)\n   objective: 13290.720714362848\n\n\nMinimizing 2044    Time: 0:00:15 ( 7.72 ms/it)\n   objective: 13290.36325816749\n\n\nMinimizing 2057    Time: 0:00:15 ( 7.72 ms/it)\n   objective: 13288.749855412854\n\n\nMinimizing 2070    Time: 0:00:15 ( 7.73 ms/it)\n   objective: 13288.585431753745\n\n\nMinimizing 2083    Time: 0:00:16 ( 7.73 ms/it)\n   objective: 13287.505297182317\n\n\nMinimizing 2095    Time: 0:00:16 ( 7.73 ms/it)\n   objective: 13287.301135353438\n\n\nMinimizing 2107    Time: 0:00:16 ( 7.74 ms/it)\n   objective: 13285.93421334331\n\n\nMinimizing 2119    Time: 0:00:16 ( 7.74 ms/it)\n   objective: 13283.74627658879\n\n\nMinimizing 2133    Time: 0:00:16 ( 7.74 ms/it)\n   objective: 13281.26707266552\n\n\nMinimizing 2147    Time: 0:00:16 ( 7.74 ms/it)\n   objective: 13281.167910175529\n\n\nMinimizing 2161    Time: 0:00:16 ( 7.74 ms/it)\n   objective: 13280.322543360351\n\n\nMinimizing 2174    Time: 0:00:16 ( 7.74 ms/it)\n   objective: 13279.051569674324\n\n\nMinimizing 2187    Time: 0:00:16 ( 7.76 ms/it)\n   objective: 13278.916389760736\n\n\nMinimizing 2196    Time: 0:00:17 ( 7.77 ms/it)\n   objective: 13278.293569932313\n\n\nMinimizing 2207    Time: 0:00:17 ( 7.78 ms/it)\n   objective: 13276.522730736498\n\n\nMinimizing 2218    Time: 0:00:17 ( 7.79 ms/it)\n   objective: 13275.703548409394\n\n\nMinimizing 2230    Time: 0:00:17 ( 7.80 ms/it)\n   objective: 13274.827649381114\n\n\nMinimizing 2242    Time: 0:00:17 ( 7.80 ms/it)\n   objective: 13274.228518062751\n\n\nMinimizing 2254    Time: 0:00:17 ( 7.81 ms/it)\n   objective: 13274.222954436293\n\n\nMinimizing 2267    Time: 0:00:17 ( 7.81 ms/it)\n   objective: 13274.221840141501\n\n\nMinimizing 2280    Time: 0:00:17 ( 7.81 ms/it)\n   objective: 13274.221622243494\n\n\nMinimizing 2293    Time: 0:00:17 ( 7.81 ms/it)\n   objective: 13274.221833082294\n\n\nMinimizing 2306    Time: 0:00:18 ( 7.81 ms/it)\n   objective: 13274.221358831317\n\n\nMinimizing 2318    Time: 0:00:18 ( 7.82 ms/it)\n   objective: 13274.222300491674\n\n\nMinimizing 2331    Time: 0:00:18 ( 7.82 ms/it)\n   objective: 13274.221566397231\n\n\nMinimizing 2344    Time: 0:00:18 ( 7.82 ms/it)\n   objective: 13274.220957651109\n\n\nMinimizing 2357    Time: 0:00:18 ( 7.82 ms/it)\n   objective: 13274.221615331393\n\n\nMinimizing 2370    Time: 0:00:18 ( 7.82 ms/it)\n   objective: 13274.22158924045\n\n\nMinimizing 2383    Time: 0:00:18 ( 7.86 ms/it)\n   objective: 13274.220442596052\n\n\nMinimizing 2396    Time: 0:00:18 ( 7.86 ms/it)\n   objective: 13274.221121539493\n\n\nMinimizing 2408    Time: 0:00:18 ( 7.87 ms/it)\n   objective: 13274.220076380865\n\n\nMinimizing 2420    Time: 0:00:19 ( 7.87 ms/it)\n   objective: 13274.220333634468\n\n\nMinimizing 2432    Time: 0:00:19 ( 7.87 ms/it)\n   objective: 13274.21998364167\n\n\nMinimizing 2444    Time: 0:00:19 ( 7.88 ms/it)\n   objective: 13274.22030608698\n\n\nMinimizing 2456    Time: 0:00:19 ( 7.88 ms/it)\n   objective: 13274.220326815615\n\n\nMinimizing 2468    Time: 0:00:19 ( 7.89 ms/it)\n   objective: 13274.22084755692\n\n\nMinimizing 2480    Time: 0:00:19 ( 7.90 ms/it)\n   objective: 13274.220624108711\n\n\nMinimizing 2492    Time: 0:00:19 ( 7.90 ms/it)\n   objective: 13274.220170995264\n\n\nMinimizing 2496    Time: 0:00:19 ( 7.91 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0192\n0.0139\n-1.38\n0.1677\n\n\n\nTest: Star-Run\n-0.0087\n0.0438\n-0.20\n0.8420\n\n\n\nTest: S20-Star\n0.0081\n0.0442\n0.18\n0.8544\n\n\n\nTest: SLJ-S20\n-0.0058\n0.0443\n-0.13\n0.8964\n\n\n\nTest: BPT-SLJ\n-0.0168\n0.0430\n-0.39\n0.6957\n\n\n\na1\n0.3843\n0.0475\n8.09\n&lt;1e-15\n\n\n\nSex: Boys\n0.2260\n0.0139\n16.23\n&lt;1e-58\n\n\n\nTest: Star-Run & a1\n0.2319\n0.1493\n1.55\n0.1205\n\n\n\nTest: S20-Star & a1\n-0.2279\n0.1519\n-1.50\n0.1335\n\n\n\nTest: SLJ-S20 & a1\n0.0432\n0.1523\n0.28\n0.7768\n\n\n\nTest: BPT-SLJ & a1\n0.4363\n0.1469\n2.97\n0.0030\n\n\n\nTest: Star-Run & Sex: Boys\n-0.0675\n0.0438\n-1.54\n0.1233\n\n\n\nTest: S20-Star & Sex: Boys\n0.0100\n0.0442\n0.23\n0.8218\n\n\n\nTest: SLJ-S20 & Sex: Boys\n-0.0204\n0.0443\n-0.46\n0.6451\n\n\n\nTest: BPT-SLJ & Sex: Boys\n0.1181\n0.0430\n2.75\n0.0060\n\n\n\na1 & Sex: Boys\n-0.0491\n0.0475\n-1.03\n0.3018\n\n\n\nTest: Star-Run & a1 & Sex: Boys\n-0.0262\n0.1493\n-0.18\n0.8605\n\n\n\nTest: S20-Star & a1 & Sex: Boys\n-0.0848\n0.1519\n-0.56\n0.5764\n\n\n\nTest: SLJ-S20 & a1 & Sex: Boys\n0.1249\n0.1523\n0.82\n0.4121\n\n\n\nTest: BPT-SLJ & a1 & Sex: Boys\n-0.0676\n0.1469\n-0.46\n0.6454\n\n\n\nTest: BPT\n\n\n\n\n0.9321\n\n\nTest: SLJ\n\n\n\n\n0.9763\n\n\nTest: Star_r\n\n\n\n\n0.9712\n\n\nTest: Run\n\n\n\n\n0.9560\n\n\nTest: S20_r\n\n\n\n\n0.9731\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_cpx_0_SeqDiff)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\nTest: Run\n0.9138687\n0.9559648\n\n\n\n\n\n\n\nTest: Star_r\n0.9432426\n0.9712068\n+0.24\n\n\n\n\n\n\nTest: S20_r\n0.9469631\n0.9731203\n+0.32\n+0.01\n\n\n\n\n\nTest: SLJ\n0.9531358\n0.9762867\n-0.11\n+0.57\n+0.29\n\n\n\n\nTest: BPT\n0.8688704\n0.9321322\n+0.03\n+0.07\n+0.46\n+0.77\n\n\nResidual\n\n0.0000000\n0.0000380\n\n\n\n\n\n\n\n\n\n\nm_cpx_0_SeqDiff.PCA\n\n(Child = \nPrincipal components based on correlation matrix\n Test: Run      1.0     .      .      .      .\n Test: Star_r   0.24   1.0     .      .      .\n Test: S20_r    0.32   0.01   1.0     .      .\n Test: SLJ     -0.11   0.57   0.29   1.0     .\n Test: BPT      0.03   0.07   0.46   0.77   1.0\n\nNormalized cumulative variances:\n[0.4413, 0.6852, 0.9097, 0.9928, 1.0]\n\nComponent loadings\n                 PC1    PC2    PC3    PC4    PC5\n Test: Run     -0.14   0.8    0.26  -0.47  -0.22\n Test: Star_r  -0.35  -0.04   0.78   0.28   0.43\n Test: S20_r   -0.4    0.47  -0.42   0.67   0.03\n Test: SLJ     -0.61  -0.35   0.11  -0.03  -0.7\n Test: BPT     -0.57  -0.13  -0.37  -0.5    0.52,)\n\n\n\nf_cpx_1 = @formula(\n  zScore ~ 1 + Test * a1 * Sex + (1 + Test | Child)\n)\nm_cpx_1_SeqDiff =\nfit(MixedModel, f_cpx_1, dat; contrasts=contr1b)\n\n\nMinimizing 12    Time: 0:00:00 ( 8.52 ms/it)\n   objective: 13929.276340715074\n\n\nMinimizing 23    Time: 0:00:00 ( 8.85 ms/it)\n   objective: 13837.527707007386\n\n\nMinimizing 35    Time: 0:00:00 ( 8.89 ms/it)\n   objective: 13792.77111953147\n\n\nMinimizing 48    Time: 0:00:00 ( 8.68 ms/it)\n   objective: 13784.96980194707\n\n\nMinimizing 60    Time: 0:00:00 ( 8.71 ms/it)\n   objective: 13781.396287604985\n\n\nMinimizing 72    Time: 0:00:00 ( 8.73 ms/it)\n   objective: 13764.331806251168\n\n\nMinimizing 84    Time: 0:00:00 ( 8.70 ms/it)\n   objective: 13738.89393410521\n\n\nMinimizing 96    Time: 0:00:00 ( 8.67 ms/it)\n   objective: 13736.684576058211\n\n\nMinimizing 109    Time: 0:00:00 ( 8.62 ms/it)\n   objective: 13733.167514453606\n\n\nMinimizing 122    Time: 0:00:01 ( 8.58 ms/it)\n   objective: 13729.872806860174\n\n\nMinimizing 135    Time: 0:00:01 ( 8.55 ms/it)\n   objective: 13728.361078211645\n\n\nMinimizing 147    Time: 0:00:01 ( 8.54 ms/it)\n   objective: 13725.792528514492\n\n\nMinimizing 160    Time: 0:00:01 ( 8.51 ms/it)\n   objective: 13723.22814643479\n\n\nMinimizing 173    Time: 0:00:01 ( 8.47 ms/it)\n   objective: 13720.717605106205\n\n\nMinimizing 186    Time: 0:00:01 ( 8.58 ms/it)\n   objective: 13717.84296450872\n\n\nMinimizing 197    Time: 0:00:01 ( 8.61 ms/it)\n   objective: 13712.43985392253\n\n\nMinimizing 210    Time: 0:00:01 ( 8.58 ms/it)\n   objective: 13711.118740554408\n\n\nMinimizing 223    Time: 0:00:01 ( 8.55 ms/it)\n   objective: 13708.037046331692\n\n\nMinimizing 235    Time: 0:00:02 ( 8.60 ms/it)\n   objective: 13704.524593073087\n\n\nMinimizing 246    Time: 0:00:02 ( 8.65 ms/it)\n   objective: 13701.396225918636\n\n\nMinimizing 257    Time: 0:00:02 ( 8.67 ms/it)\n   objective: 13700.703585943482\n\n\nMinimizing 268    Time: 0:00:02 ( 8.71 ms/it)\n   objective: 13697.941473411696\n\n\nMinimizing 280    Time: 0:00:02 ( 8.70 ms/it)\n   objective: 13693.208226269966\n\n\nMinimizing 292    Time: 0:00:02 ( 8.70 ms/it)\n   objective: 13691.734713108743\n\n\nMinimizing 304    Time: 0:00:02 ( 8.69 ms/it)\n   objective: 13689.705185637411\n\n\nMinimizing 316    Time: 0:00:02 ( 8.69 ms/it)\n   objective: 13688.247360863654\n\n\nMinimizing 329    Time: 0:00:02 ( 8.67 ms/it)\n   objective: 13685.560234424034\n\n\nMinimizing 342    Time: 0:00:02 ( 8.64 ms/it)\n   objective: 13681.493044507662\n\n\nMinimizing 354    Time: 0:00:03 ( 8.65 ms/it)\n   objective: 13679.33317295201\n\n\nMinimizing 367    Time: 0:00:03 ( 8.63 ms/it)\n   objective: 13674.386610458501\n\n\nMinimizing 380    Time: 0:00:03 ( 8.61 ms/it)\n   objective: 13666.068830099262\n\n\nMinimizing 392    Time: 0:00:03 ( 8.61 ms/it)\n   objective: 13664.554598700523\n\n\nMinimizing 405    Time: 0:00:03 ( 8.60 ms/it)\n   objective: 13654.834053815906\n\n\nMinimizing 416    Time: 0:00:03 ( 8.62 ms/it)\n   objective: 13652.166771204698\n\n\nMinimizing 427    Time: 0:00:03 ( 8.64 ms/it)\n   objective: 13648.928609222825\n\n\nMinimizing 439    Time: 0:00:03 ( 8.64 ms/it)\n   objective: 13645.40471775829\n\n\nMinimizing 452    Time: 0:00:03 ( 8.63 ms/it)\n   objective: 13640.40168824884\n\n\nMinimizing 465    Time: 0:00:04 ( 8.61 ms/it)\n   objective: 13638.819412524776\n\n\nMinimizing 477    Time: 0:00:04 ( 8.61 ms/it)\n   objective: 13636.658251923465\n\n\nMinimizing 489    Time: 0:00:04 ( 8.60 ms/it)\n   objective: 13635.502842717211\n\n\nMinimizing 501    Time: 0:00:04 ( 8.61 ms/it)\n   objective: 13634.305907261169\n\n\nMinimizing 513    Time: 0:00:04 ( 8.62 ms/it)\n   objective: 13631.74941202161\n\n\nMinimizing 524    Time: 0:00:04 ( 8.64 ms/it)\n   objective: 13630.627768028458\n\n\nMinimizing 535    Time: 0:00:04 ( 8.66 ms/it)\n   objective: 13625.892798122532\n\n\nMinimizing 547    Time: 0:00:04 ( 8.66 ms/it)\n   objective: 13623.053135443322\n\n\nMinimizing 558    Time: 0:00:04 ( 8.67 ms/it)\n   objective: 13622.490978868129\n\n\nMinimizing 570    Time: 0:00:04 ( 8.68 ms/it)\n   objective: 13620.394991065281\n\n\nMinimizing 582    Time: 0:00:05 ( 8.68 ms/it)\n   objective: 13618.991841994903\n\n\nMinimizing 595    Time: 0:00:05 ( 8.66 ms/it)\n   objective: 13617.654500421737\n\n\nMinimizing 612    Time: 0:00:05 ( 8.69 ms/it)\n   objective: 13615.77821401777\n\n\nMinimizing 627    Time: 0:00:05 ( 8.67 ms/it)\n   objective: 13612.357579883865\n\n\nMinimizing 639    Time: 0:00:05 ( 8.67 ms/it)\n   objective: 13612.046429846054\n\n\nMinimizing 652    Time: 0:00:05 ( 8.66 ms/it)\n   objective: 13611.555367377914\n\n\nMinimizing 665    Time: 0:00:05 ( 8.65 ms/it)\n   objective: 13610.985963325536\n\n\nMinimizing 678    Time: 0:00:05 ( 8.65 ms/it)\n   objective: 13606.82096123117\n\n\nMinimizing 691    Time: 0:00:05 ( 8.63 ms/it)\n   objective: 13606.063930253717\n\n\nMinimizing 704    Time: 0:00:06 ( 8.62 ms/it)\n   objective: 13605.739247198402\n\n\nMinimizing 717    Time: 0:00:06 ( 8.62 ms/it)\n   objective: 13605.133092579148\n\n\nMinimizing 730    Time: 0:00:06 ( 8.61 ms/it)\n   objective: 13604.442210848607\n\n\nMinimizing 743    Time: 0:00:06 ( 8.60 ms/it)\n   objective: 13602.569366739957\n\n\nMinimizing 756    Time: 0:00:06 ( 8.59 ms/it)\n   objective: 13601.545645178805\n\n\nMinimizing 768    Time: 0:00:06 ( 8.59 ms/it)\n   objective: 13601.110950380596\n\n\nMinimizing 781    Time: 0:00:06 ( 8.58 ms/it)\n   objective: 13599.796777539359\n\n\nMinimizing 794    Time: 0:00:06 ( 8.58 ms/it)\n   objective: 13599.347918025258\n\n\nMinimizing 807    Time: 0:00:06 ( 8.58 ms/it)\n   objective: 13597.357267859574\n\n\nMinimizing 820    Time: 0:00:07 ( 8.57 ms/it)\n   objective: 13595.032544646536\n\n\nMinimizing 832    Time: 0:00:07 ( 8.57 ms/it)\n   objective: 13587.939678724626\n\n\nMinimizing 845    Time: 0:00:07 ( 8.56 ms/it)\n   objective: 13586.996472394389\n\n\nMinimizing 858    Time: 0:00:07 ( 8.56 ms/it)\n   objective: 13582.166646871541\n\n\nMinimizing 871    Time: 0:00:07 ( 8.55 ms/it)\n   objective: 13577.145558625296\n\n\nMinimizing 882    Time: 0:00:07 ( 8.56 ms/it)\n   objective: 13570.810517439088\n\n\nMinimizing 894    Time: 0:00:07 ( 8.56 ms/it)\n   objective: 13559.797985072684\n\n\nMinimizing 907    Time: 0:00:07 ( 8.56 ms/it)\n   objective: 13550.935258445548\n\n\nMinimizing 920    Time: 0:00:07 ( 8.55 ms/it)\n   objective: 13550.357824462575\n\n\nMinimizing 933    Time: 0:00:07 ( 8.54 ms/it)\n   objective: 13546.406104590234\n\n\nMinimizing 946    Time: 0:00:08 ( 8.53 ms/it)\n   objective: 13544.09618406024\n\n\nMinimizing 958    Time: 0:00:08 ( 8.53 ms/it)\n   objective: 13542.073932900901\n\n\nMinimizing 971    Time: 0:00:08 ( 8.53 ms/it)\n   objective: 13540.948456035367\n\n\nMinimizing 984    Time: 0:00:08 ( 8.52 ms/it)\n   objective: 13538.48635484818\n\n\nMinimizing 997    Time: 0:00:08 ( 8.51 ms/it)\n   objective: 13534.931274543851\n\n\nMinimizing 1010    Time: 0:00:08 ( 8.51 ms/it)\n   objective: 13534.871907629597\n\n\nMinimizing 1023    Time: 0:00:08 ( 8.50 ms/it)\n   objective: 13533.94933847282\n\n\nMinimizing 1036    Time: 0:00:08 ( 8.51 ms/it)\n   objective: 13532.824749177053\n\n\nMinimizing 1049    Time: 0:00:08 ( 8.50 ms/it)\n   objective: 13530.689633284208\n\n\nMinimizing 1062    Time: 0:00:09 ( 8.49 ms/it)\n   objective: 13526.23289207113\n\n\nMinimizing 1075    Time: 0:00:09 ( 8.49 ms/it)\n   objective: 13524.926183098425\n\n\nMinimizing 1088    Time: 0:00:09 ( 8.49 ms/it)\n   objective: 13522.724889413701\n\n\nMinimizing 1100    Time: 0:00:09 ( 8.50 ms/it)\n   objective: 13520.29176526126\n\n\nMinimizing 1112    Time: 0:00:09 ( 8.50 ms/it)\n   objective: 13507.222642923458\n\n\nMinimizing 1125    Time: 0:00:09 ( 8.50 ms/it)\n   objective: 13497.518339655042\n\n\nMinimizing 1138    Time: 0:00:09 ( 8.49 ms/it)\n   objective: 13495.365596738986\n\n\nMinimizing 1151    Time: 0:00:09 ( 8.49 ms/it)\n   objective: 13491.883592525308\n\n\nMinimizing 1163    Time: 0:00:09 ( 8.49 ms/it)\n   objective: 13483.730686377363\n\n\nMinimizing 1175    Time: 0:00:09 ( 8.50 ms/it)\n   objective: 13468.457952433419\n\n\nMinimizing 1188    Time: 0:00:10 ( 8.50 ms/it)\n   objective: 13468.237339559251\n\n\nMinimizing 1200    Time: 0:00:10 ( 8.52 ms/it)\n   objective: 13463.653121592506\n\n\nMinimizing 1212    Time: 0:00:10 ( 8.52 ms/it)\n   objective: 13446.023504156998\n\n\nMinimizing 1224    Time: 0:00:10 ( 8.53 ms/it)\n   objective: 13445.110306189032\n\n\nMinimizing 1235    Time: 0:00:10 ( 8.54 ms/it)\n   objective: 13444.780914739458\n\n\nMinimizing 1247    Time: 0:00:10 ( 8.54 ms/it)\n   objective: 13440.957244725789\n\n\nMinimizing 1260    Time: 0:00:10 ( 8.53 ms/it)\n   objective: 13439.72156556903\n\n\nMinimizing 1273    Time: 0:00:10 ( 8.53 ms/it)\n   objective: 13437.138521236557\n\n\nMinimizing 1286    Time: 0:00:10 ( 8.52 ms/it)\n   objective: 13433.187535498779\n\n\nMinimizing 1299    Time: 0:00:11 ( 8.52 ms/it)\n   objective: 13430.611467918308\n\n\nMinimizing 1311    Time: 0:00:11 ( 8.52 ms/it)\n   objective: 13429.893352925996\n\n\nMinimizing 1324    Time: 0:00:11 ( 8.51 ms/it)\n   objective: 13427.711517145253\n\n\nMinimizing 1337    Time: 0:00:11 ( 8.50 ms/it)\n   objective: 13426.456553155687\n\n\nMinimizing 1350    Time: 0:00:11 ( 8.50 ms/it)\n   objective: 13423.185697404173\n\n\nMinimizing 1362    Time: 0:00:11 ( 8.50 ms/it)\n   objective: 13422.75616250722\n\n\nMinimizing 1375    Time: 0:00:11 ( 8.50 ms/it)\n   objective: 13422.487091027564\n\n\nMinimizing 1388    Time: 0:00:11 ( 8.50 ms/it)\n   objective: 13421.619383294339\n\n\nMinimizing 1402    Time: 0:00:11 ( 8.49 ms/it)\n   objective: 13420.80725859991\n\n\nMinimizing 1416    Time: 0:00:12 ( 8.48 ms/it)\n   objective: 13420.062320468947\n\n\nMinimizing 1430    Time: 0:00:12 ( 8.47 ms/it)\n   objective: 13418.72753879497\n\n\nMinimizing 1444    Time: 0:00:12 ( 8.46 ms/it)\n   objective: 13418.284205332588\n\n\nMinimizing 1457    Time: 0:00:12 ( 8.46 ms/it)\n   objective: 13417.762151375886\n\n\nMinimizing 1471    Time: 0:00:12 ( 8.45 ms/it)\n   objective: 13417.04537730525\n\n\nMinimizing 1483    Time: 0:00:12 ( 8.45 ms/it)\n   objective: 13416.4541990566\n\n\nMinimizing 1496    Time: 0:00:12 ( 8.45 ms/it)\n   objective: 13414.380983287425\n\n\nMinimizing 1509    Time: 0:00:12 ( 8.44 ms/it)\n   objective: 13414.22238142902\n\n\nMinimizing 1522    Time: 0:00:12 ( 8.44 ms/it)\n   objective: 13413.447215936772\n\n\nMinimizing 1536    Time: 0:00:12 ( 8.43 ms/it)\n   objective: 13412.529044777322\n\n\nMinimizing 1550    Time: 0:00:13 ( 8.42 ms/it)\n   objective: 13411.83234324243\n\n\nMinimizing 1564    Time: 0:00:13 ( 8.42 ms/it)\n   objective: 13410.724894116822\n\n\nMinimizing 1577    Time: 0:00:13 ( 8.41 ms/it)\n   objective: 13410.502167195176\n\n\nMinimizing 1590    Time: 0:00:13 ( 8.41 ms/it)\n   objective: 13409.621122646597\n\n\nMinimizing 1603    Time: 0:00:13 ( 8.41 ms/it)\n   objective: 13408.913031626573\n\n\nMinimizing 1615    Time: 0:00:13 ( 8.41 ms/it)\n   objective: 13406.932607061339\n\n\nMinimizing 1628    Time: 0:00:13 ( 8.41 ms/it)\n   objective: 13406.840111974714\n\n\nMinimizing 1641    Time: 0:00:13 ( 8.41 ms/it)\n   objective: 13406.48059772059\n\n\nMinimizing 1654    Time: 0:00:13 ( 8.41 ms/it)\n   objective: 13406.08157088302\n\n\nMinimizing 1667    Time: 0:00:14 ( 8.41 ms/it)\n   objective: 13404.839656116157\n\n\nMinimizing 1680    Time: 0:00:14 ( 8.41 ms/it)\n   objective: 13401.958082434743\n\n\nMinimizing 1694    Time: 0:00:14 ( 8.40 ms/it)\n   objective: 13399.301585239533\n\n\nMinimizing 1708    Time: 0:00:14 ( 8.39 ms/it)\n   objective: 13395.63032715807\n\n\nMinimizing 1722    Time: 0:00:14 ( 8.39 ms/it)\n   objective: 13392.126267604122\n\n\nMinimizing 1734    Time: 0:00:14 ( 8.39 ms/it)\n   objective: 13389.049842695124\n\n\nMinimizing 1746    Time: 0:00:14 ( 8.39 ms/it)\n   objective: 13381.197212772066\n\n\nMinimizing 1759    Time: 0:00:14 ( 8.39 ms/it)\n   objective: 13362.514513952934\n\n\nMinimizing 1773    Time: 0:00:14 ( 8.38 ms/it)\n   objective: 13350.738176441213\n\n\nMinimizing 1786    Time: 0:00:14 ( 8.38 ms/it)\n   objective: 13349.869906174834\n\n\nMinimizing 1800    Time: 0:00:15 ( 8.37 ms/it)\n   objective: 13348.557155143062\n\n\nMinimizing 1814    Time: 0:00:15 ( 8.36 ms/it)\n   objective: 13347.755280288067\n\n\nMinimizing 1827    Time: 0:00:15 ( 8.36 ms/it)\n   objective: 13340.310624379126\n\n\nMinimizing 1841    Time: 0:00:15 ( 8.35 ms/it)\n   objective: 13339.563334675593\n\n\nMinimizing 1855    Time: 0:00:15 ( 8.35 ms/it)\n   objective: 13338.044174251976\n\n\nMinimizing 1868    Time: 0:00:15 ( 8.34 ms/it)\n   objective: 13336.459168692061\n\n\nMinimizing 1882    Time: 0:00:15 ( 8.34 ms/it)\n   objective: 13334.327162271162\n\n\nMinimizing 1895    Time: 0:00:15 ( 8.34 ms/it)\n   objective: 13333.971673587817\n\n\nMinimizing 1909    Time: 0:00:15 ( 8.33 ms/it)\n   objective: 13333.079499349784\n\n\nMinimizing 1923    Time: 0:00:16 ( 8.32 ms/it)\n   objective: 13331.707251850952\n\n\nMinimizing 1937    Time: 0:00:16 ( 8.32 ms/it)\n   objective: 13331.032793699938\n\n\nMinimizing 1951    Time: 0:00:16 ( 8.31 ms/it)\n   objective: 13327.515881729414\n\n\nMinimizing 1964    Time: 0:00:16 ( 8.31 ms/it)\n   objective: 13326.452293402952\n\n\nMinimizing 1977    Time: 0:00:16 ( 8.31 ms/it)\n   objective: 13325.343276844767\n\n\nMinimizing 1989    Time: 0:00:16 ( 8.31 ms/it)\n   objective: 13323.636363115831\n\n\nMinimizing 2001    Time: 0:00:16 ( 8.32 ms/it)\n   objective: 13320.914581796387\n\n\nMinimizing 2015    Time: 0:00:16 ( 8.31 ms/it)\n   objective: 13317.049315981334\n\n\nMinimizing 2029    Time: 0:00:16 ( 8.31 ms/it)\n   objective: 13315.453675747558\n\n\nMinimizing 2043    Time: 0:00:16 ( 8.30 ms/it)\n   objective: 13314.271873245423\n\n\nMinimizing 2057    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13310.317726751513\n\n\nMinimizing 2070    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13310.243207690684\n\n\nMinimizing 2083    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13309.496825024311\n\n\nMinimizing 2096    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13306.33627936474\n\n\nMinimizing 2109    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13306.198593157795\n\n\nMinimizing 2121    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13305.264059152862\n\n\nMinimizing 2133    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13304.66178111358\n\n\nMinimizing 2145    Time: 0:00:17 ( 8.30 ms/it)\n   objective: 13301.288233414365\n\n\nMinimizing 2157    Time: 0:00:17 ( 8.31 ms/it)\n   objective: 13300.778407943537\n\n\nMinimizing 2170    Time: 0:00:18 ( 8.30 ms/it)\n   objective: 13299.038739810887\n\n\nMinimizing 2184    Time: 0:00:18 ( 8.30 ms/it)\n   objective: 13294.067366882053\n\n\nMinimizing 2198    Time: 0:00:18 ( 8.29 ms/it)\n   objective: 13290.328213009125\n\n\nMinimizing 2212    Time: 0:00:18 ( 8.29 ms/it)\n   objective: 13282.598833586118\n\n\nMinimizing 2226    Time: 0:00:18 ( 8.28 ms/it)\n   objective: 13278.417286077645\n\n\nMinimizing 2240    Time: 0:00:18 ( 8.28 ms/it)\n   objective: 13263.419923609457\n\n\nMinimizing 2253    Time: 0:00:18 ( 8.28 ms/it)\n   objective: 13256.051567011338\n\n\nMinimizing 2266    Time: 0:00:18 ( 8.28 ms/it)\n   objective: 13255.979039518628\n\n\nMinimizing 2279    Time: 0:00:18 ( 8.27 ms/it)\n   objective: 13255.958831871845\n\n\nMinimizing 2293    Time: 0:00:18 ( 8.27 ms/it)\n   objective: 13255.951057511265\n\n\nMinimizing 2307    Time: 0:00:19 ( 8.26 ms/it)\n   objective: 13255.955723687744\n\n\nMinimizing 2320    Time: 0:00:19 ( 8.27 ms/it)\n   objective: 13255.952382211108\n\n\nMinimizing 2333    Time: 0:00:19 ( 8.27 ms/it)\n   objective: 13255.950542173421\n\n\nMinimizing 2346    Time: 0:00:19 ( 8.27 ms/it)\n   objective: 13255.948542779312\n\n\nMinimizing 2358    Time: 0:00:19 ( 8.27 ms/it)\n   objective: 13255.947042791988\n\n\nMinimizing 2370    Time: 0:00:19 ( 8.27 ms/it)\n   objective: 13255.950276094227\n\n\nMinimizing 2383    Time: 0:00:19 ( 8.27 ms/it)\n   objective: 13255.950836355914\n\n\nMinimizing 2396    Time: 0:00:19 ( 8.27 ms/it)\n   objective: 13255.950332100314\n\n\nMinimizing 2408    Time: 0:00:19 ( 8.28 ms/it)\n   objective: 13255.94717578325\n\n\nMinimizing 2419    Time: 0:00:20 ( 8.28 ms/it)\n   objective: 13255.947749071609\n\n\nMinimizing 2432    Time: 0:00:20 ( 8.28 ms/it)\n   objective: 13255.949201271942\n\n\nMinimizing 2446    Time: 0:00:20 ( 8.27 ms/it)\n   objective: 13255.950290819586\n\n\nMinimizing 2460    Time: 0:00:20 ( 8.27 ms/it)\n   objective: 13255.947053811047\n\n\nMinimizing 2474    Time: 0:00:20 ( 8.26 ms/it)\n   objective: 13255.9481149754\n\n\nMinimizing 2488    Time: 0:00:20 ( 8.26 ms/it)\n   objective: 13255.946881576121\n\n\nMinimizing 2501    Time: 0:00:20 ( 8.26 ms/it)\n   objective: 13255.950021772733\n\n\nMinimizing 2514    Time: 0:00:20 ( 8.26 ms/it)\n   objective: 13255.950175232603\n\n\nMinimizing 2522    Time: 0:00:20 ( 8.26 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0182\n0.0140\n-1.31\n0.1917\n0.6610\n\n\nTest: Star-Run\n-0.0138\n0.0435\n-0.32\n0.7507\n0.8046\n\n\nTest: S20-Star\n0.0128\n0.0438\n0.29\n0.7698\n0.9220\n\n\nTest: SLJ-S20\n-0.0057\n0.0439\n-0.13\n0.8971\n0.7875\n\n\nTest: BPT-SLJ\n-0.0187\n0.0432\n-0.43\n0.6654\n0.7284\n\n\na1\n0.3842\n0.0477\n8.06\n&lt;1e-15\n\n\n\nSex: Boys\n0.2263\n0.0140\n16.20\n&lt;1e-58\n\n\n\nTest: Star-Run & a1\n0.2752\n0.1480\n1.86\n0.0630\n\n\n\nTest: S20-Star & a1\n-0.2543\n0.1508\n-1.69\n0.0918\n\n\n\nTest: SLJ-S20 & a1\n0.0534\n0.1518\n0.35\n0.7251\n\n\n\nTest: BPT-SLJ & a1\n0.4228\n0.1478\n2.86\n0.0042\n\n\n\nTest: Star-Run & Sex: Boys\n-0.0658\n0.0435\n-1.51\n0.1306\n\n\n\nTest: S20-Star & Sex: Boys\n0.0155\n0.0438\n0.35\n0.7233\n\n\n\nTest: SLJ-S20 & Sex: Boys\n-0.0245\n0.0439\n-0.56\n0.5776\n\n\n\nTest: BPT-SLJ & Sex: Boys\n0.1173\n0.0432\n2.72\n0.0066\n\n\n\na1 & Sex: Boys\n-0.0482\n0.0477\n-1.01\n0.3116\n\n\n\nTest: Star-Run & a1 & Sex: Boys\n0.0032\n0.1480\n0.02\n0.9826\n\n\n\nTest: S20-Star & a1 & Sex: Boys\n-0.1310\n0.1508\n-0.87\n0.3850\n\n\n\nTest: SLJ-S20 & a1 & Sex: Boys\n0.1469\n0.1518\n0.97\n0.3331\n\n\n\nTest: BPT-SLJ & a1 & Sex: Boys\n-0.0676\n0.1478\n-0.46\n0.6474\n\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nm_cpx_1_SeqDiff.PCA\n\n(Child = \nPrincipal components based on correlation matrix\n (Intercept)      1.0     .      .      .      .\n Test: Star-Run   0.66   1.0     .      .      .\n Test: S20-Star  -0.29   0.52   1.0     .      .\n Test: SLJ-S20    0.31  -0.15  -0.56   1.0     .\n Test: BPT-SLJ   -0.45  -0.41  -0.09   0.26   1.0\n\nNormalized cumulative variances:\n[0.4222, 0.7786, 0.9366, 0.9996, 1.0]\n\nComponent loadings\n                   PC1    PC2    PC3    PC4    PC5\n (Intercept)     -0.4    0.58  -0.08   0.38  -0.59\n Test: Star-Run  -0.63   0.09  -0.44   0.09   0.63\n Test: S20-Star  -0.36  -0.55  -0.4   -0.4   -0.5\n Test: SLJ-S20    0.27   0.57  -0.4   -0.66   0.01\n Test: BPT-SLJ    0.49  -0.13  -0.7    0.5   -0.05,)",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#pca-based-hypothesiscoding-contr4",
    "href": "contrasts_fggk21.html#pca-based-hypothesiscoding-contr4",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "2.4 PCA-based HypothesisCoding: contr4",
    "text": "2.4 PCA-based HypothesisCoding: contr4\nThe fourth set of contrasts uses HypothesisCoding to specify the set of contrasts implementing the loadings of the four principle components of the published LMM based on test scores, not test effects (contrasts) - coarse-grained, that is roughly according to their signs. This is actually a very interesting and plausible solution nobody had proposed a priori.\n\nPC1: BPT - Run_r\nPC2: (Star_r + S20_r + SLJ) - (BPT + Run_r)\nPC3: Star_r - (S20_r + SLJ)\nPC4: S20_r - SLJ\n\nPC1 contrasts the worst and the best indicator of physical health; PC2 contrasts these two against the core indicators of physical fitness; PC3 contrasts the cognitive and the physical tests within the narrow set of physical fitness components; and PC4, finally, contrasts two types of lower muscular fitness differing in speed and power.\n\ncontr4 = Dict(\n  :School =&gt; Grouping(),\n  :Child =&gt; Grouping(),\n  :Cohort =&gt; Grouping(),\n  :Sex =&gt; EffectsCoding(; levels=[\"Girls\", \"Boys\"]),\n  :Test =&gt; HypothesisCoding(\n    [\n      -1  0  0  0 +1\n      -3 +2 +2 +2 -3\n       0 +2 -1 -1  0\n       0  0 +1 -1  0\n    ];\n    levels=[\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"],\n    labels=[\"c5.1\", \"c234.15\", \"c2.34\", \"c3.4\"],\n  ),\n);\n\n\nm_cpx_1_PC = fit(MixedModel, f_cpx_1, dat; contrasts=contr4)\n\n\nMinimizing 14    Time: 0:00:00 ( 7.62 ms/it)\n   objective: 13794.047974532547\n\n\nMinimizing 27    Time: 0:00:00 ( 7.76 ms/it)\n   objective: 13797.782797702414\n\n\nMinimizing 40    Time: 0:00:00 ( 7.76 ms/it)\n   objective: 13791.544345614584\n\n\nMinimizing 54    Time: 0:00:00 ( 7.66 ms/it)\n   objective: 13787.293093761387\n\n\nMinimizing 68    Time: 0:00:00 ( 7.62 ms/it)\n   objective: 13777.898546271368\n\n\nMinimizing 82    Time: 0:00:00 ( 7.60 ms/it)\n   objective: 13771.39474996426\n\n\nMinimizing 96    Time: 0:00:00 ( 7.57 ms/it)\n   objective: 13767.001914554048\n\n\nMinimizing 110    Time: 0:00:00 ( 7.56 ms/it)\n   objective: 13761.986853341481\n\n\nMinimizing 124    Time: 0:00:00 ( 7.55 ms/it)\n   objective: 13751.191042756485\n\n\nMinimizing 138    Time: 0:00:01 ( 7.54 ms/it)\n   objective: 13748.675221243115\n\n\nMinimizing 152    Time: 0:00:01 ( 7.53 ms/it)\n   objective: 13743.715097042383\n\n\nMinimizing 166    Time: 0:00:01 ( 7.53 ms/it)\n   objective: 13740.444302695149\n\n\nMinimizing 180    Time: 0:00:01 ( 7.52 ms/it)\n   objective: 13737.617593576835\n\n\nMinimizing 194    Time: 0:00:01 ( 7.51 ms/it)\n   objective: 13735.077905260725\n\n\nMinimizing 208    Time: 0:00:01 ( 7.52 ms/it)\n   objective: 13734.066327675882\n\n\nMinimizing 222    Time: 0:00:01 ( 7.52 ms/it)\n   objective: 13728.823885507838\n\n\nMinimizing 236    Time: 0:00:01 ( 7.51 ms/it)\n   objective: 13727.522919105171\n\n\nMinimizing 250    Time: 0:00:01 ( 7.50 ms/it)\n   objective: 13724.838379711384\n\n\nMinimizing 264    Time: 0:00:01 ( 7.49 ms/it)\n   objective: 13720.312495788192\n\n\nMinimizing 278    Time: 0:00:02 ( 7.49 ms/it)\n   objective: 13718.31806323506\n\n\nMinimizing 292    Time: 0:00:02 ( 7.49 ms/it)\n   objective: 13715.511074848455\n\n\nMinimizing 306    Time: 0:00:02 ( 7.48 ms/it)\n   objective: 13712.522544101783\n\n\nMinimizing 320    Time: 0:00:02 ( 7.48 ms/it)\n   objective: 13710.574046742799\n\n\nMinimizing 334    Time: 0:00:02 ( 7.47 ms/it)\n   objective: 13706.006578421977\n\n\nMinimizing 348    Time: 0:00:02 ( 7.47 ms/it)\n   objective: 13695.192991604777\n\n\nMinimizing 362    Time: 0:00:02 ( 7.47 ms/it)\n   objective: 13690.049013236783\n\n\nMinimizing 376    Time: 0:00:02 ( 7.46 ms/it)\n   objective: 13674.647765110683\n\n\nMinimizing 390    Time: 0:00:02 ( 7.46 ms/it)\n   objective: 13668.938975346697\n\n\nMinimizing 404    Time: 0:00:03 ( 7.46 ms/it)\n   objective: 13662.113145244271\n\n\nMinimizing 418    Time: 0:00:03 ( 7.45 ms/it)\n   objective: 13658.798389366173\n\n\nMinimizing 432    Time: 0:00:03 ( 7.45 ms/it)\n   objective: 13644.878181015447\n\n\nMinimizing 446    Time: 0:00:03 ( 7.45 ms/it)\n   objective: 13638.2057293387\n\n\nMinimizing 460    Time: 0:00:03 ( 7.44 ms/it)\n   objective: 13635.917043272126\n\n\nMinimizing 474    Time: 0:00:03 ( 7.44 ms/it)\n   objective: 13629.160346781788\n\n\nMinimizing 488    Time: 0:00:03 ( 7.44 ms/it)\n   objective: 13623.748681705696\n\n\nMinimizing 502    Time: 0:00:03 ( 7.43 ms/it)\n   objective: 13607.500051095434\n\n\nMinimizing 516    Time: 0:00:03 ( 7.43 ms/it)\n   objective: 13606.00077379994\n\n\nMinimizing 530    Time: 0:00:03 ( 7.43 ms/it)\n   objective: 13590.7645713481\n\n\nMinimizing 544    Time: 0:00:04 ( 7.43 ms/it)\n   objective: 13540.625274060294\n\n\nMinimizing 558    Time: 0:00:04 ( 7.42 ms/it)\n   objective: 13526.470752932473\n\n\nMinimizing 572    Time: 0:00:04 ( 7.42 ms/it)\n   objective: 13522.952671221676\n\n\nMinimizing 586    Time: 0:00:04 ( 7.42 ms/it)\n   objective: 13517.56816429003\n\n\nMinimizing 600    Time: 0:00:04 ( 7.41 ms/it)\n   objective: 13506.824424312355\n\n\nMinimizing 614    Time: 0:00:04 ( 7.41 ms/it)\n   objective: 13497.127190408719\n\n\nMinimizing 628    Time: 0:00:04 ( 7.41 ms/it)\n   objective: 13431.478989472707\n\n\nMinimizing 642    Time: 0:00:04 ( 7.41 ms/it)\n   objective: 13429.652275173561\n\n\nMinimizing 656    Time: 0:00:04 ( 7.41 ms/it)\n   objective: 13421.40058742444\n\n\nMinimizing 670    Time: 0:00:04 ( 7.40 ms/it)\n   objective: 13413.206028189321\n\n\nMinimizing 684    Time: 0:00:05 ( 7.40 ms/it)\n   objective: 13409.45945483011\n\n\nMinimizing 698    Time: 0:00:05 ( 7.40 ms/it)\n   objective: 13403.494254754907\n\n\nMinimizing 712    Time: 0:00:05 ( 7.40 ms/it)\n   objective: 13388.970861441412\n\n\nMinimizing 726    Time: 0:00:05 ( 7.40 ms/it)\n   objective: 13382.911510231788\n\n\nMinimizing 740    Time: 0:00:05 ( 7.39 ms/it)\n   objective: 13361.827419470254\n\n\nMinimizing 754    Time: 0:00:05 ( 7.39 ms/it)\n   objective: 13353.977420994255\n\n\nMinimizing 768    Time: 0:00:05 ( 7.39 ms/it)\n   objective: 13347.172757013468\n\n\nMinimizing 782    Time: 0:00:05 ( 7.39 ms/it)\n   objective: 13340.91103966476\n\n\nMinimizing 796    Time: 0:00:05 ( 7.39 ms/it)\n   objective: 13333.477575470883\n\n\nMinimizing 810    Time: 0:00:05 ( 7.39 ms/it)\n   objective: 13324.268380338428\n\n\nMinimizing 824    Time: 0:00:06 ( 7.39 ms/it)\n   objective: 13317.024214913181\n\n\nMinimizing 838    Time: 0:00:06 ( 7.39 ms/it)\n   objective: 13311.710075671872\n\n\nMinimizing 851    Time: 0:00:06 ( 7.40 ms/it)\n   objective: 13307.983273759033\n\n\nMinimizing 864    Time: 0:00:06 ( 7.42 ms/it)\n   objective: 13307.597608867873\n\n\nMinimizing 876    Time: 0:00:06 ( 7.44 ms/it)\n   objective: 13304.238227328038\n\n\nMinimizing 888    Time: 0:00:06 ( 7.46 ms/it)\n   objective: 13290.702258137055\n\n\nMinimizing 900    Time: 0:00:06 ( 7.47 ms/it)\n   objective: 13289.540077996862\n\n\nMinimizing 913    Time: 0:00:06 ( 7.48 ms/it)\n   objective: 13288.594774925048\n\n\nMinimizing 926    Time: 0:00:06 ( 7.49 ms/it)\n   objective: 13287.407467791461\n\n\nMinimizing 939    Time: 0:00:07 ( 7.50 ms/it)\n   objective: 13285.98673705294\n\n\nMinimizing 952    Time: 0:00:07 ( 7.51 ms/it)\n   objective: 13282.683860083242\n\n\nMinimizing 965    Time: 0:00:07 ( 7.52 ms/it)\n   objective: 13277.176831508827\n\n\nMinimizing 979    Time: 0:00:07 ( 7.52 ms/it)\n   objective: 13277.116727939123\n\n\nMinimizing 992    Time: 0:00:07 ( 7.53 ms/it)\n   objective: 13277.037835033712\n\n\nMinimizing 1004    Time: 0:00:07 ( 7.54 ms/it)\n   objective: 13277.036156009548\n\n\nMinimizing 1018    Time: 0:00:07 ( 7.54 ms/it)\n   objective: 13277.039731819794\n\n\nMinimizing 1032    Time: 0:00:07 ( 7.54 ms/it)\n   objective: 13277.038143113183\n\n\nMinimizing 1046    Time: 0:00:07 ( 7.54 ms/it)\n   objective: 13277.035748280949\n\n\nMinimizing 1060    Time: 0:00:07 ( 7.54 ms/it)\n   objective: 13277.036615888705\n\n\nMinimizing 1074    Time: 0:00:08 ( 7.54 ms/it)\n   objective: 13277.035764520042\n\n\nMinimizing 1088    Time: 0:00:08 ( 7.54 ms/it)\n   objective: 13277.036001308938\n\n\nMinimizing 1102    Time: 0:00:08 ( 7.54 ms/it)\n   objective: 13277.034982220415\n\n\nMinimizing 1116    Time: 0:00:08 ( 7.54 ms/it)\n   objective: 13277.034803737872\n\n\nMinimizing 1130    Time: 0:00:08 ( 7.54 ms/it)\n   objective: 13277.036606398993\n\n\nMinimizing 1144    Time: 0:00:08 ( 7.54 ms/it)\n   objective: 13277.036121916884\n\n\nMinimizing 1158    Time: 0:00:08 ( 7.54 ms/it)\n   objective: 13277.035997634972\n\n\nMinimizing 1172    Time: 0:00:08 ( 7.53 ms/it)\n   objective: 13277.036822464084\n\n\nMinimizing 1186    Time: 0:00:08 ( 7.53 ms/it)\n   objective: 13277.037814242038\n\n\nMinimizing 1200    Time: 0:00:09 ( 7.55 ms/it)\n   objective: 13277.035550159213\n\n\nMinimizing 1210    Time: 0:00:09 ( 7.55 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0183\n0.0140\n-1.31\n0.1907\n0.6251\n\n\nTest: c5.1\n-0.0321\n0.0423\n-0.76\n0.4482\n1.0962\n\n\nTest: c234.15\n0.0251\n0.1659\n0.15\n0.8796\n1.3987\n\n\nTest: c2.34\n-0.0213\n0.0765\n-0.28\n0.7802\n2.3684\n\n\nTest: c3.4\n0.0003\n0.0449\n0.01\n0.9955\n1.4807\n\n\na1\n0.3836\n0.0477\n8.04\n&lt;1e-15\n\n\n\nSex: Boys\n0.2268\n0.0140\n16.24\n&lt;1e-58\n\n\n\nTest: c5.1 & a1\n0.5205\n0.1424\n3.66\n0.0003\n\n\n\nTest: c234.15 & a1\n-0.7538\n0.5624\n-1.34\n0.1801\n\n\n\nTest: c2.34 & a1\n0.4673\n0.2633\n1.77\n0.0760\n\n\n\nTest: c3.4 & a1\n-0.0371\n0.1542\n-0.24\n0.8098\n\n\n\nTest: c5.1 & Sex: Boys\n0.0448\n0.0423\n1.06\n0.2900\n\n\n\nTest: c234.15 & Sex: Boys\n-0.5070\n0.1659\n-3.06\n0.0022\n\n\n\nTest: c2.34 & Sex: Boys\n0.0168\n0.0765\n0.22\n0.8265\n\n\n\nTest: c3.4 & Sex: Boys\n0.0204\n0.0449\n0.45\n0.6500\n\n\n\na1 & Sex: Boys\n-0.0471\n0.0477\n-0.99\n0.3234\n\n\n\nTest: c5.1 & a1 & Sex: Boys\n-0.0537\n0.1424\n-0.38\n0.7063\n\n\n\nTest: c234.15 & a1 & Sex: Boys\n-0.0049\n0.5624\n-0.01\n0.9930\n\n\n\nTest: c2.34 & a1 & Sex: Boys\n0.0638\n0.2633\n0.24\n0.8087\n\n\n\nTest: c3.4 & a1 & Sex: Boys\n-0.1170\n0.1542\n-0.76\n0.4483\n\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_cpx_1_PC)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\n(Intercept)\n0.39072353\n0.62507882\n\n\n\n\n\n\n\nTest: c5.1\n1.20174630\n1.09624190\n-0.06\n\n\n\n\n\n\nTest: c234.15\n1.95647429\n1.39874025\n-1.00\n-0.01\n\n\n\n\n\nTest: c2.34\n5.60929464\n2.36839495\n+0.03\n-0.47\n-0.01\n\n\n\n\nTest: c3.4\n2.19248047\n1.48070270\n-0.13\n-0.49\n+0.17\n-0.15\n\n\nResidual\n\n0.00000000\n0.00003093\n\n\n\n\n\n\n\n\n\n\nm_cpx_1_PC.PCA\n\n(Child = \nPrincipal components based on correlation matrix\n (Intercept)     1.0     .      .      .      .\n Test: c5.1     -0.06   1.0     .      .      .\n Test: c234.15  -1.0   -0.01   1.0     .      .\n Test: c2.34     0.03  -0.47  -0.01   1.0     .\n Test: c3.4     -0.13  -0.49   0.17  -0.15   1.0\n\nNormalized cumulative variances:\n[0.4096, 0.73, 0.9535, 1.0, 1.0]\n\nComponent loadings\n                  PC1    PC2    PC3    PC4   PC5\n (Intercept)    -0.68   0.13   0.14  -0.02  0.71\n Test: c5.1     -0.06  -0.75  -0.02  -0.66  0.06\n Test: c234.15   0.69  -0.08  -0.12   0.08  0.71\n Test: c2.34    -0.03   0.48  -0.72  -0.51  0.01\n Test: c3.4      0.23   0.44   0.67  -0.55  0.0,)\n\n\nThere is a numerical interaction with a z-value &gt; 2.0 for the first PCA (i.e., BPT - Run_r). This interaction would really need to be replicated to be taken seriously. It is probably due to larger ‚Äúunfitness‚Äù gains in boys than girls (i.e., in BPT) relative to the slightly larger health-related ‚Äúfitness‚Äù gains of girls than boys (i.e., in Run_r).\n\ncontr4b = merge(\n  Dict(nm =&gt; Grouping() for nm in (:School, :Child, :Cohort)),\n  Dict(\n    :Sex =&gt; EffectsCoding(; levels=[\"Girls\", \"Boys\"]),\n    :Test =&gt; HypothesisCoding(\n      [\n        0.49 -0.04  0.20  0.03 -0.85\n        0.70 -0.56 -0.21 -0.13  0.37\n        0.31  0.68 -0.56 -0.35  0.00\n        0.04  0.08  0.61 -0.78  0.13\n      ];\n      levels=[\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"],\n      labels=[\"c5.1\", \"c234.15\", \"c12.34\", \"c3.4\"],\n    ),\n  ),\n);\n\n\nm_cpx_1_PC_2 = fit(MixedModel, f_cpx_1, dat; contrasts=contr4b)\n\n\nMinimizing 14    Time: 0:00:00 ( 7.29 ms/it)\n   objective: 13800.713237667174\n\n\nMinimizing 28    Time: 0:00:00 ( 7.41 ms/it)\n   objective: 13795.432999387194\n\n\nMinimizing 42    Time: 0:00:00 ( 7.51 ms/it)\n   objective: 13779.493636429146\n\n\nMinimizing 55    Time: 0:00:00 ( 7.60 ms/it)\n   objective: 13774.68678487492\n\n\nMinimizing 69    Time: 0:00:00 ( 7.56 ms/it)\n   objective: 13768.579346073097\n\n\nMinimizing 84    Time: 0:00:00 ( 7.49 ms/it)\n   objective: 13755.903113089766\n\n\nMinimizing 97    Time: 0:00:00 ( 7.53 ms/it)\n   objective: 13747.916053369836\n\n\nMinimizing 112    Time: 0:00:00 ( 7.47 ms/it)\n   objective: 13742.122059191026\n\n\nMinimizing 125    Time: 0:00:00 ( 7.52 ms/it)\n   objective: 13728.31446628834\n\n\nMinimizing 138    Time: 0:00:01 ( 7.58 ms/it)\n   objective: 13724.508835000339\n\n\nMinimizing 152    Time: 0:00:01 ( 7.56 ms/it)\n   objective: 13720.028166396063\n\n\nMinimizing 166    Time: 0:00:01 ( 7.53 ms/it)\n   objective: 13715.319891473688\n\n\nMinimizing 185    Time: 0:00:01 ( 7.65 ms/it)\n   objective: 13712.904191974641\n\n\nMinimizing 202    Time: 0:00:01 ( 7.61 ms/it)\n   objective: 13710.291770607771\n\n\nMinimizing 216    Time: 0:00:01 ( 7.60 ms/it)\n   objective: 13709.342905807069\n\n\nMinimizing 230    Time: 0:00:01 ( 7.59 ms/it)\n   objective: 13704.27021465556\n\n\nMinimizing 245    Time: 0:00:01 ( 7.57 ms/it)\n   objective: 13701.36572643131\n\n\nMinimizing 258    Time: 0:00:01 ( 7.60 ms/it)\n   objective: 13700.07359653217\n\n\nMinimizing 273    Time: 0:00:02 ( 7.57 ms/it)\n   objective: 13698.347247796046\n\n\nMinimizing 287    Time: 0:00:02 ( 7.56 ms/it)\n   objective: 13695.465155873922\n\n\nMinimizing 301    Time: 0:00:02 ( 7.56 ms/it)\n   objective: 13693.907942425103\n\n\nMinimizing 314    Time: 0:00:02 ( 7.57 ms/it)\n   objective: 13692.748900057368\n\n\nMinimizing 328    Time: 0:00:02 ( 7.56 ms/it)\n   objective: 13689.704128226067\n\n\nMinimizing 342    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13686.339506482174\n\n\nMinimizing 356    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13684.434020242858\n\n\nMinimizing 370    Time: 0:00:02 ( 7.54 ms/it)\n   objective: 13681.733450176922\n\n\nMinimizing 384    Time: 0:00:02 ( 7.53 ms/it)\n   objective: 13679.062732647384\n\n\nMinimizing 398    Time: 0:00:03 ( 7.55 ms/it)\n   objective: 13676.974475402702\n\n\nMinimizing 412    Time: 0:00:03 ( 7.54 ms/it)\n   objective: 13669.609479155064\n\n\nMinimizing 426    Time: 0:00:03 ( 7.54 ms/it)\n   objective: 13621.16333182847\n\n\nMinimizing 440    Time: 0:00:03 ( 7.54 ms/it)\n   objective: 13609.48346464007\n\n\nMinimizing 454    Time: 0:00:03 ( 7.54 ms/it)\n   objective: 13608.281047720386\n\n\nMinimizing 469    Time: 0:00:03 ( 7.53 ms/it)\n   objective: 13602.820002823402\n\n\nMinimizing 483    Time: 0:00:03 ( 7.52 ms/it)\n   objective: 13602.320443396668\n\n\nMinimizing 498    Time: 0:00:03 ( 7.51 ms/it)\n   objective: 13600.959084775877\n\n\nMinimizing 512    Time: 0:00:03 ( 7.51 ms/it)\n   objective: 13599.109490518644\n\n\nMinimizing 527    Time: 0:00:03 ( 7.50 ms/it)\n   objective: 13596.422465915082\n\n\nMinimizing 541    Time: 0:00:04 ( 7.50 ms/it)\n   objective: 13595.28204742126\n\n\nMinimizing 555    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13594.776063342066\n\n\nMinimizing 569    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13594.013031040133\n\n\nMinimizing 583    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13590.443365983843\n\n\nMinimizing 597    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13583.082480205398\n\n\nMinimizing 612    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13581.241213228492\n\n\nMinimizing 626    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13574.392804164272\n\n\nMinimizing 640    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13571.172919884637\n\n\nMinimizing 654    Time: 0:00:04 ( 7.49 ms/it)\n   objective: 13559.289374825792\n\n\nMinimizing 669    Time: 0:00:05 ( 7.48 ms/it)\n   objective: 13556.956993737542\n\n\nMinimizing 683    Time: 0:00:05 ( 7.47 ms/it)\n   objective: 13547.911808805366\n\n\nMinimizing 697    Time: 0:00:05 ( 7.47 ms/it)\n   objective: 13528.64130406268\n\n\nMinimizing 711    Time: 0:00:05 ( 7.47 ms/it)\n   objective: 13526.64397777737\n\n\nMinimizing 725    Time: 0:00:05 ( 7.47 ms/it)\n   objective: 13523.224757374162\n\n\nMinimizing 739    Time: 0:00:05 ( 7.47 ms/it)\n   objective: 13522.680946278371\n\n\nMinimizing 753    Time: 0:00:05 ( 7.46 ms/it)\n   objective: 13519.671333515813\n\n\nMinimizing 767    Time: 0:00:05 ( 7.46 ms/it)\n   objective: 13511.762377332889\n\n\nMinimizing 781    Time: 0:00:05 ( 7.46 ms/it)\n   objective: 13510.715278013326\n\n\nMinimizing 795    Time: 0:00:05 ( 7.46 ms/it)\n   objective: 13504.779562125288\n\n\nMinimizing 809    Time: 0:00:06 ( 7.46 ms/it)\n   objective: 13502.015567997398\n\n\nMinimizing 823    Time: 0:00:06 ( 7.46 ms/it)\n   objective: 13497.536358430989\n\n\nMinimizing 837    Time: 0:00:06 ( 7.46 ms/it)\n   objective: 13469.664899782212\n\n\nMinimizing 851    Time: 0:00:06 ( 7.46 ms/it)\n   objective: 13465.814646610197\n\n\nMinimizing 865    Time: 0:00:06 ( 7.46 ms/it)\n   objective: 13462.297792449674\n\n\nMinimizing 879    Time: 0:00:06 ( 7.46 ms/it)\n   objective: 13461.2544400677\n\n\nMinimizing 893    Time: 0:00:06 ( 7.45 ms/it)\n   objective: 13460.18994678359\n\n\nMinimizing 907    Time: 0:00:06 ( 7.45 ms/it)\n   objective: 13457.9024465174\n\n\nMinimizing 921    Time: 0:00:06 ( 7.45 ms/it)\n   objective: 13457.193384711034\n\n\nMinimizing 936    Time: 0:00:06 ( 7.44 ms/it)\n   objective: 13449.176021037078\n\n\nMinimizing 950    Time: 0:00:07 ( 7.44 ms/it)\n   objective: 13427.82271996962\n\n\nMinimizing 964    Time: 0:00:07 ( 7.45 ms/it)\n   objective: 13391.859739016196\n\n\nMinimizing 978    Time: 0:00:07 ( 7.45 ms/it)\n   objective: 13391.067326087432\n\n\nMinimizing 991    Time: 0:00:07 ( 7.46 ms/it)\n   objective: 13380.836206959255\n\n\nMinimizing 1005    Time: 0:00:07 ( 7.46 ms/it)\n   objective: 13376.124169805888\n\n\nMinimizing 1019    Time: 0:00:07 ( 7.46 ms/it)\n   objective: 13367.626088375211\n\n\nMinimizing 1032    Time: 0:00:07 ( 7.46 ms/it)\n   objective: 13356.273518658767\n\n\nMinimizing 1046    Time: 0:00:07 ( 7.46 ms/it)\n   objective: 13350.829891749658\n\n\nMinimizing 1060    Time: 0:00:07 ( 7.46 ms/it)\n   objective: 13349.447032946584\n\n\nMinimizing 1074    Time: 0:00:08 ( 7.46 ms/it)\n   objective: 13345.870297540925\n\n\nMinimizing 1088    Time: 0:00:08 ( 7.46 ms/it)\n   objective: 13340.176846785398\n\n\nMinimizing 1102    Time: 0:00:08 ( 7.46 ms/it)\n   objective: 13334.522150983248\n\n\nMinimizing 1116    Time: 0:00:08 ( 7.46 ms/it)\n   objective: 13328.212627664776\n\n\nMinimizing 1130    Time: 0:00:08 ( 7.46 ms/it)\n   objective: 13326.410979181775\n\n\nMinimizing 1147    Time: 0:00:08 ( 7.48 ms/it)\n   objective: 13318.160727893133\n\n\nMinimizing 1163    Time: 0:00:08 ( 7.48 ms/it)\n   objective: 13314.703958659127\n\n\nMinimizing 1177    Time: 0:00:08 ( 7.48 ms/it)\n   objective: 13310.176008830633\n\n\nMinimizing 1191    Time: 0:00:08 ( 7.48 ms/it)\n   objective: 13307.281520431774\n\n\nMinimizing 1205    Time: 0:00:09 ( 7.48 ms/it)\n   objective: 13293.728782868508\n\n\nMinimizing 1219    Time: 0:00:09 ( 7.48 ms/it)\n   objective: 13291.83566594802\n\n\nMinimizing 1233    Time: 0:00:09 ( 7.48 ms/it)\n   objective: 13288.332154103002\n\n\nMinimizing 1247    Time: 0:00:09 ( 7.47 ms/it)\n   objective: 13264.319725483554\n\n\nMinimizing 1261    Time: 0:00:09 ( 7.48 ms/it)\n   objective: 13258.235102917388\n\n\nMinimizing 1275    Time: 0:00:09 ( 7.48 ms/it)\n   objective: 13251.074534900457\n\n\nMinimizing 1290    Time: 0:00:09 ( 7.47 ms/it)\n   objective: 13248.120033317333\n\n\nMinimizing 1304    Time: 0:00:09 ( 7.47 ms/it)\n   objective: 13243.917328316718\n\n\nMinimizing 1318    Time: 0:00:09 ( 7.47 ms/it)\n   objective: 13236.962874909557\n\n\nMinimizing 1332    Time: 0:00:09 ( 7.47 ms/it)\n   objective: 13234.849789341548\n\n\nMinimizing 1346    Time: 0:00:10 ( 7.47 ms/it)\n   objective: 13230.661776647263\n\n\nMinimizing 1360    Time: 0:00:10 ( 7.47 ms/it)\n   objective: 13178.609899587856\n\n\nMinimizing 1374    Time: 0:00:10 ( 7.47 ms/it)\n   objective: 13177.322421212913\n\n\nMinimizing 1388    Time: 0:00:10 ( 7.47 ms/it)\n   objective: 13177.203385605724\n\n\nMinimizing 1402    Time: 0:00:10 ( 7.47 ms/it)\n   objective: 13177.191020526632\n\n\nMinimizing 1416    Time: 0:00:10 ( 7.48 ms/it)\n   objective: 13177.167526086356\n\n\nMinimizing 1430    Time: 0:00:10 ( 7.48 ms/it)\n   objective: 13177.180051495758\n\n\nMinimizing 1444    Time: 0:00:10 ( 7.48 ms/it)\n   objective: 13177.231365399683\n\n\nMinimizing 1458    Time: 0:00:10 ( 7.48 ms/it)\n   objective: 13177.183380964794\n\n\nMinimizing 1472    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.230064818243\n\n\nMinimizing 1486    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.190638428627\n\n\nMinimizing 1500    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.182723220467\n\n\nMinimizing 1514    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.173372581514\n\n\nMinimizing 1528    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.201836685897\n\n\nMinimizing 1542    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.178752178981\n\n\nMinimizing 1556    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.200196246005\n\n\nMinimizing 1570    Time: 0:00:11 ( 7.48 ms/it)\n   objective: 13177.17958539087\n\n\nMinimizing 1585    Time: 0:00:11 ( 7.47 ms/it)\n   objective: 13177.166777022008\n\n\nMinimizing 1599    Time: 0:00:11 ( 7.47 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0187\n0.0140\n-1.34\n0.1817\n0.5732\n\n\nTest: c5.1\n0.0185\n0.0308\n0.60\n0.5487\n0.9336\n\n\nTest: c234.15\n-0.0018\n0.0313\n-0.06\n0.9551\n0.6061\n\n\nTest: c12.34\n-0.0014\n0.0310\n-0.04\n0.9642\n0.9682\n\n\nTest: c3.4\n0.0013\n0.0307\n0.04\n0.9666\n0.9014\n\n\na1\n0.3633\n0.0480\n7.57\n&lt;1e-13\n\n\n\nSex: Boys\n0.2209\n0.0140\n15.75\n&lt;1e-55\n\n\n\nTest: c5.1 & a1\n-0.3956\n0.1037\n-3.82\n0.0001\n\n\n\nTest: c234.15 & a1\n0.0215\n0.1064\n0.20\n0.8397\n\n\n\nTest: c12.34 & a1\n0.1231\n0.1064\n1.16\n0.2471\n\n\n\nTest: c3.4 & a1\n0.0352\n0.1055\n0.33\n0.7386\n\n\n\nTest: c5.1 & Sex: Boys\n-0.0517\n0.0308\n-1.68\n0.0926\n\n\n\nTest: c234.15 & Sex: Boys\n0.0813\n0.0313\n2.60\n0.0093\n\n\n\nTest: c12.34 & Sex: Boys\n0.0182\n0.0310\n0.59\n0.5575\n\n\n\nTest: c3.4 & Sex: Boys\n0.0282\n0.0307\n0.92\n0.3575\n\n\n\na1 & Sex: Boys\n-0.0456\n0.0480\n-0.95\n0.3422\n\n\n\nTest: c5.1 & a1 & Sex: Boys\n0.0147\n0.1037\n0.14\n0.8875\n\n\n\nTest: c234.15 & a1 & Sex: Boys\n0.0151\n0.1064\n0.14\n0.8868\n\n\n\nTest: c12.34 & a1 & Sex: Boys\n0.0361\n0.1064\n0.34\n0.7343\n\n\n\nTest: c3.4 & a1 & Sex: Boys\n-0.0742\n0.1055\n-0.70\n0.4819\n\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_cpx_1_PC_2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\n(Intercept)\n0.32857867\n0.57321782\n\n\n\n\n\n\n\nTest: c5.1\n0.87164053\n0.93361691\n-0.19\n\n\n\n\n\n\nTest: c234.15\n0.36734149\n0.60608703\n+0.08\n+0.66\n\n\n\n\n\nTest: c12.34\n0.93736943\n0.96817841\n-0.04\n+0.34\n-0.44\n\n\n\n\nTest: c3.4\n0.81258524\n0.90143510\n-0.14\n+0.62\n+0.94\n-0.43\n\n\nResidual\n\n0.00000000\n0.00000503\n\n\n\n\n\n\n\n\n\n\nm_cpx_1_PC_2.PCA\n\n(Child = \nPrincipal components based on correlation matrix\n (Intercept)     1.0     .      .      .      .\n Test: c5.1     -0.19   1.0     .      .      .\n Test: c234.15   0.08   0.66   1.0     .      .\n Test: c12.34   -0.04   0.34  -0.44   1.0     .\n Test: c3.4     -0.14   0.62   0.94  -0.43   1.0\n\nNormalized cumulative variances:\n[0.5177, 0.7921, 0.9864, 0.9994, 1.0]\n\nComponent loadings\n                  PC1    PC2    PC3    PC4    PC5\n (Intercept)    -0.07  -0.35   0.92  -0.05   0.17\n Test: c5.1      0.45   0.56   0.19   0.47   0.48\n Test: c234.15   0.61  -0.11   0.16   0.24  -0.73\n Test: c12.34   -0.23   0.74   0.31  -0.4   -0.37\n Test: c3.4      0.61  -0.06  -0.07  -0.75   0.25,)\n\n\n\nf_zcp_1 = @formula(zScore ~ 1 + Test*a1*Sex + zerocorr(1 + Test | Child))\nm_zcp_1_PC_2 = fit(MixedModel, f_zcp_1, dat; contrasts=contr4b)\n\n\nMinimizing 23    Time: 0:00:00 ( 4.54 ms/it)\n   objective: 13782.167099698032\n\n\nMinimizing 44    Time: 0:00:00 ( 4.69 ms/it)\n   objective: 13744.363230857201\n\n\nMinimizing 65    Time: 0:00:00 ( 4.73 ms/it)\n   objective: 13681.265607300034\n\n\nMinimizing 86    Time: 0:00:00 ( 4.74 ms/it)\n   objective: 13663.244651454075\n\n\nMinimizing 107    Time: 0:00:00 ( 4.75 ms/it)\n   objective: 13616.06841013093\n\n\nMinimizing 129    Time: 0:00:00 ( 4.75 ms/it)\n   objective: 13596.315995481895\n\n\nMinimizing 150    Time: 0:00:00 ( 4.77 ms/it)\n   objective: 13588.773736940519\n\n\nMinimizing 171    Time: 0:00:00 ( 4.78 ms/it)\n   objective: 13586.676410783282\n\n\nMinimizing 193    Time: 0:00:00 ( 4.77 ms/it)\n   objective: 13585.584116852733\n\n\nMinimizing 215    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13580.904394114088\n\n\nMinimizing 237    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13560.967383716132\n\n\nMinimizing 259    Time: 0:00:01 ( 4.76 ms/it)\n   objective: 13551.07993640141\n\n\nMinimizing 280    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13548.746257208833\n\n\nMinimizing 301    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13539.46269313067\n\n\nMinimizing 323    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13533.707264506324\n\n\nMinimizing 345    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13529.811869657853\n\n\nMinimizing 366    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13525.273145895168\n\n\nMinimizing 388    Time: 0:00:01 ( 4.77 ms/it)\n   objective: 13522.210811853336\n\n\nMinimizing 409    Time: 0:00:01 ( 4.78 ms/it)\n   objective: 13506.465728065908\n\n\nMinimizing 430    Time: 0:00:02 ( 4.80 ms/it)\n   objective: 13497.779794198337\n\n\nMinimizing 451    Time: 0:00:02 ( 4.81 ms/it)\n   objective: 13492.731637490011\n\n\nMinimizing 471    Time: 0:00:02 ( 4.82 ms/it)\n   objective: 13490.706457860651\n\n\nMinimizing 492    Time: 0:00:02 ( 4.82 ms/it)\n   objective: 13473.166174381768\n\n\nMinimizing 512    Time: 0:00:02 ( 4.83 ms/it)\n   objective: 13460.785357772627\n\n\nMinimizing 532    Time: 0:00:02 ( 4.85 ms/it)\n   objective: 13444.258395870493\n\n\nMinimizing 553    Time: 0:00:02 ( 4.85 ms/it)\n   objective: 13432.165292212674\n\n\nMinimizing 572    Time: 0:00:02 ( 4.88 ms/it)\n   objective: 13384.05144387632\n\n\nMinimizing 592    Time: 0:00:02 ( 4.88 ms/it)\n   objective: 13330.132445857831\n\n\nMinimizing 613    Time: 0:00:02 ( 4.88 ms/it)\n   objective: 13279.329938549534\n\n\nMinimizing 634    Time: 0:00:03 ( 4.88 ms/it)\n   objective: 13186.5369970116\n\n\nMinimizing 656    Time: 0:00:03 ( 4.87 ms/it)\n   objective: 13159.185006311454\n\n\nMinimizing 678    Time: 0:00:03 ( 4.87 ms/it)\n   objective: 13132.72104341074\n\n\nMinimizing 700    Time: 0:00:03 ( 4.87 ms/it)\n   objective: 13131.775599866407\n\n\nMinimizing 721    Time: 0:00:03 ( 4.86 ms/it)\n   objective: 13132.01591381713\n\n\nMinimizing 743    Time: 0:00:03 ( 4.86 ms/it)\n   objective: 13131.993630684286\n\n\nMinimizing 764    Time: 0:00:03 ( 4.86 ms/it)\n   objective: 13131.999914921951\n\n\nMinimizing 785    Time: 0:00:03 ( 4.86 ms/it)\n   objective: 13131.432061673084\n\n\nMinimizing 785    Time: 0:00:03 ( 4.86 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0180\n0.0140\n-1.28\n0.1990\n0.5490\n\n\nTest: c5.1\n0.0198\n0.0311\n0.63\n0.5256\n0.8201\n\n\nTest: c234.15\n-0.0011\n0.0310\n-0.03\n0.9729\n0.9446\n\n\nTest: c12.34\n-0.0058\n0.0306\n-0.19\n0.8493\n0.7780\n\n\nTest: c3.4\n0.0016\n0.0316\n0.05\n0.9608\n0.9811\n\n\na1\n0.3686\n0.0480\n7.68\n&lt;1e-13\n\n\n\nSex: Boys\n0.2221\n0.0140\n15.81\n&lt;1e-55\n\n\n\nTest: c5.1 & a1\n-0.3979\n0.1050\n-3.79\n0.0002\n\n\n\nTest: c234.15 & a1\n0.0213\n0.1053\n0.20\n0.8399\n\n\n\nTest: c12.34 & a1\n0.1297\n0.1051\n1.23\n0.2171\n\n\n\nTest: c3.4 & a1\n0.0372\n0.1090\n0.34\n0.7327\n\n\n\nTest: c5.1 & Sex: Boys\n-0.0501\n0.0311\n-1.61\n0.1074\n\n\n\nTest: c234.15 & Sex: Boys\n0.0792\n0.0310\n2.56\n0.0106\n\n\n\nTest: c12.34 & Sex: Boys\n0.0169\n0.0306\n0.55\n0.5804\n\n\n\nTest: c3.4 & Sex: Boys\n0.0287\n0.0316\n0.91\n0.3648\n\n\n\na1 & Sex: Boys\n-0.0515\n0.0480\n-1.07\n0.2835\n\n\n\nTest: c5.1 & a1 & Sex: Boys\n0.0350\n0.1050\n0.33\n0.7388\n\n\n\nTest: c234.15 & a1 & Sex: Boys\n0.0310\n0.1053\n0.29\n0.7686\n\n\n\nTest: c12.34 & a1 & Sex: Boys\n0.0445\n0.1051\n0.42\n0.6717\n\n\n\nTest: c3.4 & a1 & Sex: Boys\n-0.0857\n0.1090\n-0.79\n0.4316\n\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_zcp_1_PC_2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\n(Intercept)\n0.3014435\n0.5490387\n\n\n\n\n\n\n\nTest: c5.1\n0.6726275\n0.8201387\n.\n\n\n\n\n\n\nTest: c234.15\n0.8922518\n0.9445908\n.\n.\n\n\n\n\n\nTest: c12.34\n0.6052162\n0.7779564\n.\n.\n.\n\n\n\n\nTest: c3.4\n0.9625482\n0.9810954\n.\n.\n.\n.\n\n\nResidual\n\n0.0000000\n0.0000017\n\n\n\n\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_zcp_1_PC_2, m_cpx_1_PC_2)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + zerocorr(1 + Test | Child)\n26\n13131\n\n\n\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + (1 + Test | Child)\n36\n13177\n-46\n10\nNaN",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#contrasts-are-re-parameterizations-of-the-same-model",
    "href": "contrasts_fggk21.html#contrasts-are-re-parameterizations-of-the-same-model",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "3.1 Contrasts are re-parameterizations of the same model",
    "text": "3.1 Contrasts are re-parameterizations of the same model\nThe choice of contrast does not affect the model objective, in other words, they all yield the same goodness of fit. It does not matter whether a contrast is orthogonal or not.\n\n[\n  objective(m_ovi_SeqDiff),\n  objective(m_ovi_Helmert),\n  objective(m_ovi_Hypo),\n]\n\n3-element Vector{Float64}:\n 13804.125497927087\n 13804.125497927087\n 13804.125497927087",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#vcs-and-cps-depend-on-contrast-coding",
    "href": "contrasts_fggk21.html#vcs-and-cps-depend-on-contrast-coding",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "3.2 VCs and CPs depend on contrast coding",
    "text": "3.2 VCs and CPs depend on contrast coding\nTrivially, the meaning of a contrast depends on its definition. Consequently, the contrast specification has a big effect on the random-effect structure. As an illustration, we refit the LMMs with variance components (VCs) and correlation parameters (CPs) for Child-related contrasts of Test. Unfortunately, it is not easy, actually rather quite difficult, to grasp the meaning of correlations of contrast-based effects; they represent two-way interactions.\n\nbegin\n  f_Child = @formula zScore ~\n    1 + Test * a1 * Sex + (1 + Test | Child)\n  m_Child_SDC = fit(MixedModel, f_Child, dat; contrasts=contr1)\n  m_Child_HeC = fit(MixedModel, f_Child, dat; contrasts=contr2)\n  m_Child_HyC = fit(MixedModel, f_Child, dat; contrasts=contr3)\n  m_Child_PCA = fit(MixedModel, f_Child, dat; contrasts=contr4)\nend\n\n\nMinimizing 12    Time: 0:00:00 ( 8.70 ms/it)\n   objective: 13929.276340715074\n\n\nMinimizing 23    Time: 0:00:00 ( 9.14 ms/it)\n   objective: 13837.527707007386\n\n\nMinimizing 34    Time: 0:00:00 ( 9.15 ms/it)\n   objective: 13791.832188691686\n\n\nMinimizing 46    Time: 0:00:00 ( 9.11 ms/it)\n   objective: 13783.914311069355\n\n\nMinimizing 57    Time: 0:00:00 ( 9.21 ms/it)\n   objective: 13782.394827272743\n\n\nMinimizing 70    Time: 0:00:00 ( 9.03 ms/it)\n   objective: 13766.90570643793\n\n\nMinimizing 82    Time: 0:00:00 ( 8.98 ms/it)\n   objective: 13739.712571475848\n\n\nMinimizing 99    Time: 0:00:00 ( 9.17 ms/it)\n   objective: 13736.312288452928\n\n\nMinimizing 114    Time: 0:00:01 ( 9.05 ms/it)\n   objective: 13732.81308441301\n\n\nMinimizing 128    Time: 0:00:01 ( 8.84 ms/it)\n   objective: 13726.442799346616\n\n\nMinimizing 143    Time: 0:00:01 ( 8.63 ms/it)\n   objective: 13724.251037157577\n\n\nMinimizing 158    Time: 0:00:01 ( 8.47 ms/it)\n   objective: 13721.329153177092\n\n\nMinimizing 173    Time: 0:00:01 ( 8.34 ms/it)\n   objective: 13711.403483170052\n\n\nMinimizing 187    Time: 0:00:01 ( 8.26 ms/it)\n   objective: 13706.282298307278\n\n\nMinimizing 201    Time: 0:00:01 ( 8.20 ms/it)\n   objective: 13702.010802087409\n\n\nMinimizing 215    Time: 0:00:01 ( 8.16 ms/it)\n   objective: 13692.15068382536\n\n\nMinimizing 229    Time: 0:00:01 ( 8.10 ms/it)\n   objective: 13688.930037764794\n\n\nMinimizing 244    Time: 0:00:01 ( 8.03 ms/it)\n   objective: 13682.232754521518\n\n\nMinimizing 259    Time: 0:00:02 ( 7.97 ms/it)\n   objective: 13675.082363354428\n\n\nMinimizing 274    Time: 0:00:02 ( 7.92 ms/it)\n   objective: 13670.4707738488\n\n\nMinimizing 289    Time: 0:00:02 ( 7.87 ms/it)\n   objective: 13662.080109028699\n\n\nMinimizing 304    Time: 0:00:02 ( 7.82 ms/it)\n   objective: 13661.083277963913\n\n\nMinimizing 319    Time: 0:00:02 ( 7.77 ms/it)\n   objective: 13656.273265932894\n\n\nMinimizing 334    Time: 0:00:02 ( 7.74 ms/it)\n   objective: 13653.702185574959\n\n\nMinimizing 349    Time: 0:00:02 ( 7.70 ms/it)\n   objective: 13649.026095205001\n\n\nMinimizing 364    Time: 0:00:02 ( 7.67 ms/it)\n   objective: 13647.767015540136\n\n\nMinimizing 379    Time: 0:00:02 ( 7.64 ms/it)\n   objective: 13646.000395797415\n\n\nMinimizing 394    Time: 0:00:02 ( 7.60 ms/it)\n   objective: 13642.779210649067\n\n\nMinimizing 409    Time: 0:00:03 ( 7.57 ms/it)\n   objective: 13641.70005410019\n\n\nMinimizing 424    Time: 0:00:03 ( 7.54 ms/it)\n   objective: 13637.79953239049\n\n\nMinimizing 439    Time: 0:00:03 ( 7.51 ms/it)\n   objective: 13635.594209134266\n\n\nMinimizing 454    Time: 0:00:03 ( 7.49 ms/it)\n   objective: 13633.7309139371\n\n\nMinimizing 469    Time: 0:00:03 ( 7.48 ms/it)\n   objective: 13629.413418131637\n\n\nMinimizing 485    Time: 0:00:03 ( 7.45 ms/it)\n   objective: 13618.056525859003\n\n\nMinimizing 500    Time: 0:00:03 ( 7.43 ms/it)\n   objective: 13615.577001591508\n\n\nMinimizing 516    Time: 0:00:03 ( 7.41 ms/it)\n   objective: 13605.317580754185\n\n\nMinimizing 531    Time: 0:00:03 ( 7.39 ms/it)\n   objective: 13599.139563336877\n\n\nMinimizing 547    Time: 0:00:04 ( 7.37 ms/it)\n   objective: 13588.345063470151\n\n\nMinimizing 563    Time: 0:00:04 ( 7.34 ms/it)\n   objective: 13587.276949399806\n\n\nMinimizing 579    Time: 0:00:04 ( 7.33 ms/it)\n   objective: 13581.135591992144\n\n\nMinimizing 594    Time: 0:00:04 ( 7.31 ms/it)\n   objective: 13573.298831469197\n\n\nMinimizing 609    Time: 0:00:04 ( 7.30 ms/it)\n   objective: 13567.492009633446\n\n\nMinimizing 625    Time: 0:00:04 ( 7.28 ms/it)\n   objective: 13561.189593449591\n\n\nMinimizing 639    Time: 0:00:04 ( 7.30 ms/it)\n   objective: 13542.777555107532\n\n\nMinimizing 655    Time: 0:00:04 ( 7.28 ms/it)\n   objective: 13535.753566599938\n\n\nMinimizing 671    Time: 0:00:04 ( 7.27 ms/it)\n   objective: 13533.617550049188\n\n\nMinimizing 687    Time: 0:00:04 ( 7.25 ms/it)\n   objective: 13532.893690634366\n\n\nMinimizing 702    Time: 0:00:05 ( 7.24 ms/it)\n   objective: 13529.780695826914\n\n\nMinimizing 718    Time: 0:00:05 ( 7.23 ms/it)\n   objective: 13527.97221470347\n\n\nMinimizing 733    Time: 0:00:05 ( 7.22 ms/it)\n   objective: 13521.392304743247\n\n\nMinimizing 748    Time: 0:00:05 ( 7.22 ms/it)\n   objective: 13521.193739557486\n\n\nMinimizing 763    Time: 0:00:05 ( 7.22 ms/it)\n   objective: 13518.673609582045\n\n\nMinimizing 777    Time: 0:00:05 ( 7.22 ms/it)\n   objective: 13515.897046117345\n\n\nMinimizing 792    Time: 0:00:05 ( 7.21 ms/it)\n   objective: 13510.647801499508\n\n\nMinimizing 808    Time: 0:00:05 ( 7.20 ms/it)\n   objective: 13508.676605041212\n\n\nMinimizing 824    Time: 0:00:05 ( 7.19 ms/it)\n   objective: 13502.144884331006\n\n\nMinimizing 839    Time: 0:00:06 ( 7.18 ms/it)\n   objective: 13496.286927382702\n\n\nMinimizing 854    Time: 0:00:06 ( 7.18 ms/it)\n   objective: 13496.042108887748\n\n\nMinimizing 869    Time: 0:00:06 ( 7.17 ms/it)\n   objective: 13494.886168328478\n\n\nMinimizing 884    Time: 0:00:06 ( 7.16 ms/it)\n   objective: 13491.210224881099\n\n\nMinimizing 899    Time: 0:00:06 ( 7.16 ms/it)\n   objective: 13490.19681741405\n\n\nMinimizing 914    Time: 0:00:06 ( 7.15 ms/it)\n   objective: 13488.795649771055\n\n\nMinimizing 930    Time: 0:00:06 ( 7.15 ms/it)\n   objective: 13485.759457770087\n\n\nMinimizing 945    Time: 0:00:06 ( 7.14 ms/it)\n   objective: 13479.982639736307\n\n\nMinimizing 960    Time: 0:00:06 ( 7.13 ms/it)\n   objective: 13475.557937421276\n\n\nMinimizing 975    Time: 0:00:06 ( 7.13 ms/it)\n   objective: 13474.507692854364\n\n\nMinimizing 990    Time: 0:00:07 ( 7.13 ms/it)\n   objective: 13471.388925149462\n\n\nMinimizing 1005    Time: 0:00:07 ( 7.13 ms/it)\n   objective: 13468.61830373638\n\n\nMinimizing 1021    Time: 0:00:07 ( 7.12 ms/it)\n   objective: 13467.751325348596\n\n\nMinimizing 1036    Time: 0:00:07 ( 7.12 ms/it)\n   objective: 13458.129428973116\n\n\nMinimizing 1049    Time: 0:00:07 ( 7.16 ms/it)\n   objective: 13455.432870334604\n\n\nMinimizing 1062    Time: 0:00:07 ( 7.16 ms/it)\n   objective: 13428.417871427475\n\n\nMinimizing 1076    Time: 0:00:07 ( 7.17 ms/it)\n   objective: 13424.868867229714\n\n\nMinimizing 1090    Time: 0:00:07 ( 7.18 ms/it)\n   objective: 13423.173230851025\n\n\nMinimizing 1103    Time: 0:00:07 ( 7.19 ms/it)\n   objective: 13422.07684788994\n\n\nMinimizing 1116    Time: 0:00:08 ( 7.20 ms/it)\n   objective: 13420.417121674822\n\n\nMinimizing 1129    Time: 0:00:08 ( 7.21 ms/it)\n   objective: 13419.09211909568\n\n\nMinimizing 1142    Time: 0:00:08 ( 7.21 ms/it)\n   objective: 13416.737701975988\n\n\nMinimizing 1155    Time: 0:00:08 ( 7.23 ms/it)\n   objective: 13414.593557850538\n\n\nMinimizing 1168    Time: 0:00:08 ( 7.24 ms/it)\n   objective: 13410.370224964601\n\n\nMinimizing 1181    Time: 0:00:08 ( 7.25 ms/it)\n   objective: 13406.821374855026\n\n\nMinimizing 1194    Time: 0:00:08 ( 7.26 ms/it)\n   objective: 13401.651265569613\n\n\nMinimizing 1212    Time: 0:00:08 ( 7.28 ms/it)\n   objective: 13380.320568364055\n\n\nMinimizing 1228    Time: 0:00:08 ( 7.30 ms/it)\n   objective: 13371.282672760179\n\n\nMinimizing 1241    Time: 0:00:09 ( 7.30 ms/it)\n   objective: 13369.478086069474\n\n\nMinimizing 1254    Time: 0:00:09 ( 7.31 ms/it)\n   objective: 13363.77717411195\n\n\nMinimizing 1267    Time: 0:00:09 ( 7.32 ms/it)\n   objective: 13362.208792152363\n\n\nMinimizing 1281    Time: 0:00:09 ( 7.32 ms/it)\n   objective: 13361.74072490941\n\n\nMinimizing 1294    Time: 0:00:09 ( 7.33 ms/it)\n   objective: 13359.654625506606\n\n\nMinimizing 1308    Time: 0:00:09 ( 7.33 ms/it)\n   objective: 13358.411169531537\n\n\nMinimizing 1322    Time: 0:00:09 ( 7.33 ms/it)\n   objective: 13357.836459893588\n\n\nMinimizing 1336    Time: 0:00:09 ( 7.33 ms/it)\n   objective: 13349.330629670483\n\n\nMinimizing 1350    Time: 0:00:09 ( 7.34 ms/it)\n   objective: 13348.512033262115\n\n\nMinimizing 1364    Time: 0:00:10 ( 7.34 ms/it)\n   objective: 13333.915858642824\n\n\nMinimizing 1378    Time: 0:00:10 ( 7.34 ms/it)\n   objective: 13331.235838003835\n\n\nMinimizing 1392    Time: 0:00:10 ( 7.34 ms/it)\n   objective: 13329.039777014768\n\n\nMinimizing 1406    Time: 0:00:10 ( 7.34 ms/it)\n   objective: 13322.195920621656\n\n\nMinimizing 1420    Time: 0:00:10 ( 7.34 ms/it)\n   objective: 13311.727557542792\n\n\nMinimizing 1434    Time: 0:00:10 ( 7.35 ms/it)\n   objective: 13289.197153025569\n\n\nMinimizing 1448    Time: 0:00:10 ( 7.35 ms/it)\n   objective: 13288.988794606674\n\n\nMinimizing 1462    Time: 0:00:10 ( 7.35 ms/it)\n   objective: 13287.1009916982\n\n\nMinimizing 1476    Time: 0:00:10 ( 7.35 ms/it)\n   objective: 13283.73233379457\n\n\nMinimizing 1490    Time: 0:00:10 ( 7.35 ms/it)\n   objective: 13282.627537040695\n\n\nMinimizing 1504    Time: 0:00:11 ( 7.35 ms/it)\n   objective: 13278.876412745361\n\n\nMinimizing 1518    Time: 0:00:11 ( 7.35 ms/it)\n   objective: 13277.401206967581\n\n\nMinimizing 1532    Time: 0:00:11 ( 7.35 ms/it)\n   objective: 13275.18164739359\n\n\nMinimizing 1546    Time: 0:00:11 ( 7.35 ms/it)\n   objective: 13273.036939915633\n\n\nMinimizing 1559    Time: 0:00:11 ( 7.36 ms/it)\n   objective: 13269.865056568437\n\n\nMinimizing 1573    Time: 0:00:11 ( 7.36 ms/it)\n   objective: 13259.855670975478\n\n\nMinimizing 1587    Time: 0:00:11 ( 7.36 ms/it)\n   objective: 13259.74173984371\n\n\nMinimizing 1601    Time: 0:00:11 ( 7.36 ms/it)\n   objective: 13258.933894911519\n\n\nMinimizing 1615    Time: 0:00:11 ( 7.36 ms/it)\n   objective: 13258.213348226884\n\n\nMinimizing 1629    Time: 0:00:11 ( 7.37 ms/it)\n   objective: 13257.685863063656\n\n\nMinimizing 1643    Time: 0:00:12 ( 7.37 ms/it)\n   objective: 13256.922912400143\n\n\nMinimizing 1657    Time: 0:00:12 ( 7.37 ms/it)\n   objective: 13255.354851275522\n\n\nMinimizing 1670    Time: 0:00:12 ( 7.37 ms/it)\n   objective: 13254.471155905572\n\n\nMinimizing 1683    Time: 0:00:12 ( 7.38 ms/it)\n   objective: 13254.424118808049\n\n\nMinimizing 1696    Time: 0:00:12 ( 7.38 ms/it)\n   objective: 13254.415038285384\n\n\nMinimizing 1710    Time: 0:00:12 ( 7.38 ms/it)\n   objective: 13254.416012746748\n\n\nMinimizing 1724    Time: 0:00:12 ( 7.38 ms/it)\n   objective: 13254.415690287307\n\n\nMinimizing 1738    Time: 0:00:12 ( 7.38 ms/it)\n   objective: 13254.414634270637\n\n\nMinimizing 1752    Time: 0:00:12 ( 7.38 ms/it)\n   objective: 13254.411087402128\n\n\nMinimizing 1766    Time: 0:00:13 ( 7.38 ms/it)\n   objective: 13254.416940292183\n\n\nMinimizing 1780    Time: 0:00:13 ( 7.38 ms/it)\n   objective: 13254.418543786756\n\n\nMinimizing 1794    Time: 0:00:13 ( 7.38 ms/it)\n   objective: 13254.41512054595\n\n\nMinimizing 1808    Time: 0:00:13 ( 7.38 ms/it)\n   objective: 13254.412589718893\n\n\nMinimizing 1822    Time: 0:00:13 ( 7.39 ms/it)\n   objective: 13254.41609777663\n\n\nMinimizing 1836    Time: 0:00:13 ( 7.39 ms/it)\n   objective: 13254.415806003468\n\n\nMinimizing 1848    Time: 0:00:13 ( 7.40 ms/it)\n   objective: 13254.415208896826\n\n\nMinimizing 1862    Time: 0:00:13 ( 7.40 ms/it)\n   objective: 13254.415739093514\n\n\nMinimizing 1876    Time: 0:00:13 ( 7.40 ms/it)\n   objective: 13254.41506967906\n\n\nMinimizing 1885    Time: 0:00:13 ( 7.40 ms/it)\n\nMinimizing 14    Time: 0:00:00 ( 7.69 ms/it)\n   objective: 14394.636220857941\n\n\nMinimizing 27    Time: 0:00:00 ( 7.88 ms/it)\n   objective: 14748.966993448108\n\n\nMinimizing 40    Time: 0:00:00 ( 7.97 ms/it)\n   objective: 13797.395598188195\n\n\nMinimizing 53    Time: 0:00:00 ( 8.00 ms/it)\n   objective: 13775.816527652232\n\n\nMinimizing 66    Time: 0:00:00 ( 8.03 ms/it)\n   objective: 13765.759762073927\n\n\nMinimizing 79    Time: 0:00:00 ( 8.00 ms/it)\n   objective: 13765.286286756409\n\n\nMinimizing 92    Time: 0:00:00 ( 7.99 ms/it)\n   objective: 13761.515450615618\n\n\nMinimizing 105    Time: 0:00:00 ( 7.99 ms/it)\n   objective: 13755.433016320818\n\n\nMinimizing 118    Time: 0:00:00 ( 7.99 ms/it)\n   objective: 13746.772623552792\n\n\nMinimizing 131    Time: 0:00:01 ( 7.97 ms/it)\n   objective: 13743.782440191088\n\n\nMinimizing 145    Time: 0:00:01 ( 7.93 ms/it)\n   objective: 13731.562733290644\n\n\nMinimizing 158    Time: 0:00:01 ( 7.93 ms/it)\n   objective: 13726.734622504551\n\n\nMinimizing 171    Time: 0:00:01 ( 7.94 ms/it)\n   objective: 13720.021301589197\n\n\nMinimizing 184    Time: 0:00:01 ( 7.94 ms/it)\n   objective: 13709.08372096909\n\n\nMinimizing 197    Time: 0:00:01 ( 7.94 ms/it)\n   objective: 13708.446397384749\n\n\nMinimizing 210    Time: 0:00:01 ( 7.94 ms/it)\n   objective: 13707.507553852083\n\n\nMinimizing 224    Time: 0:00:01 ( 7.91 ms/it)\n   objective: 13706.046227684805\n\n\nMinimizing 238    Time: 0:00:01 ( 7.89 ms/it)\n   objective: 13702.999057923687\n\n\nMinimizing 252    Time: 0:00:01 ( 7.86 ms/it)\n   objective: 13702.381043947407\n\n\nMinimizing 266    Time: 0:00:02 ( 7.83 ms/it)\n   objective: 13701.195337894056\n\n\nMinimizing 280    Time: 0:00:02 ( 7.82 ms/it)\n   objective: 13696.755044431204\n\n\nMinimizing 293    Time: 0:00:02 ( 7.82 ms/it)\n   objective: 13696.060052486613\n\n\nMinimizing 307    Time: 0:00:02 ( 7.81 ms/it)\n   objective: 13695.183544553318\n\n\nMinimizing 321    Time: 0:00:02 ( 7.80 ms/it)\n   objective: 13693.564295438993\n\n\nMinimizing 335    Time: 0:00:02 ( 7.78 ms/it)\n   objective: 13691.66527917749\n\n\nMinimizing 349    Time: 0:00:02 ( 7.76 ms/it)\n   objective: 13691.308418292349\n\n\nMinimizing 363    Time: 0:00:02 ( 7.75 ms/it)\n   objective: 13688.072329917066\n\n\nMinimizing 377    Time: 0:00:02 ( 7.75 ms/it)\n   objective: 13687.161393758832\n\n\nMinimizing 391    Time: 0:00:03 ( 7.75 ms/it)\n   objective: 13686.434826790206\n\n\nMinimizing 404    Time: 0:00:03 ( 7.75 ms/it)\n   objective: 13684.840599777714\n\n\nMinimizing 418    Time: 0:00:03 ( 7.74 ms/it)\n   objective: 13683.764256942877\n\n\nMinimizing 432    Time: 0:00:03 ( 7.74 ms/it)\n   objective: 13682.947260232178\n\n\nMinimizing 446    Time: 0:00:03 ( 7.73 ms/it)\n   objective: 13681.573004448055\n\n\nMinimizing 460    Time: 0:00:03 ( 7.71 ms/it)\n   objective: 13681.238661628082\n\n\nMinimizing 474    Time: 0:00:03 ( 7.70 ms/it)\n   objective: 13677.76008414256\n\n\nMinimizing 488    Time: 0:00:03 ( 7.69 ms/it)\n   objective: 13675.908071377224\n\n\nMinimizing 502    Time: 0:00:03 ( 7.68 ms/it)\n   objective: 13675.547876789564\n\n\nMinimizing 516    Time: 0:00:03 ( 7.68 ms/it)\n   objective: 13675.192139939303\n\n\nMinimizing 530    Time: 0:00:04 ( 7.67 ms/it)\n   objective: 13674.866611514313\n\n\nMinimizing 544    Time: 0:00:04 ( 7.67 ms/it)\n   objective: 13673.422506540639\n\n\nMinimizing 557    Time: 0:00:04 ( 7.68 ms/it)\n   objective: 13672.032913935274\n\n\nMinimizing 570    Time: 0:00:04 ( 7.68 ms/it)\n   objective: 13671.25057846593\n\n\nMinimizing 584    Time: 0:00:04 ( 7.67 ms/it)\n   objective: 13666.608226588864\n\n\nMinimizing 598    Time: 0:00:04 ( 7.66 ms/it)\n   objective: 13666.425492080263\n\n\nMinimizing 614    Time: 0:00:04 ( 7.68 ms/it)\n   objective: 13664.911413202268\n\n\nMinimizing 629    Time: 0:00:04 ( 7.68 ms/it)\n   objective: 13663.187753200338\n\n\nMinimizing 643    Time: 0:00:04 ( 7.68 ms/it)\n   objective: 13661.947989856944\n\n\nMinimizing 656    Time: 0:00:05 ( 7.68 ms/it)\n   objective: 13660.218320913646\n\n\nMinimizing 669    Time: 0:00:05 ( 7.68 ms/it)\n   objective: 13659.133436524598\n\n\nMinimizing 683    Time: 0:00:05 ( 7.68 ms/it)\n   objective: 13654.80609284873\n\n\nMinimizing 696    Time: 0:00:05 ( 7.69 ms/it)\n   objective: 13651.077980653528\n\n\nMinimizing 709    Time: 0:00:05 ( 7.69 ms/it)\n   objective: 13650.314810316453\n\n\nMinimizing 722    Time: 0:00:05 ( 7.69 ms/it)\n   objective: 13646.603518188076\n\n\nMinimizing 735    Time: 0:00:05 ( 7.70 ms/it)\n   objective: 13640.429568782642\n\n\nMinimizing 748    Time: 0:00:05 ( 7.70 ms/it)\n   objective: 13638.771816603938\n\n\nMinimizing 761    Time: 0:00:05 ( 7.70 ms/it)\n   objective: 13637.513972007575\n\n\nMinimizing 774    Time: 0:00:05 ( 7.70 ms/it)\n   objective: 13635.745660151504\n\n\nMinimizing 788    Time: 0:00:06 ( 7.70 ms/it)\n   objective: 13635.099908952303\n\n\nMinimizing 801    Time: 0:00:06 ( 7.70 ms/it)\n   objective: 13633.536128298765\n\n\nMinimizing 815    Time: 0:00:06 ( 7.70 ms/it)\n   objective: 13633.266706463408\n\n\nMinimizing 829    Time: 0:00:06 ( 7.69 ms/it)\n   objective: 13631.598083849472\n\n\nMinimizing 843    Time: 0:00:06 ( 7.68 ms/it)\n   objective: 13631.063066185787\n\n\nMinimizing 857    Time: 0:00:06 ( 7.68 ms/it)\n   objective: 13629.325917865528\n\n\nMinimizing 871    Time: 0:00:06 ( 7.67 ms/it)\n   objective: 13629.143722921628\n\n\nMinimizing 885    Time: 0:00:06 ( 7.66 ms/it)\n   objective: 13627.478595357497\n\n\nMinimizing 899    Time: 0:00:06 ( 7.66 ms/it)\n   objective: 13626.484537535987\n\n\nMinimizing 913    Time: 0:00:06 ( 7.66 ms/it)\n   objective: 13622.157553377154\n\n\nMinimizing 927    Time: 0:00:07 ( 7.66 ms/it)\n   objective: 13617.356172278538\n\n\nMinimizing 940    Time: 0:00:07 ( 7.66 ms/it)\n   objective: 13617.215313977056\n\n\nMinimizing 953    Time: 0:00:07 ( 7.66 ms/it)\n   objective: 13616.613165284612\n\n\nMinimizing 967    Time: 0:00:07 ( 7.66 ms/it)\n   objective: 13614.797158459918\n\n\nMinimizing 981    Time: 0:00:07 ( 7.66 ms/it)\n   objective: 13613.761392731372\n\n\nMinimizing 995    Time: 0:00:07 ( 7.65 ms/it)\n   objective: 13612.425805978088\n\n\nMinimizing 1009    Time: 0:00:07 ( 7.65 ms/it)\n   objective: 13611.320335124852\n\n\nMinimizing 1023    Time: 0:00:07 ( 7.65 ms/it)\n   objective: 13611.149046613686\n\n\nMinimizing 1037    Time: 0:00:07 ( 7.64 ms/it)\n   objective: 13609.924517341144\n\n\nMinimizing 1051    Time: 0:00:08 ( 7.64 ms/it)\n   objective: 13609.099766572934\n\n\nMinimizing 1065    Time: 0:00:08 ( 7.65 ms/it)\n   objective: 13607.399110246577\n\n\nMinimizing 1080    Time: 0:00:08 ( 7.64 ms/it)\n   objective: 13607.223504622056\n\n\nMinimizing 1094    Time: 0:00:08 ( 7.64 ms/it)\n   objective: 13606.251196811143\n\n\nMinimizing 1108    Time: 0:00:08 ( 7.64 ms/it)\n   objective: 13605.768422881203\n\n\nMinimizing 1122    Time: 0:00:08 ( 7.64 ms/it)\n   objective: 13604.645296146864\n\n\nMinimizing 1136    Time: 0:00:08 ( 7.63 ms/it)\n   objective: 13604.55141339884\n\n\nMinimizing 1150    Time: 0:00:08 ( 7.63 ms/it)\n   objective: 13604.306119027526\n\n\nMinimizing 1164    Time: 0:00:08 ( 7.63 ms/it)\n   objective: 13603.691681098393\n\n\nMinimizing 1178    Time: 0:00:08 ( 7.63 ms/it)\n   objective: 13603.010608399669\n\n\nMinimizing 1192    Time: 0:00:09 ( 7.63 ms/it)\n   objective: 13602.585691824348\n\n\nMinimizing 1206    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13600.804056873596\n\n\nMinimizing 1220    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13600.370062750753\n\n\nMinimizing 1234    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13599.962733066779\n\n\nMinimizing 1248    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13599.673232529294\n\n\nMinimizing 1262    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13599.147812308554\n\n\nMinimizing 1276    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13598.302150173502\n\n\nMinimizing 1290    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13597.90341089278\n\n\nMinimizing 1304    Time: 0:00:09 ( 7.62 ms/it)\n   objective: 13597.523943956505\n\n\nMinimizing 1318    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13597.254666127606\n\n\nMinimizing 1332    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13595.483450364602\n\n\nMinimizing 1346    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13593.738976284014\n\n\nMinimizing 1360    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13593.689991016541\n\n\nMinimizing 1374    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13593.386459645844\n\n\nMinimizing 1387    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13592.94878913007\n\n\nMinimizing 1400    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13592.422591041217\n\n\nMinimizing 1413    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13591.758708394624\n\n\nMinimizing 1427    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13591.650196473336\n\n\nMinimizing 1441    Time: 0:00:10 ( 7.61 ms/it)\n   objective: 13590.895622273485\n\n\nMinimizing 1455    Time: 0:00:11 ( 7.61 ms/it)\n   objective: 13590.186536524976\n\n\nMinimizing 1469    Time: 0:00:11 ( 7.61 ms/it)\n   objective: 13588.877531628208\n\n\nMinimizing 1483    Time: 0:00:11 ( 7.61 ms/it)\n   objective: 13588.563427175679\n\n\nMinimizing 1497    Time: 0:00:11 ( 7.61 ms/it)\n   objective: 13588.273351976044\n\n\nMinimizing 1511    Time: 0:00:11 ( 7.62 ms/it)\n   objective: 13587.095748643991\n\n\nMinimizing 1524    Time: 0:00:11 ( 7.62 ms/it)\n   objective: 13586.311248339582\n\n\nMinimizing 1538    Time: 0:00:11 ( 7.62 ms/it)\n   objective: 13585.759147030032\n\n\nMinimizing 1552    Time: 0:00:11 ( 7.62 ms/it)\n   objective: 13579.387438232454\n\n\nMinimizing 1566    Time: 0:00:11 ( 7.61 ms/it)\n   objective: 13577.444652684328\n\n\nMinimizing 1580    Time: 0:00:12 ( 7.61 ms/it)\n   objective: 13571.787729804018\n\n\nMinimizing 1594    Time: 0:00:12 ( 7.61 ms/it)\n   objective: 13568.141915338816\n\n\nMinimizing 1608    Time: 0:00:12 ( 7.61 ms/it)\n   objective: 13559.53220343934\n\n\nMinimizing 1621    Time: 0:00:12 ( 7.62 ms/it)\n   objective: 13551.443386819417\n\n\nMinimizing 1635    Time: 0:00:12 ( 7.62 ms/it)\n   objective: 13551.03213262625\n\n\nMinimizing 1649    Time: 0:00:12 ( 7.62 ms/it)\n   objective: 13550.030084244136\n\n\nMinimizing 1663    Time: 0:00:12 ( 7.61 ms/it)\n   objective: 13549.442334991982\n\n\nMinimizing 1677    Time: 0:00:12 ( 7.61 ms/it)\n   objective: 13547.436647186885\n\n\nMinimizing 1691    Time: 0:00:12 ( 7.61 ms/it)\n   objective: 13546.910016449234\n\n\nMinimizing 1705    Time: 0:00:12 ( 7.61 ms/it)\n   objective: 13544.962971748319\n\n\nMinimizing 1719    Time: 0:00:13 ( 7.61 ms/it)\n   objective: 13543.35860626051\n\n\nMinimizing 1733    Time: 0:00:13 ( 7.61 ms/it)\n   objective: 13543.083718092748\n\n\nMinimizing 1747    Time: 0:00:13 ( 7.60 ms/it)\n   objective: 13542.190320990463\n\n\nMinimizing 1761    Time: 0:00:13 ( 7.60 ms/it)\n   objective: 13537.677955752086\n\n\nMinimizing 1775    Time: 0:00:13 ( 7.60 ms/it)\n   objective: 13537.589735984264\n\n\nMinimizing 1789    Time: 0:00:13 ( 7.60 ms/it)\n   objective: 13537.058741541041\n\n\nMinimizing 1803    Time: 0:00:13 ( 7.60 ms/it)\n   objective: 13535.091995483577\n\n\nMinimizing 1817    Time: 0:00:13 ( 7.60 ms/it)\n   objective: 13533.531002644486\n\n\nMinimizing 1831    Time: 0:00:13 ( 7.60 ms/it)\n   objective: 13532.194916490902\n\n\nMinimizing 1845    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13531.96406122022\n\n\nMinimizing 1859    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13530.598801385771\n\n\nMinimizing 1873    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13530.17541494294\n\n\nMinimizing 1887    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13529.447204453143\n\n\nMinimizing 1901    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13529.250279976157\n\n\nMinimizing 1915    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13527.85204395742\n\n\nMinimizing 1929    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13527.474883313836\n\n\nMinimizing 1943    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13525.3273694546\n\n\nMinimizing 1956    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13524.699469885461\n\n\nMinimizing 1970    Time: 0:00:14 ( 7.59 ms/it)\n   objective: 13524.623578379855\n\n\nMinimizing 1984    Time: 0:00:15 ( 7.59 ms/it)\n   objective: 13523.935544329099\n\n\nMinimizing 1996    Time: 0:00:15 ( 7.60 ms/it)\n   objective: 13523.774018998876\n\n\nMinimizing 2009    Time: 0:00:15 ( 7.60 ms/it)\n   objective: 13522.313927860778\n\n\nMinimizing 2023    Time: 0:00:15 ( 7.60 ms/it)\n   objective: 13522.067008324695\n\n\nMinimizing 2037    Time: 0:00:15 ( 7.60 ms/it)\n   objective: 13521.419882118294\n\n\nMinimizing 2051    Time: 0:00:15 ( 7.60 ms/it)\n   objective: 13520.777188663626\n\n\nMinimizing 2065    Time: 0:00:15 ( 7.60 ms/it)\n   objective: 13519.846835145334\n\n\nMinimizing 2079    Time: 0:00:15 ( 7.60 ms/it)\n   objective: 13517.147284186605\n\n\nMinimizing 2091    Time: 0:00:15 ( 7.61 ms/it)\n   objective: 13515.174464625241\n\n\nMinimizing 2103    Time: 0:00:16 ( 7.61 ms/it)\n   objective: 13515.012490630717\n\n\nMinimizing 2115    Time: 0:00:16 ( 7.62 ms/it)\n   objective: 13513.899102362047\n\n\nMinimizing 2126    Time: 0:00:16 ( 7.64 ms/it)\n   objective: 13512.952306202955\n\n\nMinimizing 2137    Time: 0:00:16 ( 7.64 ms/it)\n   objective: 13511.88082221288\n\n\nMinimizing 2150    Time: 0:00:16 ( 7.65 ms/it)\n   objective: 13511.161217940818\n\n\nMinimizing 2162    Time: 0:00:16 ( 7.65 ms/it)\n   objective: 13509.195224622665\n\n\nMinimizing 2174    Time: 0:00:16 ( 7.66 ms/it)\n   objective: 13507.002433780683\n\n\nMinimizing 2188    Time: 0:00:16 ( 7.66 ms/it)\n   objective: 13492.164649089587\n\n\nMinimizing 2202    Time: 0:00:16 ( 7.65 ms/it)\n   objective: 13477.919604526083\n\n\nMinimizing 2215    Time: 0:00:16 ( 7.66 ms/it)\n   objective: 13475.698827524611\n\n\nMinimizing 2229    Time: 0:00:17 ( 7.66 ms/it)\n   objective: 13475.29502636609\n\n\nMinimizing 2243    Time: 0:00:17 ( 7.66 ms/it)\n   objective: 13474.928273253172\n\n\nMinimizing 2257    Time: 0:00:17 ( 7.66 ms/it)\n   objective: 13473.97370947498\n\n\nMinimizing 2271    Time: 0:00:17 ( 7.65 ms/it)\n   objective: 13472.371194533684\n\n\nMinimizing 2285    Time: 0:00:17 ( 7.65 ms/it)\n   objective: 13470.165166478415\n\n\nMinimizing 2299    Time: 0:00:17 ( 7.65 ms/it)\n   objective: 13469.998962296086\n\n\nMinimizing 2312    Time: 0:00:17 ( 7.66 ms/it)\n   objective: 13469.29783444111\n\n\nMinimizing 2326    Time: 0:00:17 ( 7.65 ms/it)\n   objective: 13468.753555122516\n\n\nMinimizing 2340    Time: 0:00:17 ( 7.65 ms/it)\n   objective: 13467.36883683243\n\n\nMinimizing 2354    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13467.231375438234\n\n\nMinimizing 2368    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13466.558600500372\n\n\nMinimizing 2382    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13464.768910159713\n\n\nMinimizing 2396    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13464.078566600874\n\n\nMinimizing 2410    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13463.775864060357\n\n\nMinimizing 2424    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13462.60964811498\n\n\nMinimizing 2438    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13462.108680660858\n\n\nMinimizing 2452    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13461.803117913114\n\n\nMinimizing 2466    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13461.47187204181\n\n\nMinimizing 2480    Time: 0:00:18 ( 7.65 ms/it)\n   objective: 13461.155178790686\n\n\nMinimizing 2494    Time: 0:00:19 ( 7.65 ms/it)\n   objective: 13460.758592882463\n\n\nMinimizing 2508    Time: 0:00:19 ( 7.65 ms/it)\n   objective: 13459.476871266335\n\n\nMinimizing 2521    Time: 0:00:19 ( 7.65 ms/it)\n   objective: 13459.441548255068\n\n\nMinimizing 2534    Time: 0:00:19 ( 7.65 ms/it)\n   objective: 13458.87506234002\n\n\nMinimizing 2547    Time: 0:00:19 ( 7.65 ms/it)\n   objective: 13458.648291427751\n\n\nMinimizing 2560    Time: 0:00:19 ( 7.66 ms/it)\n   objective: 13457.294053940721\n\n\nMinimizing 2571    Time: 0:00:19 ( 7.67 ms/it)\n   objective: 13457.056961112707\n\n\nMinimizing 2585    Time: 0:00:19 ( 7.67 ms/it)\n   objective: 13456.966025796508\n\n\nMinimizing 2598    Time: 0:00:19 ( 7.67 ms/it)\n   objective: 13456.654678394778\n\n\nMinimizing 2610    Time: 0:00:20 ( 7.67 ms/it)\n   objective: 13456.530487281372\n\n\nMinimizing 2621    Time: 0:00:20 ( 7.68 ms/it)\n   objective: 13456.153683148106\n\n\nMinimizing 2631    Time: 0:00:20 ( 7.69 ms/it)\n   objective: 13455.838164073313\n\n\nMinimizing 2644    Time: 0:00:20 ( 7.70 ms/it)\n   objective: 13454.84543170342\n\n\nMinimizing 2657    Time: 0:00:20 ( 7.70 ms/it)\n   objective: 13453.259232202574\n\n\nMinimizing 2670    Time: 0:00:20 ( 7.70 ms/it)\n   objective: 13453.131391536619\n\n\nMinimizing 2682    Time: 0:00:20 ( 7.71 ms/it)\n   objective: 13451.956355075607\n\n\nMinimizing 2694    Time: 0:00:20 ( 7.71 ms/it)\n   objective: 13450.848547819915\n\n\nMinimizing 2707    Time: 0:00:20 ( 7.71 ms/it)\n   objective: 13447.350930012472\n\n\nMinimizing 2718    Time: 0:00:20 ( 7.72 ms/it)\n   objective: 13446.995315900982\n\n\nMinimizing 2729    Time: 0:00:21 ( 7.73 ms/it)\n   objective: 13446.94089675566\n\n\nMinimizing 2740    Time: 0:00:21 ( 7.74 ms/it)\n   objective: 13446.054524531726\n\n\nMinimizing 2752    Time: 0:00:21 ( 7.74 ms/it)\n   objective: 13445.739035306986\n\n\nMinimizing 2765    Time: 0:00:21 ( 7.74 ms/it)\n   objective: 13445.063980597675\n\n\nMinimizing 2779    Time: 0:00:21 ( 7.74 ms/it)\n   objective: 13444.297822510664\n\n\nMinimizing 2792    Time: 0:00:21 ( 7.75 ms/it)\n   objective: 13441.82737398555\n\n\nMinimizing 2805    Time: 0:00:21 ( 7.75 ms/it)\n   objective: 13433.680759556235\n\n\nMinimizing 2818    Time: 0:00:21 ( 7.75 ms/it)\n   objective: 13433.098394649453\n\n\nMinimizing 2830    Time: 0:00:21 ( 7.76 ms/it)\n   objective: 13431.722855574742\n\n\nMinimizing 2842    Time: 0:00:22 ( 7.76 ms/it)\n   objective: 13429.730909873659\n\n\nMinimizing 2855    Time: 0:00:22 ( 7.76 ms/it)\n   objective: 13426.209554431975\n\n\nMinimizing 2866    Time: 0:00:22 ( 7.77 ms/it)\n   objective: 13425.33462167556\n\n\nMinimizing 2877    Time: 0:00:22 ( 7.78 ms/it)\n   objective: 13423.91567370393\n\n\nMinimizing 2889    Time: 0:00:22 ( 7.78 ms/it)\n   objective: 13422.19838998148\n\n\nMinimizing 2901    Time: 0:00:22 ( 7.79 ms/it)\n   objective: 13419.444059811547\n\n\nMinimizing 2913    Time: 0:00:22 ( 7.79 ms/it)\n   objective: 13416.556848611443\n\n\nMinimizing 2925    Time: 0:00:22 ( 7.79 ms/it)\n   objective: 13415.875557129737\n\n\nMinimizing 2938    Time: 0:00:22 ( 7.79 ms/it)\n   objective: 13413.912506755369\n\n\nMinimizing 2951    Time: 0:00:23 ( 7.80 ms/it)\n   objective: 13413.38920608467\n\n\nMinimizing 2963    Time: 0:00:23 ( 7.81 ms/it)\n   objective: 13410.212915250479\n\n\nMinimizing 2975    Time: 0:00:23 ( 7.81 ms/it)\n   objective: 13407.214035060992\n\n\nMinimizing 2987    Time: 0:00:23 ( 7.82 ms/it)\n   objective: 13407.099652453595\n\n\nMinimizing 3000    Time: 0:00:23 ( 7.82 ms/it)\n   objective: 13406.394166605583\n\n\nMinimizing 3013    Time: 0:00:23 ( 7.82 ms/it)\n   objective: 13405.687928062325\n\n\nMinimizing 3026    Time: 0:00:23 ( 7.82 ms/it)\n   objective: 13405.526794189456\n\n\nMinimizing 3040    Time: 0:00:23 ( 7.82 ms/it)\n   objective: 13403.806171765842\n\n\nMinimizing 3053    Time: 0:00:23 ( 7.82 ms/it)\n   objective: 13402.674930091183\n\n\nMinimizing 3064    Time: 0:00:23 ( 7.83 ms/it)\n   objective: 13402.557903310211\n\n\nMinimizing 3077    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13401.008221714037\n\n\nMinimizing 3090    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13400.31756288647\n\n\nMinimizing 3103    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13396.50467067222\n\n\nMinimizing 3116    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13395.776660098047\n\n\nMinimizing 3130    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13394.809513249194\n\n\nMinimizing 3142    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13394.259089111976\n\n\nMinimizing 3155    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13393.313575468543\n\n\nMinimizing 3169    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13392.91517548119\n\n\nMinimizing 3182    Time: 0:00:24 ( 7.83 ms/it)\n   objective: 13392.619877604215\n\n\nMinimizing 3195    Time: 0:00:25 ( 7.84 ms/it)\n   objective: 13391.275992492534\n\n\nMinimizing 3208    Time: 0:00:25 ( 7.84 ms/it)\n   objective: 13390.229103713107\n\n\nMinimizing 3222    Time: 0:00:25 ( 7.84 ms/it)\n   objective: 13386.671045209441\n\n\nMinimizing 3236    Time: 0:00:25 ( 7.83 ms/it)\n   objective: 13386.567226313913\n\n\nMinimizing 3250    Time: 0:00:25 ( 7.83 ms/it)\n   objective: 13385.874126612398\n\n\nMinimizing 3264    Time: 0:00:25 ( 7.83 ms/it)\n   objective: 13385.140546484778\n\n\nMinimizing 3278    Time: 0:00:25 ( 7.83 ms/it)\n   objective: 13384.375199919727\n\n\nMinimizing 3292    Time: 0:00:25 ( 7.83 ms/it)\n   objective: 13383.917528993305\n\n\nMinimizing 3305    Time: 0:00:25 ( 7.83 ms/it)\n   objective: 13383.306794327931\n\n\nMinimizing 3318    Time: 0:00:25 ( 7.83 ms/it)\n   objective: 13381.746425849284\n\n\nMinimizing 3332    Time: 0:00:26 ( 7.83 ms/it)\n   objective: 13380.997922409486\n\n\nMinimizing 3346    Time: 0:00:26 ( 7.83 ms/it)\n   objective: 13379.813591609709\n\n\nMinimizing 3359    Time: 0:00:26 ( 7.83 ms/it)\n   objective: 13379.721179453918\n\n\nMinimizing 3371    Time: 0:00:26 ( 7.83 ms/it)\n   objective: 13379.302541528901\n\n\nMinimizing 3384    Time: 0:00:26 ( 7.83 ms/it)\n   objective: 13378.778373122404\n\n\nMinimizing 3397    Time: 0:00:26 ( 7.83 ms/it)\n   objective: 13376.820495926018\n\n\nMinimizing 3410    Time: 0:00:26 ( 7.83 ms/it)\n   objective: 13376.692526276805\n\n\nMinimizing 3423    Time: 0:00:26 ( 7.84 ms/it)\n   objective: 13376.687197433756\n\n\nMinimizing 3436    Time: 0:00:26 ( 7.84 ms/it)\n   objective: 13376.445312351105\n\n\nMinimizing 3449    Time: 0:00:27 ( 7.84 ms/it)\n   objective: 13376.156419959632\n\n\nMinimizing 3462    Time: 0:00:27 ( 7.84 ms/it)\n   objective: 13375.997441311178\n\n\nMinimizing 3475    Time: 0:00:27 ( 7.84 ms/it)\n   objective: 13375.51295379961\n\n\nMinimizing 3488    Time: 0:00:27 ( 7.83 ms/it)\n   objective: 13374.963865531929\n\n\nMinimizing 3502    Time: 0:00:27 ( 7.83 ms/it)\n   objective: 13374.456815301877\n\n\nMinimizing 3516    Time: 0:00:27 ( 7.83 ms/it)\n   objective: 13373.540153193608\n\n\nMinimizing 3530    Time: 0:00:27 ( 7.83 ms/it)\n   objective: 13372.442663084104\n\n\nMinimizing 3544    Time: 0:00:27 ( 7.83 ms/it)\n   objective: 13371.45055598556\n\n\nMinimizing 3557    Time: 0:00:27 ( 7.83 ms/it)\n   objective: 13371.411590571981\n\n\nMinimizing 3570    Time: 0:00:27 ( 7.83 ms/it)\n   objective: 13370.797586854838\n\n\nMinimizing 3583    Time: 0:00:28 ( 7.83 ms/it)\n   objective: 13370.150487189661\n\n\nMinimizing 3596    Time: 0:00:28 ( 7.84 ms/it)\n   objective: 13369.28388441277\n\n\nMinimizing 3608    Time: 0:00:28 ( 7.84 ms/it)\n   objective: 13369.188845507335\n\n\nMinimizing 3620    Time: 0:00:28 ( 7.84 ms/it)\n   objective: 13368.989247528094\n\n\nMinimizing 3633    Time: 0:00:28 ( 7.84 ms/it)\n   objective: 13368.483179638497\n\n\nMinimizing 3646    Time: 0:00:28 ( 7.84 ms/it)\n   objective: 13368.116616559797\n\n\nMinimizing 3660    Time: 0:00:28 ( 7.84 ms/it)\n   objective: 13367.969001561025\n\n\nMinimizing 3672    Time: 0:00:28 ( 7.84 ms/it)\n   objective: 13367.617055793002\n\n\nMinimizing 3685    Time: 0:00:28 ( 7.85 ms/it)\n   objective: 13367.477464963391\n\n\nMinimizing 3699    Time: 0:00:29 ( 7.84 ms/it)\n   objective: 13365.421335559557\n\n\nMinimizing 3713    Time: 0:00:29 ( 7.84 ms/it)\n   objective: 13365.181845956628\n\n\nMinimizing 3727    Time: 0:00:29 ( 7.84 ms/it)\n   objective: 13365.046504538928\n\n\nMinimizing 3739    Time: 0:00:29 ( 7.85 ms/it)\n   objective: 13364.655943099948\n\n\nMinimizing 3752    Time: 0:00:29 ( 7.85 ms/it)\n   objective: 13364.352112473352\n\n\nMinimizing 3768    Time: 0:00:29 ( 7.84 ms/it)\n   objective: 13363.635758683507\n\n\nMinimizing 3783    Time: 0:00:29 ( 7.84 ms/it)\n   objective: 13361.731736999442\n\n\nMinimizing 3799    Time: 0:00:29 ( 7.83 ms/it)\n   objective: 13361.149536788813\n\n\nMinimizing 3815    Time: 0:00:29 ( 7.82 ms/it)\n   objective: 13360.942522457306\n\n\nMinimizing 3831    Time: 0:00:29 ( 7.82 ms/it)\n   objective: 13360.267505745389\n\n\nMinimizing 3847    Time: 0:00:30 ( 7.81 ms/it)\n   objective: 13359.497214447256\n\n\nMinimizing 3862    Time: 0:00:30 ( 7.81 ms/it)\n   objective: 13359.264486045446\n\n\nMinimizing 3875    Time: 0:00:30 ( 7.81 ms/it)\n   objective: 13358.824611308708\n\n\nMinimizing 3889    Time: 0:00:30 ( 7.81 ms/it)\n   objective: 13357.982676040527\n\n\nMinimizing 3903    Time: 0:00:30 ( 7.81 ms/it)\n   objective: 13356.825369744125\n\n\nMinimizing 3918    Time: 0:00:30 ( 7.81 ms/it)\n   objective: 13356.250887264207\n\n\nMinimizing 3934    Time: 0:00:30 ( 7.80 ms/it)\n   objective: 13355.927407277355\n\n\nMinimizing 3949    Time: 0:00:30 ( 7.80 ms/it)\n   objective: 13355.376594591493\n\n\nMinimizing 3965    Time: 0:00:30 ( 7.79 ms/it)\n   objective: 13354.877522895826\n\n\nMinimizing 3981    Time: 0:00:31 ( 7.79 ms/it)\n   objective: 13353.044912070429\n\n\nMinimizing 3997    Time: 0:00:31 ( 7.78 ms/it)\n   objective: 13352.83577669102\n\n\nMinimizing 4013    Time: 0:00:31 ( 7.78 ms/it)\n   objective: 13352.523681230712\n\n\nMinimizing 4029    Time: 0:00:31 ( 7.78 ms/it)\n   objective: 13352.06418807483\n\n\nMinimizing 4043    Time: 0:00:31 ( 7.77 ms/it)\n   objective: 13350.13367402686\n\n\nMinimizing 4059    Time: 0:00:31 ( 7.77 ms/it)\n   objective: 13350.004005958297\n\n\nMinimizing 4075    Time: 0:00:31 ( 7.76 ms/it)\n   objective: 13349.423875435634\n\n\nMinimizing 4091    Time: 0:00:31 ( 7.76 ms/it)\n   objective: 13349.298197781944\n\n\nMinimizing 4107    Time: 0:00:31 ( 7.75 ms/it)\n   objective: 13348.076382355823\n\n\nMinimizing 4123    Time: 0:00:31 ( 7.75 ms/it)\n   objective: 13347.677642412105\n\n\nMinimizing 4139    Time: 0:00:32 ( 7.74 ms/it)\n   objective: 13345.961338340028\n\n\nMinimizing 4154    Time: 0:00:32 ( 7.74 ms/it)\n   objective: 13345.088833109694\n\n\nMinimizing 4169    Time: 0:00:32 ( 7.74 ms/it)\n   objective: 13343.096194140773\n\n\nMinimizing 4184    Time: 0:00:32 ( 7.73 ms/it)\n   objective: 13339.960724697245\n\n\nMinimizing 4199    Time: 0:00:32 ( 7.73 ms/it)\n   objective: 13337.409798761146\n\n\nMinimizing 4214    Time: 0:00:32 ( 7.73 ms/it)\n   objective: 13331.775128089517\n\n\nMinimizing 4229    Time: 0:00:32 ( 7.73 ms/it)\n   objective: 13331.045103161261\n\n\nMinimizing 4245    Time: 0:00:32 ( 7.72 ms/it)\n   objective: 13325.01217811201\n\n\nMinimizing 4261    Time: 0:00:32 ( 7.72 ms/it)\n   objective: 13319.779875492124\n\n\nMinimizing 4276    Time: 0:00:32 ( 7.71 ms/it)\n   objective: 13318.82609310883\n\n\nMinimizing 4291    Time: 0:00:33 ( 7.71 ms/it)\n   objective: 13314.876354313863\n\n\nMinimizing 4307    Time: 0:00:33 ( 7.71 ms/it)\n   objective: 13313.073598912553\n\n\nMinimizing 4321    Time: 0:00:33 ( 7.71 ms/it)\n   objective: 13311.032363961756\n\n\nMinimizing 4335    Time: 0:00:33 ( 7.70 ms/it)\n   objective: 13307.898069415372\n\n\nMinimizing 4351    Time: 0:00:33 ( 7.70 ms/it)\n   objective: 13306.898203144272\n\n\nMinimizing 4366    Time: 0:00:33 ( 7.70 ms/it)\n   objective: 13305.064713514119\n\n\nMinimizing 4381    Time: 0:00:33 ( 7.69 ms/it)\n   objective: 13302.780956145973\n\n\nMinimizing 4396    Time: 0:00:33 ( 7.69 ms/it)\n   objective: 13299.555275330495\n\n\nMinimizing 4412    Time: 0:00:33 ( 7.69 ms/it)\n   objective: 13299.217021640245\n\n\nMinimizing 4428    Time: 0:00:34 ( 7.68 ms/it)\n   objective: 13296.689967146682\n\n\nMinimizing 4444    Time: 0:00:34 ( 7.68 ms/it)\n   objective: 13294.318264631132\n\n\nMinimizing 4459    Time: 0:00:34 ( 7.68 ms/it)\n   objective: 13291.708631590169\n\n\nMinimizing 4474    Time: 0:00:34 ( 7.67 ms/it)\n   objective: 13290.387067817734\n\n\nMinimizing 4489    Time: 0:00:34 ( 7.67 ms/it)\n   objective: 13289.654855383866\n\n\nMinimizing 4504    Time: 0:00:34 ( 7.67 ms/it)\n   objective: 13288.911507395707\n\n\nMinimizing 4519    Time: 0:00:34 ( 7.67 ms/it)\n   objective: 13288.286093693561\n\n\nMinimizing 4534    Time: 0:00:34 ( 7.66 ms/it)\n   objective: 13288.154732578769\n\n\nMinimizing 4550    Time: 0:00:34 ( 7.66 ms/it)\n   objective: 13287.517022829226\n\n\nMinimizing 4564    Time: 0:00:34 ( 7.66 ms/it)\n   objective: 13285.160832302252\n\n\nMinimizing 4579    Time: 0:00:35 ( 7.66 ms/it)\n   objective: 13279.301024934466\n\n\nMinimizing 4595    Time: 0:00:35 ( 7.65 ms/it)\n   objective: 13277.738685560005\n\n\nMinimizing 4611    Time: 0:00:35 ( 7.65 ms/it)\n   objective: 13277.305351787334\n\n\nMinimizing 4626    Time: 0:00:35 ( 7.65 ms/it)\n   objective: 13270.74528515579\n\n\nMinimizing 4641    Time: 0:00:35 ( 7.64 ms/it)\n   objective: 13268.922236147191\n\n\nMinimizing 4656    Time: 0:00:35 ( 7.64 ms/it)\n   objective: 13266.245479316844\n\n\nMinimizing 4671    Time: 0:00:35 ( 7.64 ms/it)\n   objective: 13264.391104730676\n\n\nMinimizing 4687    Time: 0:00:35 ( 7.64 ms/it)\n   objective: 13263.366356706218\n\n\nMinimizing 4703    Time: 0:00:35 ( 7.63 ms/it)\n   objective: 13261.07834557243\n\n\nMinimizing 4718    Time: 0:00:35 ( 7.63 ms/it)\n   objective: 13259.311676119178\n\n\nMinimizing 4733    Time: 0:00:36 ( 7.63 ms/it)\n   objective: 13255.13420437416\n\n\nMinimizing 4748    Time: 0:00:36 ( 7.62 ms/it)\n   objective: 13254.241867221339\n\n\nMinimizing 4764    Time: 0:00:36 ( 7.62 ms/it)\n   objective: 13253.583628917535\n\n\nMinimizing 4779    Time: 0:00:36 ( 7.62 ms/it)\n   objective: 13253.091138712858\n\n\nMinimizing 4794    Time: 0:00:36 ( 7.62 ms/it)\n   objective: 13253.076649285227\n\n\nMinimizing 4809    Time: 0:00:36 ( 7.61 ms/it)\n   objective: 13253.077569905421\n\n\nMinimizing 4824    Time: 0:00:36 ( 7.61 ms/it)\n   objective: 13253.07872029944\n\n\nMinimizing 4840    Time: 0:00:36 ( 7.61 ms/it)\n   objective: 13253.073746537397\n\n\nMinimizing 4856    Time: 0:00:36 ( 7.60 ms/it)\n   objective: 13253.078735082236\n\n\nMinimizing 4871    Time: 0:00:37 ( 7.60 ms/it)\n   objective: 13253.074718194388\n\n\nMinimizing 4885    Time: 0:00:37 ( 7.60 ms/it)\n   objective: 13253.072086717526\n\n\nMinimizing 4899    Time: 0:00:37 ( 7.60 ms/it)\n   objective: 13253.076267152079\n\n\nMinimizing 4913    Time: 0:00:37 ( 7.60 ms/it)\n   objective: 13253.077200145883\n\n\nMinimizing 4928    Time: 0:00:37 ( 7.60 ms/it)\n   objective: 13253.074918880811\n\n\nMinimizing 4943    Time: 0:00:37 ( 7.60 ms/it)\n   objective: 13253.076995089563\n\n\nMinimizing 4958    Time: 0:00:37 ( 7.60 ms/it)\n   objective: 13253.075041650707\n\n\nMinimizing 4973    Time: 0:00:37 ( 7.59 ms/it)\n   objective: 13253.07704327254\n\n\nMinimizing 4977    Time: 0:00:37 ( 7.59 ms/it)\n\nMinimizing 16    Time: 0:00:00 ( 6.63 ms/it)\n   objective: 13892.84397035237\n\n\nMinimizing 31    Time: 0:00:00 ( 6.86 ms/it)\n   objective: 13812.815009830436\n\n\nMinimizing 46    Time: 0:00:00 ( 6.88 ms/it)\n   objective: 13792.429727268653\n\n\nMinimizing 61    Time: 0:00:00 ( 6.85 ms/it)\n   objective: 13787.907210294408\n\n\nMinimizing 76    Time: 0:00:00 ( 6.86 ms/it)\n   objective: 13783.795773569094\n\n\nMinimizing 91    Time: 0:00:00 ( 6.85 ms/it)\n   objective: 13775.24676784841\n\n\nMinimizing 106    Time: 0:00:00 ( 6.85 ms/it)\n   objective: 13770.741233768718\n\n\nMinimizing 121    Time: 0:00:00 ( 6.85 ms/it)\n   objective: 13758.625957156417\n\n\nMinimizing 135    Time: 0:00:00 ( 6.90 ms/it)\n   objective: 13709.774344054797\n\n\nMinimizing 150    Time: 0:00:01 ( 6.91 ms/it)\n   objective: 13707.927198745056\n\n\nMinimizing 165    Time: 0:00:01 ( 6.92 ms/it)\n   objective: 13699.479889724153\n\n\nMinimizing 180    Time: 0:00:01 ( 6.92 ms/it)\n   objective: 13698.298526682538\n\n\nMinimizing 195    Time: 0:00:01 ( 6.93 ms/it)\n   objective: 13697.788059504932\n\n\nMinimizing 210    Time: 0:00:01 ( 6.93 ms/it)\n   objective: 13696.110392943721\n\n\nMinimizing 225    Time: 0:00:01 ( 6.93 ms/it)\n   objective: 13694.737296636153\n\n\nMinimizing 241    Time: 0:00:01 ( 6.91 ms/it)\n   objective: 13692.997174628248\n\n\nMinimizing 257    Time: 0:00:01 ( 6.89 ms/it)\n   objective: 13690.185911396225\n\n\nMinimizing 273    Time: 0:00:01 ( 6.87 ms/it)\n   objective: 13684.537880032647\n\n\nMinimizing 289    Time: 0:00:01 ( 6.86 ms/it)\n   objective: 13670.38596825125\n\n\nMinimizing 304    Time: 0:00:02 ( 6.85 ms/it)\n   objective: 13653.559487742714\n\n\nMinimizing 319    Time: 0:00:02 ( 6.85 ms/it)\n   objective: 13644.204726837164\n\n\nMinimizing 335    Time: 0:00:02 ( 6.84 ms/it)\n   objective: 13640.975005095475\n\n\nMinimizing 350    Time: 0:00:02 ( 6.83 ms/it)\n   objective: 13639.13074931462\n\n\nMinimizing 365    Time: 0:00:02 ( 6.84 ms/it)\n   objective: 13635.317548384177\n\n\nMinimizing 380    Time: 0:00:02 ( 6.85 ms/it)\n   objective: 13634.328887602012\n\n\nMinimizing 396    Time: 0:00:02 ( 6.84 ms/it)\n   objective: 13626.555793221436\n\n\nMinimizing 411    Time: 0:00:02 ( 6.83 ms/it)\n   objective: 13625.615147378183\n\n\nMinimizing 426    Time: 0:00:02 ( 6.83 ms/it)\n   objective: 13621.104277470698\n\n\nMinimizing 441    Time: 0:00:03 ( 6.83 ms/it)\n   objective: 13614.920484954811\n\n\nMinimizing 457    Time: 0:00:03 ( 6.82 ms/it)\n   objective: 13610.146216252979\n\n\nMinimizing 473    Time: 0:00:03 ( 6.82 ms/it)\n   objective: 13602.516366992724\n\n\nMinimizing 488    Time: 0:00:03 ( 6.82 ms/it)\n   objective: 13585.697478747941\n\n\nMinimizing 503    Time: 0:00:03 ( 6.82 ms/it)\n   objective: 13581.363371681102\n\n\nMinimizing 518    Time: 0:00:03 ( 6.82 ms/it)\n   objective: 13578.097801690295\n\n\nMinimizing 533    Time: 0:00:03 ( 6.82 ms/it)\n   objective: 13567.19410178731\n\n\nMinimizing 548    Time: 0:00:03 ( 6.83 ms/it)\n   objective: 13547.20461548915\n\n\nMinimizing 562    Time: 0:00:03 ( 6.85 ms/it)\n   objective: 13546.210980294134\n\n\nMinimizing 577    Time: 0:00:03 ( 6.85 ms/it)\n   objective: 13542.137901118447\n\n\nMinimizing 592    Time: 0:00:04 ( 6.85 ms/it)\n   objective: 13538.463366975033\n\n\nMinimizing 607    Time: 0:00:04 ( 6.86 ms/it)\n   objective: 13533.64829078145\n\n\nMinimizing 622    Time: 0:00:04 ( 6.86 ms/it)\n   objective: 13527.275086287329\n\n\nMinimizing 638    Time: 0:00:04 ( 6.85 ms/it)\n   objective: 13510.215178336417\n\n\nMinimizing 654    Time: 0:00:04 ( 6.85 ms/it)\n   objective: 13509.178879126586\n\n\nMinimizing 668    Time: 0:00:04 ( 6.86 ms/it)\n   objective: 13505.054784014661\n\n\nMinimizing 681    Time: 0:00:04 ( 6.88 ms/it)\n   objective: 13502.676957957156\n\n\nMinimizing 696    Time: 0:00:04 ( 6.89 ms/it)\n   objective: 13496.353699181374\n\n\nMinimizing 711    Time: 0:00:04 ( 6.89 ms/it)\n   objective: 13496.015616367891\n\n\nMinimizing 724    Time: 0:00:05 ( 6.91 ms/it)\n   objective: 13494.029348890726\n\n\nMinimizing 740    Time: 0:00:05 ( 6.91 ms/it)\n   objective: 13493.283465256689\n\n\nMinimizing 754    Time: 0:00:05 ( 6.92 ms/it)\n   objective: 13490.482517644792\n\n\nMinimizing 769    Time: 0:00:05 ( 6.92 ms/it)\n   objective: 13490.327612551686\n\n\nMinimizing 784    Time: 0:00:05 ( 6.92 ms/it)\n   objective: 13489.405238958563\n\n\nMinimizing 799    Time: 0:00:05 ( 6.91 ms/it)\n   objective: 13487.494854742516\n\n\nMinimizing 815    Time: 0:00:05 ( 6.91 ms/it)\n   objective: 13484.076294028666\n\n\nMinimizing 831    Time: 0:00:05 ( 6.90 ms/it)\n   objective: 13480.412019418523\n\n\nMinimizing 847    Time: 0:00:05 ( 6.90 ms/it)\n   objective: 13479.856238026376\n\n\nMinimizing 863    Time: 0:00:05 ( 6.89 ms/it)\n   objective: 13478.927408687676\n\n\nMinimizing 879    Time: 0:00:06 ( 6.89 ms/it)\n   objective: 13477.393399965425\n\n\nMinimizing 895    Time: 0:00:06 ( 6.88 ms/it)\n   objective: 13474.157138549694\n\n\nMinimizing 910    Time: 0:00:06 ( 6.89 ms/it)\n   objective: 13471.833156259861\n\n\nMinimizing 925    Time: 0:00:06 ( 6.88 ms/it)\n   objective: 13471.024591374116\n\n\nMinimizing 941    Time: 0:00:06 ( 6.88 ms/it)\n   objective: 13469.705065542745\n\n\nMinimizing 956    Time: 0:00:06 ( 6.88 ms/it)\n   objective: 13467.674950253066\n\n\nMinimizing 971    Time: 0:00:06 ( 6.89 ms/it)\n   objective: 13464.824817802917\n\n\nMinimizing 986    Time: 0:00:06 ( 6.88 ms/it)\n   objective: 13463.679746785325\n\n\nMinimizing 1001    Time: 0:00:06 ( 6.88 ms/it)\n   objective: 13462.67341483743\n\n\nMinimizing 1016    Time: 0:00:06 ( 6.88 ms/it)\n   objective: 13461.155236506667\n\n\nMinimizing 1030    Time: 0:00:07 ( 6.89 ms/it)\n   objective: 13458.254362992659\n\n\nMinimizing 1045    Time: 0:00:07 ( 6.89 ms/it)\n   objective: 13458.084803908947\n\n\nMinimizing 1060    Time: 0:00:07 ( 6.89 ms/it)\n   objective: 13456.934757724994\n\n\nMinimizing 1075    Time: 0:00:07 ( 6.90 ms/it)\n   objective: 13455.471034984657\n\n\nMinimizing 1089    Time: 0:00:07 ( 6.90 ms/it)\n   objective: 13452.779538806892\n\n\nMinimizing 1103    Time: 0:00:07 ( 6.92 ms/it)\n   objective: 13451.742612906994\n\n\nMinimizing 1117    Time: 0:00:07 ( 6.92 ms/it)\n   objective: 13448.72864731375\n\n\nMinimizing 1132    Time: 0:00:07 ( 6.92 ms/it)\n   objective: 13447.079440542475\n\n\nMinimizing 1147    Time: 0:00:07 ( 6.92 ms/it)\n   objective: 13443.374302008138\n\n\nMinimizing 1163    Time: 0:00:08 ( 6.91 ms/it)\n   objective: 13439.479922523627\n\n\nMinimizing 1178    Time: 0:00:08 ( 6.91 ms/it)\n   objective: 13435.333784165938\n\n\nMinimizing 1194    Time: 0:00:08 ( 6.91 ms/it)\n   objective: 13429.85887288404\n\n\nMinimizing 1210    Time: 0:00:08 ( 6.90 ms/it)\n   objective: 13426.995436696016\n\n\nMinimizing 1225    Time: 0:00:08 ( 6.90 ms/it)\n   objective: 13421.182730112334\n\n\nMinimizing 1240    Time: 0:00:08 ( 6.92 ms/it)\n   objective: 13415.944077462584\n\n\nMinimizing 1254    Time: 0:00:08 ( 6.93 ms/it)\n   objective: 13405.671500711062\n\n\nMinimizing 1268    Time: 0:00:08 ( 6.93 ms/it)\n   objective: 13405.235151940666\n\n\nMinimizing 1282    Time: 0:00:08 ( 6.95 ms/it)\n   objective: 13402.763175661297\n\n\nMinimizing 1296    Time: 0:00:09 ( 6.95 ms/it)\n   objective: 13401.62005810281\n\n\nMinimizing 1310    Time: 0:00:09 ( 6.96 ms/it)\n   objective: 13395.485813287742\n\n\nMinimizing 1324    Time: 0:00:09 ( 6.96 ms/it)\n   objective: 13388.684442224985\n\n\nMinimizing 1340    Time: 0:00:09 ( 6.96 ms/it)\n   objective: 13362.470181090132\n\n\nMinimizing 1356    Time: 0:00:09 ( 6.96 ms/it)\n   objective: 13359.904121314219\n\n\nMinimizing 1371    Time: 0:00:09 ( 6.95 ms/it)\n   objective: 13356.124250279143\n\n\nMinimizing 1386    Time: 0:00:09 ( 6.95 ms/it)\n   objective: 13352.146815931948\n\n\nMinimizing 1401    Time: 0:00:09 ( 6.95 ms/it)\n   objective: 13344.315399365398\n\n\nMinimizing 1416    Time: 0:00:09 ( 6.95 ms/it)\n   objective: 13339.473451319878\n\n\nMinimizing 1431    Time: 0:00:09 ( 6.95 ms/it)\n   objective: 13320.597904106777\n\n\nMinimizing 1446    Time: 0:00:10 ( 6.96 ms/it)\n   objective: 13319.652784901758\n\n\nMinimizing 1461    Time: 0:00:10 ( 6.95 ms/it)\n   objective: 13316.597466249412\n\n\nMinimizing 1476    Time: 0:00:10 ( 6.95 ms/it)\n   objective: 13314.956600459933\n\n\nMinimizing 1491    Time: 0:00:10 ( 6.95 ms/it)\n   objective: 13311.65850596757\n\n\nMinimizing 1506    Time: 0:00:10 ( 6.96 ms/it)\n   objective: 13308.500451264292\n\n\nMinimizing 1520    Time: 0:00:10 ( 6.96 ms/it)\n   objective: 13305.640149445913\n\n\nMinimizing 1535    Time: 0:00:10 ( 6.96 ms/it)\n   objective: 13302.167763850244\n\n\nMinimizing 1550    Time: 0:00:10 ( 6.96 ms/it)\n   objective: 13295.195450261002\n\n\nMinimizing 1566    Time: 0:00:10 ( 6.96 ms/it)\n   objective: 13288.643946158743\n\n\nMinimizing 1582    Time: 0:00:11 ( 6.96 ms/it)\n   objective: 13283.071094600527\n\n\nMinimizing 1597    Time: 0:00:11 ( 6.95 ms/it)\n   objective: 13281.619082007208\n\n\nMinimizing 1612    Time: 0:00:11 ( 6.96 ms/it)\n   objective: 13279.993249684368\n\n\nMinimizing 1627    Time: 0:00:11 ( 6.96 ms/it)\n   objective: 13278.116729580099\n\n\nMinimizing 1643    Time: 0:00:11 ( 6.95 ms/it)\n   objective: 13271.357393828235\n\n\nMinimizing 1658    Time: 0:00:11 ( 6.95 ms/it)\n   objective: 13267.492393219567\n\n\nMinimizing 1673    Time: 0:00:11 ( 6.95 ms/it)\n   objective: 13261.949495548237\n\n\nMinimizing 1688    Time: 0:00:11 ( 6.95 ms/it)\n   objective: 13255.425759038888\n\n\nMinimizing 1703    Time: 0:00:11 ( 6.95 ms/it)\n   objective: 13250.357423933441\n\n\nMinimizing 1718    Time: 0:00:11 ( 6.95 ms/it)\n   objective: 13250.18805856099\n\n\nMinimizing 1734    Time: 0:00:12 ( 6.95 ms/it)\n   objective: 13250.186308327597\n\n\nMinimizing 1749    Time: 0:00:12 ( 6.95 ms/it)\n   objective: 13250.186180837598\n\n\nMinimizing 1764    Time: 0:00:12 ( 6.95 ms/it)\n   objective: 13250.1808654481\n\n\nMinimizing 1780    Time: 0:00:12 ( 6.95 ms/it)\n   objective: 13250.179976419618\n\n\nMinimizing 1796    Time: 0:00:12 ( 6.94 ms/it)\n   objective: 13250.181158894484\n\n\nMinimizing 1811    Time: 0:00:12 ( 6.94 ms/it)\n   objective: 13250.18128148347\n\n\nMinimizing 1826    Time: 0:00:12 ( 6.94 ms/it)\n   objective: 13250.17987566955\n\n\nMinimizing 1841    Time: 0:00:12 ( 6.94 ms/it)\n   objective: 13250.184535983397\n\n\nMinimizing 1857    Time: 0:00:12 ( 6.94 ms/it)\n   objective: 13250.182153250775\n\n\nMinimizing 1872    Time: 0:00:12 ( 6.94 ms/it)\n   objective: 13250.182018330539\n\n\nMinimizing 1887    Time: 0:00:13 ( 6.94 ms/it)\n   objective: 13250.178148696912\n\n\nMinimizing 1903    Time: 0:00:13 ( 6.94 ms/it)\n   objective: 13250.181257953402\n\n\nMinimizing 1919    Time: 0:00:13 ( 6.94 ms/it)\n   objective: 13250.180238062792\n\n\nMinimizing 1934    Time: 0:00:13 ( 6.94 ms/it)\n   objective: 13250.18377619992\n\n\nMinimizing 1949    Time: 0:00:13 ( 6.94 ms/it)\n   objective: 13250.18251377801\n\n\nMinimizing 1962    Time: 0:00:13 ( 6.95 ms/it)\n   objective: 13250.183245840555\n\n\nMinimizing 1977    Time: 0:00:13 ( 6.95 ms/it)\n   objective: 13250.182461481498\n\n\nMinimizing 1979    Time: 0:00:13 ( 6.95 ms/it)\n\nMinimizing 15    Time: 0:00:00 ( 6.87 ms/it)\n   objective: 13809.85842131855\n\n\nMinimizing 29    Time: 0:00:00 ( 7.16 ms/it)\n   objective: 13806.075377973248\n\n\nMinimizing 44    Time: 0:00:00 ( 7.13 ms/it)\n   objective: 13790.107902985234\n\n\nMinimizing 60    Time: 0:00:00 ( 7.00 ms/it)\n   objective: 13781.505899068996\n\n\nMinimizing 74    Time: 0:00:00 ( 7.11 ms/it)\n   objective: 13772.158064434614\n\n\nMinimizing 88    Time: 0:00:00 ( 7.21 ms/it)\n   objective: 13770.42430691674\n\n\nMinimizing 100    Time: 0:00:00 ( 7.74 ms/it)\n   objective: 13765.03635049744\n\n\nMinimizing 111    Time: 0:00:00 ( 7.91 ms/it)\n   objective: 13761.391344320495\n\n\nMinimizing 125    Time: 0:00:00 ( 7.85 ms/it)\n   objective: 13751.04762789543\n\n\nMinimizing 144    Time: 0:00:01 ( 8.65 ms/it)\n   objective: 13745.470663390197\n\n\nMinimizing 161    Time: 0:00:01 ( 8.72 ms/it)\n   objective: 13742.02256856449\n\n\nMinimizing 174    Time: 0:00:01 ( 8.68 ms/it)\n   objective: 13738.413913942535\n\n\nMinimizing 185    Time: 0:00:01 ( 8.81 ms/it)\n   objective: 13737.031631308055\n\n\nMinimizing 194    Time: 0:00:01 ( 9.06 ms/it)\n   objective: 13735.077905260725\n\n\nMinimizing 202    Time: 0:00:01 ( 9.20 ms/it)\n   objective: 13734.632700497512\n\n\nMinimizing 212    Time: 0:00:01 ( 9.25 ms/it)\n   objective: 13733.35839984632\n\n\nMinimizing 223    Time: 0:00:02 ( 9.27 ms/it)\n   objective: 13728.541082866617\n\n\nMinimizing 233    Time: 0:00:02 ( 9.33 ms/it)\n   objective: 13727.995776603493\n\n\nMinimizing 243    Time: 0:00:02 ( 9.38 ms/it)\n   objective: 13726.478648118828\n\n\nMinimizing 255    Time: 0:00:02 ( 9.34 ms/it)\n   objective: 13722.87581436471\n\n\nMinimizing 267    Time: 0:00:02 ( 9.30 ms/it)\n   objective: 13719.931152299854\n\n\nMinimizing 282    Time: 0:00:02 ( 9.17 ms/it)\n   objective: 13716.204461865455\n\n\nMinimizing 297    Time: 0:00:02 ( 9.06 ms/it)\n   objective: 13714.791384230468\n\n\nMinimizing 311    Time: 0:00:02 ( 9.05 ms/it)\n   objective: 13711.821786949677\n\n\nMinimizing 325    Time: 0:00:02 ( 8.98 ms/it)\n   objective: 13709.154454619453\n\n\nMinimizing 338    Time: 0:00:03 ( 9.01 ms/it)\n   objective: 13704.441690843834\n\n\nMinimizing 348    Time: 0:00:03 ( 9.14 ms/it)\n   objective: 13695.192991604777\n\n\nMinimizing 357    Time: 0:00:03 ( 9.19 ms/it)\n   objective: 13691.482026357728\n\n\nMinimizing 370    Time: 0:00:03 ( 9.15 ms/it)\n   objective: 13687.301613222067\n\n\nMinimizing 385    Time: 0:00:03 ( 9.07 ms/it)\n   objective: 13669.46517435208\n\n\nMinimizing 400    Time: 0:00:03 ( 8.98 ms/it)\n   objective: 13667.002301353084\n\n\nMinimizing 416    Time: 0:00:03 ( 8.89 ms/it)\n   objective: 13658.900950449162\n\n\nMinimizing 431    Time: 0:00:03 ( 8.82 ms/it)\n   objective: 13645.98959240425\n\n\nMinimizing 446    Time: 0:00:03 ( 8.75 ms/it)\n   objective: 13638.2057293387\n\n\nMinimizing 461    Time: 0:00:04 ( 8.71 ms/it)\n   objective: 13635.20117014492\n\n\nMinimizing 475    Time: 0:00:04 ( 8.66 ms/it)\n   objective: 13628.289178825918\n\n\nMinimizing 490    Time: 0:00:04 ( 8.61 ms/it)\n   objective: 13619.961297643997\n\n\nMinimizing 505    Time: 0:00:04 ( 8.56 ms/it)\n   objective: 13606.520148733664\n\n\nMinimizing 520    Time: 0:00:04 ( 8.51 ms/it)\n   objective: 13604.736667017736\n\n\nMinimizing 535    Time: 0:00:04 ( 8.45 ms/it)\n   objective: 13553.95320024273\n\n\nMinimizing 550    Time: 0:00:04 ( 8.43 ms/it)\n   objective: 13537.012086180286\n\n\nMinimizing 565    Time: 0:00:04 ( 8.39 ms/it)\n   objective: 13524.886495735227\n\n\nMinimizing 580    Time: 0:00:04 ( 8.35 ms/it)\n   objective: 13518.966440654178\n\n\nMinimizing 595    Time: 0:00:04 ( 8.31 ms/it)\n   objective: 13512.711729597024\n\n\nMinimizing 610    Time: 0:00:05 ( 8.29 ms/it)\n   objective: 13501.04923640818\n\n\nMinimizing 625    Time: 0:00:05 ( 8.26 ms/it)\n   objective: 13435.510372318364\n\n\nMinimizing 640    Time: 0:00:05 ( 8.23 ms/it)\n   objective: 13429.693796252694\n\n\nMinimizing 655    Time: 0:00:05 ( 8.20 ms/it)\n   objective: 13422.003035252026\n\n\nMinimizing 670    Time: 0:00:05 ( 8.17 ms/it)\n   objective: 13413.206028189321\n\n\nMinimizing 685    Time: 0:00:05 ( 8.15 ms/it)\n   objective: 13408.63371037237\n\n\nMinimizing 700    Time: 0:00:05 ( 8.12 ms/it)\n   objective: 13402.79745423171\n\n\nMinimizing 714    Time: 0:00:05 ( 8.10 ms/it)\n   objective: 13387.168994616251\n\n\nMinimizing 729    Time: 0:00:05 ( 8.08 ms/it)\n   objective: 13379.95033529101\n\n\nMinimizing 742    Time: 0:00:05 ( 8.08 ms/it)\n   objective: 13436.250479906172\n\n\nMinimizing 755    Time: 0:00:06 ( 8.08 ms/it)\n   objective: 13353.344106244142\n\n\nMinimizing 768    Time: 0:00:06 ( 8.07 ms/it)\n   objective: 13347.172757013468\n\n\nMinimizing 783    Time: 0:00:06 ( 8.05 ms/it)\n   objective: 13340.684277988112\n\n\nMinimizing 798    Time: 0:00:06 ( 8.03 ms/it)\n   objective: 13329.835264462294\n\n\nMinimizing 812    Time: 0:00:06 ( 8.02 ms/it)\n   objective: 13325.576340054133\n\n\nMinimizing 827    Time: 0:00:06 ( 8.00 ms/it)\n   objective: 13313.11451292332\n\n\nMinimizing 841    Time: 0:00:06 ( 7.99 ms/it)\n   objective: 13311.371623407831\n\n\nMinimizing 856    Time: 0:00:06 ( 7.97 ms/it)\n   objective: 13307.956029776979\n\n\nMinimizing 871    Time: 0:00:06 ( 7.96 ms/it)\n   objective: 13306.75157880978\n\n\nMinimizing 885    Time: 0:00:07 ( 7.95 ms/it)\n   objective: 13292.836799505458\n\n\nMinimizing 899    Time: 0:00:07 ( 7.94 ms/it)\n   objective: 13289.551580709653\n\n\nMinimizing 914    Time: 0:00:07 ( 7.92 ms/it)\n   objective: 13288.553664598468\n\n\nMinimizing 927    Time: 0:00:07 ( 7.92 ms/it)\n   objective: 13287.32224886032\n\n\nMinimizing 941    Time: 0:00:07 ( 7.92 ms/it)\n   objective: 13285.611962816241\n\n\nMinimizing 1041    Time: 0:00:08 ( 7.97 ms/it)\n   objective: 13277.03687916843\n\n\nMinimizing 1060    Time: 0:00:08 ( 7.95 ms/it)\n   objective: 13277.036615888705\n\n\nMinimizing 1075    Time: 0:00:08 ( 7.93 ms/it)\n   objective: 13277.035905595403\n\n\nMinimizing 1090    Time: 0:00:08 ( 7.92 ms/it)\n   objective: 13277.03592457177\n\n\nMinimizing 1105    Time: 0:00:08 ( 7.90 ms/it)\n   objective: 13277.036934282252\n\n\nMinimizing 1120    Time: 0:00:08 ( 7.89 ms/it)\n   objective: 13277.035996711362\n\n\nMinimizing 1134    Time: 0:00:08 ( 7.89 ms/it)\n   objective: 13277.036108057524\n\n\nMinimizing 1147    Time: 0:00:09 ( 7.89 ms/it)\n   objective: 13277.035718914194\n\n\nMinimizing 1160    Time: 0:00:09 ( 7.90 ms/it)\n   objective: 13277.03554560589\n\n\nMinimizing 1175    Time: 0:00:09 ( 7.89 ms/it)\n   objective: 13277.036072382543\n\n\nMinimizing 1190    Time: 0:00:09 ( 7.87 ms/it)\n   objective: 13277.03553296291\n\n\nMinimizing 1206    Time: 0:00:09 ( 7.86 ms/it)\n   objective: 13277.037680599518\n\n\nMinimizing 1210    Time: 0:00:09 ( 7.85 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0183\n0.0140\n-1.31\n0.1907\n0.6251\n\n\nTest: c5.1\n-0.0321\n0.0423\n-0.76\n0.4482\n1.0962\n\n\nTest: c234.15\n0.0251\n0.1659\n0.15\n0.8796\n1.3987\n\n\nTest: c2.34\n-0.0213\n0.0765\n-0.28\n0.7802\n2.3684\n\n\nTest: c3.4\n0.0003\n0.0449\n0.01\n0.9955\n1.4807\n\n\na1\n0.3836\n0.0477\n8.04\n&lt;1e-15\n\n\n\nSex: Boys\n0.2268\n0.0140\n16.24\n&lt;1e-58\n\n\n\nTest: c5.1 & a1\n0.5205\n0.1424\n3.66\n0.0003\n\n\n\nTest: c234.15 & a1\n-0.7538\n0.5624\n-1.34\n0.1801\n\n\n\nTest: c2.34 & a1\n0.4673\n0.2633\n1.77\n0.0760\n\n\n\nTest: c3.4 & a1\n-0.0371\n0.1542\n-0.24\n0.8098\n\n\n\nTest: c5.1 & Sex: Boys\n0.0448\n0.0423\n1.06\n0.2900\n\n\n\nTest: c234.15 & Sex: Boys\n-0.5070\n0.1659\n-3.06\n0.0022\n\n\n\nTest: c2.34 & Sex: Boys\n0.0168\n0.0765\n0.22\n0.8265\n\n\n\nTest: c3.4 & Sex: Boys\n0.0204\n0.0449\n0.45\n0.6500\n\n\n\na1 & Sex: Boys\n-0.0471\n0.0477\n-0.99\n0.3234\n\n\n\nTest: c5.1 & a1 & Sex: Boys\n-0.0537\n0.1424\n-0.38\n0.7063\n\n\n\nTest: c234.15 & a1 & Sex: Boys\n-0.0049\n0.5624\n-0.01\n0.9930\n\n\n\nTest: c2.34 & a1 & Sex: Boys\n0.0638\n0.2633\n0.24\n0.8087\n\n\n\nTest: c3.4 & a1 & Sex: Boys\n-0.1170\n0.1542\n-0.76\n0.4483\n\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_Child_SDC)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\n(Intercept)\n0.43207656\n0.65732530\n\n\n\n\n\n\n\nTest: Star_r\n0.67492196\n0.82153634\n+0.49\n\n\n\n\n\n\nTest: S20_r\n0.81546534\n0.90303119\n-0.28\n+0.63\n\n\n\n\n\nTest: SLJ\n0.71778180\n0.84722004\n+0.33\n-0.46\n-0.50\n\n\n\n\nTest: BPT\n0.35707258\n0.59755551\n-0.53\n-0.79\n-0.18\n+0.60\n\n\nResidual\n\n0.00000000\n0.00001971\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_Child_HeC)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\n(Intercept)\n0.28981967\n0.53834902\n\n\n\n\n\n\n\nTest: Star_r\n0.20939344\n0.45759528\n-0.10\n\n\n\n\n\n\nTest: S20_r\n0.17328170\n0.41627119\n-0.11\n-0.21\n\n\n\n\n\nTest: SLJ\n0.09726037\n0.31186595\n+0.03\n+0.12\n-0.09\n\n\n\n\nTest: BPT\n0.02797085\n0.16724488\n+0.16\n-0.10\n+0.45\n+0.77\n\n\nResidual\n\n0.00000000\n0.00002196\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_Child_HyC)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\n(Intercept)\n0.54314102\n0.73698102\n\n\n\n\n\n\n\nTest: BPT-other\n0.79132449\n0.88956421\n+0.92\n\n\n\n\n\n\nTest: Star-End\n2.36069643\n1.53645580\n+0.11\n-0.28\n\n\n\n\n\nTest: S20-Star\n0.90946026\n0.95365626\n+0.19\n+0.48\n-0.71\n\n\n\n\nTest: SLJ-S20\n0.98205552\n0.99098715\n-0.02\n-0.11\n+0.14\n-0.61\n\n\nResidual\n\n0.00000000\n0.00001658\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_Child_PCA)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nChild\n(Intercept)\n0.39072353\n0.62507882\n\n\n\n\n\n\n\nTest: c5.1\n1.20174630\n1.09624190\n-0.06\n\n\n\n\n\n\nTest: c234.15\n1.95647429\n1.39874025\n-1.00\n-0.01\n\n\n\n\n\nTest: c2.34\n5.60929464\n2.36839495\n+0.03\n-0.47\n-0.01\n\n\n\n\nTest: c3.4\n2.19248047\n1.48070270\n-0.13\n-0.49\n+0.17\n-0.15\n\n\nResidual\n\n0.00000000\n0.00003093\n\n\n\n\n\n\n\n\n\nThe CPs for the various contrasts are in line with expectations. For the SDC we observe substantial negative CPs between neighboring contrasts. For the orthogonal HeC, all CPs are small; they are uncorrelated. HyC contains some of the SDC contrasts and we observe again the negative CPs. The (roughly) PCA-based contrasts are small with one exception; there is a sizeable CP of +.41 between GM and the core of adjusted physical fitness (c234.15).\nDo these differences in CPs imply that we can move to zcpLMMs when we have orthogonal contrasts? We pursue this question with by refitting the four LMMs with zerocorr() and compare the goodness of fit.\n\nbegin\n  f_Child0 = @formula zScore ~\n    1 + Test * a1 * Sex + zerocorr(1 + Test | Child)\n  m_Child_SDC0 = fit(MixedModel, f_Child0, dat; contrasts=contr1)\n  m_Child_HeC0 = fit(MixedModel, f_Child0, dat; contrasts=contr2)\n  m_Child_HyC0 = fit(MixedModel, f_Child0, dat; contrasts=contr3)\n  m_Child_PCA0 = fit(MixedModel, f_Child0, dat; contrasts=contr4)\nend\n\n\nMinimizing 20    Time: 0:00:00 ( 5.27 ms/it)\n   objective: 13795.683241453848\n\n\nMinimizing 37    Time: 0:00:00 ( 5.71 ms/it)\n   objective: 13792.298240153763\n\n\nMinimizing 53    Time: 0:00:00 ( 5.89 ms/it)\n   objective: 13792.07848969659\n\n\nMinimizing 69    Time: 0:00:00 ( 6.19 ms/it)\n   objective: 13791.900596605112\n\n\nMinimizing 84    Time: 0:00:00 ( 6.31 ms/it)\n   objective: 13791.591198416185\n\n\nMinimizing 101    Time: 0:00:00 ( 6.30 ms/it)\n   objective: 13791.440616228729\n\n\nMinimizing 117    Time: 0:00:00 ( 6.30 ms/it)\n   objective: 13791.400875452115\n\n\nMinimizing 134    Time: 0:00:00 ( 6.30 ms/it)\n   objective: 13791.40079676995\n\n\nMinimizing 150    Time: 0:00:00 ( 6.31 ms/it)\n   objective: 13791.3867402796\n\n\nMinimizing 166    Time: 0:00:01 ( 6.31 ms/it)\n   objective: 13791.308141043964\n\n\nMinimizing 183    Time: 0:00:01 ( 6.30 ms/it)\n   objective: 13785.474466534572\n\n\nMinimizing 200    Time: 0:00:01 ( 6.29 ms/it)\n   objective: 13740.776262564934\n\n\nMinimizing 217    Time: 0:00:01 ( 6.28 ms/it)\n   objective: 13697.539798914626\n\n\nMinimizing 233    Time: 0:00:01 ( 6.29 ms/it)\n   objective: 13669.935311707352\n\n\nMinimizing 250    Time: 0:00:01 ( 6.29 ms/it)\n   objective: 13588.193350248017\n\n\nMinimizing 267    Time: 0:00:01 ( 6.28 ms/it)\n   objective: 13556.73969370198\n\n\nMinimizing 282    Time: 0:00:01 ( 6.32 ms/it)\n   objective: 13495.315190308225\n\n\nMinimizing 297    Time: 0:00:01 ( 6.34 ms/it)\n   objective: 13491.118086472023\n\n\nMinimizing 317    Time: 0:00:01 ( 6.26 ms/it)\n   objective: 13479.63242091761\n\n\nMinimizing 337    Time: 0:00:02 ( 6.19 ms/it)\n   objective: 13475.03589910263\n\n\nMinimizing 358    Time: 0:00:02 ( 6.11 ms/it)\n   objective: 13462.540462283941\n\n\nMinimizing 379    Time: 0:00:02 ( 6.04 ms/it)\n   objective: 13446.901532207674\n\n\nMinimizing 400    Time: 0:00:02 ( 5.98 ms/it)\n   objective: 13382.294061951296\n\n\nMinimizing 420    Time: 0:00:02 ( 5.94 ms/it)\n   objective: 13366.130996995198\n\n\nMinimizing 441    Time: 0:00:02 ( 5.89 ms/it)\n   objective: 13327.123693805363\n\n\nMinimizing 462    Time: 0:00:02 ( 5.84 ms/it)\n   objective: 13304.637047094671\n\n\nMinimizing 483    Time: 0:00:02 ( 5.80 ms/it)\n   objective: 13298.452494754281\n\n\nMinimizing 504    Time: 0:00:02 ( 5.76 ms/it)\n   objective: 13274.518503952757\n\n\nMinimizing 525    Time: 0:00:03 ( 5.72 ms/it)\n   objective: 13264.729526080118\n\n\nMinimizing 546    Time: 0:00:03 ( 5.69 ms/it)\n   objective: 13251.775403309191\n\n\nMinimizing 567    Time: 0:00:03 ( 5.66 ms/it)\n   objective: 13245.632218486964\n\n\nMinimizing 588    Time: 0:00:03 ( 5.63 ms/it)\n   objective: 13245.662181342574\n\n\nMinimizing 609    Time: 0:00:03 ( 5.61 ms/it)\n   objective: 13245.585322789266\n\n\nMinimizing 630    Time: 0:00:03 ( 5.59 ms/it)\n   objective: 13245.575558759869\n\n\nMinimizing 651    Time: 0:00:03 ( 5.56 ms/it)\n   objective: 13245.552810851223\n\n\nMinimizing 653    Time: 0:00:03 ( 5.56 ms/it)\n\nMinimizing 20    Time: 0:00:00 ( 5.03 ms/it)\n   objective: 13767.358678633196\n\n\nMinimizing 41    Time: 0:00:00 ( 4.95 ms/it)\n   objective: 13751.195082113078\n\n\nMinimizing 62    Time: 0:00:00 ( 4.96 ms/it)\n   objective: 13714.928555887425\n\n\nMinimizing 83    Time: 0:00:00 ( 4.96 ms/it)\n   objective: 13657.327054460755\n\n\nMinimizing 104    Time: 0:00:00 ( 4.95 ms/it)\n   objective: 13647.252790581591\n\n\nMinimizing 125    Time: 0:00:00 ( 4.93 ms/it)\n   objective: 13646.185184974234\n\n\nMinimizing 146    Time: 0:00:00 ( 4.92 ms/it)\n   objective: 13644.561085725563\n\n\nMinimizing 167    Time: 0:00:00 ( 4.91 ms/it)\n   objective: 13641.69986017092\n\n\nMinimizing 188    Time: 0:00:00 ( 4.90 ms/it)\n   objective: 13633.090193690987\n\n\nMinimizing 209    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13621.053381151254\n\n\nMinimizing 230    Time: 0:00:01 ( 4.91 ms/it)\n   objective: 13571.901741173679\n\n\nMinimizing 251    Time: 0:00:01 ( 4.91 ms/it)\n   objective: 13568.930570112454\n\n\nMinimizing 271    Time: 0:00:01 ( 4.92 ms/it)\n   objective: 13559.977634982482\n\n\nMinimizing 292    Time: 0:00:01 ( 4.92 ms/it)\n   objective: 13553.853299614537\n\n\nMinimizing 313    Time: 0:00:01 ( 4.92 ms/it)\n   objective: 13550.223037800672\n\n\nMinimizing 334    Time: 0:00:01 ( 4.92 ms/it)\n   objective: 13542.533313421067\n\n\nMinimizing 355    Time: 0:00:01 ( 4.92 ms/it)\n   objective: 13537.945756627923\n\n\nMinimizing 376    Time: 0:00:01 ( 4.92 ms/it)\n   objective: 13525.750382429796\n\n\nMinimizing 397    Time: 0:00:01 ( 4.91 ms/it)\n   objective: 13523.265061934995\n\n\nMinimizing 418    Time: 0:00:02 ( 4.91 ms/it)\n   objective: 13521.458616024378\n\n\nMinimizing 439    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13516.87501233862\n\n\nMinimizing 460    Time: 0:00:02 ( 4.92 ms/it)\n   objective: 13513.86917070768\n\n\nMinimizing 479    Time: 0:00:02 ( 4.97 ms/it)\n   objective: 13486.140690377972\n\n\nMinimizing 497    Time: 0:00:02 ( 5.00 ms/it)\n   objective: 13481.800231377318\n\n\nMinimizing 518    Time: 0:00:02 ( 4.99 ms/it)\n   objective: 13466.673357621716\n\n\nMinimizing 539    Time: 0:00:02 ( 4.98 ms/it)\n   objective: 13401.256047921226\n\n\nMinimizing 560    Time: 0:00:02 ( 4.98 ms/it)\n   objective: 13385.344352050131\n\n\nMinimizing 581    Time: 0:00:02 ( 4.97 ms/it)\n   objective: 13358.115844978383\n\n\nMinimizing 602    Time: 0:00:02 ( 4.97 ms/it)\n   objective: 13350.789726203308\n\n\nMinimizing 623    Time: 0:00:03 ( 4.96 ms/it)\n   objective: 13344.384463793365\n\n\nMinimizing 644    Time: 0:00:03 ( 4.96 ms/it)\n   objective: 13339.573520937149\n\n\nMinimizing 665    Time: 0:00:03 ( 4.96 ms/it)\n   objective: 13334.053991585679\n\n\nMinimizing 686    Time: 0:00:03 ( 4.96 ms/it)\n   objective: 13329.40979146825\n\n\nMinimizing 707    Time: 0:00:03 ( 4.96 ms/it)\n   objective: 13327.065074501952\n\n\nMinimizing 728    Time: 0:00:03 ( 4.95 ms/it)\n   objective: 13321.740355861737\n\n\nMinimizing 749    Time: 0:00:03 ( 4.95 ms/it)\n   objective: 13305.544380747917\n\n\nMinimizing 770    Time: 0:00:03 ( 4.94 ms/it)\n   objective: 13299.191108408908\n\n\nMinimizing 791    Time: 0:00:03 ( 4.94 ms/it)\n   objective: 13295.185180363376\n\n\nMinimizing 812    Time: 0:00:04 ( 4.94 ms/it)\n   objective: 13290.207625410781\n\n\nMinimizing 833    Time: 0:00:04 ( 4.94 ms/it)\n   objective: 13283.22554381784\n\n\nMinimizing 854    Time: 0:00:04 ( 4.93 ms/it)\n   objective: 13272.71464940389\n\n\nMinimizing 875    Time: 0:00:04 ( 4.95 ms/it)\n   objective: 13220.424468279583\n\n\nMinimizing 894    Time: 0:00:04 ( 4.96 ms/it)\n   objective: 13196.568169265069\n\n\nMinimizing 913    Time: 0:00:04 ( 4.97 ms/it)\n   objective: 13192.16037968536\n\n\nMinimizing 932    Time: 0:00:04 ( 4.98 ms/it)\n   objective: 13166.929018867595\n\n\nMinimizing 951    Time: 0:00:04 ( 4.99 ms/it)\n   objective: 13158.290382765714\n\n\nMinimizing 970    Time: 0:00:04 ( 5.00 ms/it)\n   objective: 13157.38114517754\n\n\nMinimizing 989    Time: 0:00:04 ( 5.01 ms/it)\n   objective: 13157.254123278923\n\n\nMinimizing 1008    Time: 0:00:05 ( 5.01 ms/it)\n   objective: 13157.347947584596\n\n\nMinimizing 1029    Time: 0:00:05 ( 5.01 ms/it)\n   objective: 13157.432471668435\n\n\nMinimizing 1050    Time: 0:00:05 ( 5.01 ms/it)\n   objective: 13157.396240626535\n\n\nMinimizing 1055    Time: 0:00:05 ( 5.01 ms/it)\n\nMinimizing 21    Time: 0:00:00 ( 4.77 ms/it)\n   objective: 13799.535682795777\n\n\nMinimizing 41    Time: 0:00:00 ( 5.24 ms/it)\n   objective: 13794.507954883717\n\n\nMinimizing 59    Time: 0:00:00 ( 5.38 ms/it)\n   objective: 13793.477871302563\n\n\nMinimizing 79    Time: 0:00:00 ( 5.34 ms/it)\n   objective: 13791.860086465958\n\n\nMinimizing 99    Time: 0:00:00 ( 5.29 ms/it)\n   objective: 13769.552320607\n\n\nMinimizing 124    Time: 0:00:00 ( 5.37 ms/it)\n   objective: 13699.779172284769\n\n\nMinimizing 147    Time: 0:00:00 ( 5.32 ms/it)\n   objective: 13671.39848642227\n\n\nMinimizing 168    Time: 0:00:00 ( 5.26 ms/it)\n   objective: 13665.64301921672\n\n\nMinimizing 189    Time: 0:00:00 ( 5.22 ms/it)\n   objective: 13661.82952113949\n\n\nMinimizing 209    Time: 0:00:01 ( 5.21 ms/it)\n   objective: 13660.277351844834\n\n\nMinimizing 230    Time: 0:00:01 ( 5.18 ms/it)\n   objective: 13656.098421064602\n\n\nMinimizing 251    Time: 0:00:01 ( 5.15 ms/it)\n   objective: 13649.055194684988\n\n\nMinimizing 272    Time: 0:00:01 ( 5.13 ms/it)\n   objective: 13637.927354849257\n\n\nMinimizing 293    Time: 0:00:01 ( 5.11 ms/it)\n   objective: 13626.890381602272\n\n\nMinimizing 314    Time: 0:00:01 ( 5.09 ms/it)\n   objective: 13613.006613802369\n\n\nMinimizing 335    Time: 0:00:01 ( 5.08 ms/it)\n   objective: 13600.049885197179\n\n\nMinimizing 356    Time: 0:00:01 ( 5.06 ms/it)\n   objective: 13596.51821942108\n\n\nMinimizing 377    Time: 0:00:01 ( 5.05 ms/it)\n   objective: 13594.96191371866\n\n\nMinimizing 398    Time: 0:00:02 ( 5.05 ms/it)\n   objective: 13593.158740507439\n\n\nMinimizing 419    Time: 0:00:02 ( 5.04 ms/it)\n   objective: 13573.652352610377\n\n\nMinimizing 440    Time: 0:00:02 ( 5.03 ms/it)\n   objective: 13546.197338794314\n\n\nMinimizing 461    Time: 0:00:02 ( 5.02 ms/it)\n   objective: 13537.599724734268\n\n\nMinimizing 482    Time: 0:00:02 ( 5.02 ms/it)\n   objective: 13536.962256574792\n\n\nMinimizing 503    Time: 0:00:02 ( 5.02 ms/it)\n   objective: 13532.631009733144\n\n\nMinimizing 524    Time: 0:00:02 ( 5.01 ms/it)\n   objective: 13528.100476911532\n\n\nMinimizing 544    Time: 0:00:02 ( 5.02 ms/it)\n   objective: 13520.0195224372\n\n\nMinimizing 565    Time: 0:00:02 ( 5.02 ms/it)\n   objective: 13488.958596790486\n\n\nMinimizing 586    Time: 0:00:02 ( 5.01 ms/it)\n   objective: 13475.50228203486\n\n\nMinimizing 605    Time: 0:00:03 ( 5.03 ms/it)\n   objective: 13456.801051547998\n\n\nMinimizing 623    Time: 0:00:03 ( 5.06 ms/it)\n   objective: 13426.617963496392\n\n\nMinimizing 642    Time: 0:00:03 ( 5.07 ms/it)\n   objective: 13383.369271549367\n\n\nMinimizing 662    Time: 0:00:03 ( 5.07 ms/it)\n   objective: 13372.590515937758\n\n\nMinimizing 682    Time: 0:00:03 ( 5.07 ms/it)\n   objective: 13368.068796960812\n\n\nMinimizing 703    Time: 0:00:03 ( 5.07 ms/it)\n   objective: 13353.93048161712\n\n\nMinimizing 724    Time: 0:00:03 ( 5.07 ms/it)\n   objective: 13349.237401808074\n\n\nMinimizing 744    Time: 0:00:03 ( 5.07 ms/it)\n   objective: 13302.959239134187\n\n\nMinimizing 765    Time: 0:00:03 ( 5.06 ms/it)\n   objective: 13298.734298544892\n\n\nMinimizing 786    Time: 0:00:03 ( 5.06 ms/it)\n   objective: 13294.634563813335\n\n\nMinimizing 806    Time: 0:00:04 ( 5.07 ms/it)\n   objective: 13293.308334600806\n\n\nMinimizing 826    Time: 0:00:04 ( 5.07 ms/it)\n   objective: 13278.393949990685\n\n\nMinimizing 847    Time: 0:00:04 ( 5.07 ms/it)\n   objective: 13272.492286127905\n\n\nMinimizing 868    Time: 0:00:04 ( 5.07 ms/it)\n   objective: 13265.667066673268\n\n\nMinimizing 889    Time: 0:00:04 ( 5.06 ms/it)\n   objective: 13262.321376958687\n\n\nMinimizing 910    Time: 0:00:04 ( 5.06 ms/it)\n   objective: 13262.117304289859\n\n\nMinimizing 931    Time: 0:00:04 ( 5.06 ms/it)\n   objective: 13262.137811477558\n\n\nMinimizing 952    Time: 0:00:04 ( 5.05 ms/it)\n   objective: 13262.111280893005\n\n\nMinimizing 973    Time: 0:00:04 ( 5.05 ms/it)\n   objective: 13262.112526000827\n\n\nMinimizing 994    Time: 0:00:05 ( 5.04 ms/it)\n   objective: 13262.113444861534\n\n\nMinimizing 998    Time: 0:00:05 ( 5.05 ms/it)\n\nMinimizing 22    Time: 0:00:00 ( 4.66 ms/it)\n   objective: 13790.168548344147\n\n\nMinimizing 43    Time: 0:00:00 ( 4.78 ms/it)\n   objective: 13694.236028846208\n\n\nMinimizing 64    Time: 0:00:00 ( 4.82 ms/it)\n   objective: 13682.906535633305\n\n\nMinimizing 85    Time: 0:00:00 ( 4.86 ms/it)\n   objective: 13680.606508985087\n\n\nMinimizing 106    Time: 0:00:00 ( 4.86 ms/it)\n   objective: 13679.554192191612\n\n\nMinimizing 127    Time: 0:00:00 ( 4.88 ms/it)\n   objective: 13677.818879321896\n\n\nMinimizing 148    Time: 0:00:00 ( 4.88 ms/it)\n   objective: 13673.786768157794\n\n\nMinimizing 169    Time: 0:00:00 ( 4.88 ms/it)\n   objective: 13663.873234181918\n\n\nMinimizing 190    Time: 0:00:00 ( 4.88 ms/it)\n   objective: 13636.924808929118\n\n\nMinimizing 211    Time: 0:00:01 ( 4.89 ms/it)\n   objective: 13561.48747275008\n\n\nMinimizing 232    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13556.33799461744\n\n\nMinimizing 253    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13554.572016742743\n\n\nMinimizing 274    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13545.37329733809\n\n\nMinimizing 295    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13511.77416884042\n\n\nMinimizing 316    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13477.116374391204\n\n\nMinimizing 337    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13419.935638849609\n\n\nMinimizing 358    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13369.781824597667\n\n\nMinimizing 379    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13362.209547484716\n\n\nMinimizing 400    Time: 0:00:01 ( 4.90 ms/it)\n   objective: 13294.834706668611\n\n\nMinimizing 421    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13244.403275552875\n\n\nMinimizing 442    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13221.929279101692\n\n\nMinimizing 463    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13134.636261876454\n\n\nMinimizing 484    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13118.83989839186\n\n\nMinimizing 505    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13118.701070570314\n\n\nMinimizing 526    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13118.88210440072\n\n\nMinimizing 547    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13118.862820361552\n\n\nMinimizing 568    Time: 0:00:02 ( 4.90 ms/it)\n   objective: 13118.91442767829\n\n\nMinimizing 581    Time: 0:00:02 ( 4.90 ms/it)\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\n\n\n(Intercept)\n-0.0189\n0.0140\n-1.35\n0.1762\n0.6738\n\n\nTest: c5.1\n-0.0261\n0.0435\n-0.60\n0.5488\n1.3669\n\n\nTest: c234.15\n0.0476\n0.1679\n0.28\n0.7768\n0.4581\n\n\nTest: c2.34\n-0.0168\n0.0759\n-0.22\n0.8245\n2.0692\n\n\nTest: c3.4\n0.0002\n0.0440\n0.00\n0.9963\n1.1997\n\n\na1\n0.3842\n0.0477\n8.05\n&lt;1e-15\n\n\n\nSex: Boys\n0.2263\n0.0140\n16.20\n&lt;1e-58\n\n\n\nTest: c5.1 & a1\n0.5083\n0.1464\n3.47\n0.0005\n\n\n\nTest: c234.15 & a1\n-0.7813\n0.5696\n-1.37\n0.1702\n\n\n\nTest: c2.34 & a1\n0.4087\n0.2620\n1.56\n0.1187\n\n\n\nTest: c3.4 & a1\n-0.0498\n0.1513\n-0.33\n0.7419\n\n\n\nTest: c5.1 & Sex: Boys\n0.0366\n0.0435\n0.84\n0.3994\n\n\n\nTest: c234.15 & Sex: Boys\n-0.5096\n0.1679\n-3.03\n0.0024\n\n\n\nTest: c2.34 & Sex: Boys\n0.0106\n0.0759\n0.14\n0.8889\n\n\n\nTest: c3.4 & Sex: Boys\n0.0203\n0.0440\n0.46\n0.6444\n\n\n\na1 & Sex: Boys\n-0.0480\n0.0477\n-1.01\n0.3140\n\n\n\nTest: c5.1 & a1 & Sex: Boys\n-0.0561\n0.1464\n-0.38\n0.7017\n\n\n\nTest: c234.15 & a1 & Sex: Boys\n-0.1258\n0.5696\n-0.22\n0.8252\n\n\n\nTest: c2.34 & a1 & Sex: Boys\n0.0662\n0.2620\n0.25\n0.8007\n\n\n\nTest: c3.4 & a1 & Sex: Boys\n-0.1170\n0.1513\n-0.77\n0.4394\n\n\n\nResidual\n0.0000\n\n\n\n\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_Child_SDC0, m_Child_SDC)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + zerocorr(1 + Test | Child)\n26\n13245\n\n\n\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + (1 + Test | Child)\n36\n13254\n-9\n10\nNaN\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_Child_HeC0, m_Child_HeC)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + zerocorr(1 + Test | Child)\n26\n13157\n\n\n\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + (1 + Test | Child)\n36\n13253\n-96\n10\nNaN\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_Child_HyC0, m_Child_HyC)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + zerocorr(1 + Test | Child)\n26\n13262\n\n\n\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + (1 + Test | Child)\n36\n13250\n12\n10\n0.2907\n\n\n\n\n\n\nMixedModels.likelihoodratiotest(m_Child_PCA0, m_Child_PCA)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + zerocorr(1 + Test | Child)\n26\n13118\n\n\n\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + (1 + Test | Child)\n36\n13277\n-159\n10\nNaN\n\n\n\n\n\nObviously, we can not drop CPs from any of the LMMs. The full LMMs all have the same objective, but we can compare the goodness-of-fit statistics of zcpLMMs more directly.\n\nbegin\n  zcpLMM = [\"SDC0\", \"HeC0\", \"HyC0\", \"PCA0\"]\n  mods = [m_Child_SDC0, m_Child_HeC0, m_Child_HyC0, m_Child_PCA0]\n  gof_summary = sort!(\n    DataFrame(;\n      zcpLMM=zcpLMM,\n      dof=dof.(mods),\n      deviance=deviance.(mods),\n      AIC=aic.(mods),\n      BIC=bic.(mods),\n    ),\n    :deviance,\n  )\nend\n\n4√ó5 DataFrame\n\n\n\nRow\nzcpLMM\ndof\ndeviance\nAIC\nBIC\n\n\n\nString\nInt64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nPCA0\n26\n13118.0\n13170.0\n13339.4\n\n\n2\nHeC0\n26\n13157.3\n13209.3\n13378.7\n\n\n3\nSDC0\n26\n13245.5\n13297.5\n13466.9\n\n\n4\nHyC0\n26\n13262.1\n13314.1\n13483.5\n\n\n\n\n\n\nThe best fit was obtained for the PCA-based zcpLMM. Somewhat surprisingly the second best fit was obtained for the SDC. The relatively poor performance of HeC-based zcpLMM is puzzling to me. I thought it might be related to imbalance in design in the present data, but this does not appear to be the case. The same comparison of SequentialDifferenceCoding and Helmert Coding also showed a worse fit for the zcp-HeC LMM than the zcp-SDC LMM.",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "contrasts_fggk21.html#vcs-and-cps-depend-on-random-factor",
    "href": "contrasts_fggk21.html#vcs-and-cps-depend-on-random-factor",
    "title": "Mixed Models Tutorial: Contrast Coding",
    "section": "3.3 VCs and CPs depend on random factor",
    "text": "3.3 VCs and CPs depend on random factor\nVCs and CPs resulting from a set of test contrasts can also be estimated for the random factor School. Of course, these VCs and CPs may look different from the ones we just estimated for Child.\nThe effect of age (i.e., developmental gain) varies within School. Therefore, we also include its VCs and CPs in this model; the school-related VC for Sex was not significant.\n\nf_School = @formula zScore ~\n  1 + Test * a1 * Sex + (1 + Test + a1 | School);\nm_School_SeqDiff = fit(MixedModel, f_School, dat; contrasts=contr1);\nm_School_Helmert = fit(MixedModel, f_School, dat; contrasts=contr2);\nm_School_Hypo = fit(MixedModel, f_School, dat; contrasts=contr3);\nm_School_PCA = fit(MixedModel, f_School, dat; contrasts=contr4);\n\n\nMinimizing 140    Time: 0:00:00 ( 0.72 ms/it)\n   objective: 13752.724135610551\n\n\nMinimizing 288    Time: 0:00:00 ( 0.70 ms/it)\n   objective: 13748.711837787023\n\n\nMinimizing 436    Time: 0:00:00 ( 0.69 ms/it)\n   objective: 13748.695485407763\n\n\nMinimizing 490    Time: 0:00:00 ( 0.69 ms/it)\n\nMinimizing 142    Time: 0:00:00 ( 0.71 ms/it)\n   objective: 13784.79412206516\n\n\nMinimizing 287    Time: 0:00:00 ( 0.70 ms/it)\n   objective: 13754.336653644707\n\n\nMinimizing 431    Time: 0:00:00 ( 0.70 ms/it)\n   objective: 13749.795266748171\n\n\nMinimizing 576    Time: 0:00:00 ( 0.70 ms/it)\n   objective: 13748.710375618773\n\n\nMinimizing 723    Time: 0:00:00 ( 0.70 ms/it)\n   objective: 13748.697357282912\n\n\nMinimizing 868    Time: 0:00:00 ( 0.71 ms/it)\n   objective: 13748.695426541237\n\n\nMinimizing 939    Time: 0:00:00 ( 0.72 ms/it)\n\nMinimizing 119    Time: 0:00:00 ( 0.84 ms/it)\n   objective: 13752.782175767004\n\n\nMinimizing 247    Time: 0:00:00 ( 0.81 ms/it)\n   objective: 13748.878342051969\n\n\nMinimizing 375    Time: 0:00:00 ( 0.80 ms/it)\n   objective: 13748.698520273365\n\n\nMinimizing 502    Time: 0:00:00 ( 0.80 ms/it)\n   objective: 13748.695811695821\n\n\nMinimizing 626    Time: 0:00:00 ( 0.81 ms/it)\n   objective: 13748.695411027289\n\n\nMinimizing 650    Time: 0:00:00 ( 0.81 ms/it)\n\nMinimizing 122    Time: 0:00:00 ( 0.82 ms/it)\n   objective: 13768.627965162032\n\n\nMinimizing 245    Time: 0:00:00 ( 0.82 ms/it)\n   objective: 13750.55047772767\n\n\nMinimizing 368    Time: 0:00:00 ( 0.82 ms/it)\n   objective: 13749.771544700883\n\n\nMinimizing 491    Time: 0:00:00 ( 0.82 ms/it)\n   objective: 13749.275785042715\n\n\nMinimizing 614    Time: 0:00:00 ( 0.82 ms/it)\n   objective: 13748.82409274012\n\n\nMinimizing 737    Time: 0:00:00 ( 0.82 ms/it)\n   objective: 13748.704206439264\n\n\nMinimizing 860    Time: 0:00:00 ( 0.82 ms/it)\n   objective: 13748.695532427078\n\n\nMinimizing 901    Time: 0:00:00 ( 0.82 ms/it)\n\n\n\n\n\nVarCorr(m_School_SeqDiff)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\nSchool\n(Intercept)\n0.035967\n0.189651\n\n\n\n\n\n\n\n\nTest: Star_r\n0.204053\n0.451722\n-0.02\n\n\n\n\n\n\n\nTest: S20_r\n0.114272\n0.338042\n+0.28\n-0.41\n\n\n\n\n\n\nTest: SLJ\n0.134368\n0.366562\n-0.34\n-0.00\n-0.73\n\n\n\n\n\nTest: BPT\n0.104722\n0.323608\n-0.11\n-0.49\n+0.36\n-0.45\n\n\n\n\na1\n0.037446\n0.193510\n+0.01\n-0.02\n-0.24\n+0.51\n+0.15\n\n\nResidual\n\n0.837969\n0.915407\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_School_Helmert)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\nSchool\n(Intercept)\n0.0359679\n0.1896519\n\n\n\n\n\n\n\n\nTest: Star_r\n0.0510017\n0.2258354\n-0.02\n\n\n\n\n\n\n\nTest: S20_r\n0.0114698\n0.1070972\n+0.29\n+0.28\n\n\n\n\n\n\nTest: SLJ\n0.0036617\n0.0605120\n-0.26\n+0.24\n-0.29\n\n\n\n\n\nTest: BPT\n0.0024318\n0.0493128\n-0.33\n-0.47\n-0.16\n-0.12\n\n\n\n\na1\n0.0374588\n0.1935429\n+0.01\n-0.02\n-0.27\n+0.54\n+0.59\n\n\nResidual\n\n0.8379784\n0.9154116\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_School_Hypo)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\nSchool\n(Intercept)\n0.035967\n0.189650\n\n\n\n\n\n\n\n\nTest: BPT-other\n0.972850\n0.986332\n-0.33\n\n\n\n\n\n\n\nTest: Star-End\n0.203996\n0.451659\n-0.02\n-0.47\n\n\n\n\n\n\nTest: S20-Star\n0.114293\n0.338073\n+0.28\n+0.16\n-0.41\n\n\n\n\n\nTest: SLJ-S20\n0.134397\n0.366601\n-0.34\n+0.02\n-0.00\n-0.73\n\n\n\n\na1\n0.037464\n0.193557\n+0.01\n+0.59\n-0.02\n-0.24\n+0.51\n\n\nResidual\n\n0.837972\n0.915408\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_School_PCA)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\nSchool\n(Intercept)\n0.035973\n0.189664\n\n\n\n\n\n\n\n\nTest: c5.1\n0.078474\n0.280133\n-0.25\n\n\n\n\n\n\n\nTest: c234.15\n3.571578\n1.889862\n+0.16\n+0.31\n\n\n\n\n\n\nTest: c2.34\n0.227977\n0.477469\n-0.14\n+0.07\n+0.29\n\n\n\n\n\nTest: c3.4\n0.134275\n0.366436\n+0.34\n+0.11\n+0.10\n-0.27\n\n\n\n\na1\n0.037464\n0.193557\n+0.01\n+0.52\n-0.24\n-0.05\n-0.51\n\n\nResidual\n\n0.837973\n0.915409\n\n\n\n\n\n\n\n\n\n\nWe compare again how much of the fit resides in the CPs.\n\nbegin\n  f_School0 = @formula zScore ~\n    1 + Test * a1 * Sex + zerocorr(1 + Test + a1 | School)\n  m_School_SDC0 = fit(MixedModel, f_School0, dat; contrasts=contr1)\n  m_School_HeC0 = fit(MixedModel, f_School0, dat; contrasts=contr2)\n  m_School_HyC0 = fit(MixedModel, f_School0, dat; contrasts=contr3)\n  m_School_PCA0 = fit(MixedModel, f_School0, dat; contrasts=contr4)\n  #\n  zcpLMM2 = [\"SDC0\", \"HeC0\", \"HyC0\", \"PCA0\"]\n  mods2 = [\n    m_School_SDC0, m_School_HeC0, m_School_HyC0, m_School_PCA0\n  ]\n  gof_summary2 = sort!(\n    DataFrame(;\n      zcpLMM=zcpLMM2,\n      dof=dof.(mods2),\n      deviance=deviance.(mods2),\n      AIC=aic.(mods2),\n      BIC=bic.(mods2),\n    ),\n    :deviance,\n  )\nend\n\n\nMinimizing 161    Time: 0:00:00 ( 0.63 ms/it)\n   objective: 13767.909929065954\n\n\nMinimizing 190    Time: 0:00:00 ( 0.64 ms/it)\n\nMinimizing 156    Time: 0:00:00 ( 0.64 ms/it)\n   objective: 13760.782932809645\n\n\nMinimizing 262    Time: 0:00:00 ( 0.65 ms/it)\n\n\n\n\n4√ó5 DataFrame\n\n\n\nRow\nzcpLMM\ndof\ndeviance\nAIC\nBIC\n\n\n\nString\nInt64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nPCA0\n27\n13760.2\n13814.2\n13990.2\n\n\n2\nHeC0\n27\n13761.6\n13815.6\n13991.6\n\n\n3\nHyC0\n27\n13767.9\n13821.9\n13997.9\n\n\n4\nSDC0\n27\n13774.3\n13828.3\n14004.2\n\n\n\n\n\n\nFor the random factor School the Helmert contrast, followed by PCA-based contrasts have least information in the CPs; SDC has the largest contribution from CPs. Interesting.",
    "crumbs": [
      "Contrast coding and transformations",
      "Mixed Models Tutorial: Contrast Coding"
    ]
  },
  {
    "objectID": "fggk21.html",
    "href": "fggk21.html",
    "title": "Basics with Emotikon Project",
    "section": "",
    "text": "This script uses a subset of data reported in F√ºhner et al. (2021). To circumvent delays associated with model fitting we work with models that are less complex than those in the reference publication. All the data to reproduce the models in the publication are used here, too; the script requires only a few changes to specify the more complex models in the article.\nThe script is structured in four main sections:"
  },
  {
    "objectID": "fggk21.html#read-data",
    "href": "fggk21.html#read-data",
    "title": "Basics with Emotikon Project",
    "section": "3.1 Read data",
    "text": "3.1 Read data\n\ndf = DataFrame(dataset(:fggk21))\ntransform!(df,\n    :age =&gt; (x -&gt; x .- 8.5) =&gt; :a1,\n    :Sex =&gt; categorical =&gt; :Sex,\n    :Test =&gt; categorical =&gt; :Test,\n  )\nlevels!(df.Sex, [\"male\", \"female\"])\nrecode!(df.Sex, \"male\" =&gt; \"Boys\", \"female\" =&gt; \"Girls\")\nlevels!(df.Test, [\"Run\", \"Star_r\", \"S20_r\", \"SLJ\", \"BPT\"])\nrecode!(\n  df.Test,\n  \"Run\" =&gt; \"Endurance\",\n  \"Star_r\" =&gt; \"Coordination\",\n  \"S20_r\" =&gt; \"Speed\",\n  \"SLJ\" =&gt; \"PowerLOW\",\n  \"BPT\" =&gt; \"PowerUP\",\n)\ndescribe(df)\n\n8√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nCohort\n\n2011\n\n2019\n0\nString\n\n\n2\nSchool\n\nS100043\n\nS800200\n0\nString\n\n\n3\nChild\n\nC002352\n\nC117966\n0\nString\n\n\n4\nSex\n\nBoys\n\nGirls\n0\nCategoricalValue{String, UInt32}\n\n\n5\nage\n8.56073\n7.99452\n8.55852\n9.10609\n0\nFloat64\n\n\n6\nTest\n\nEndurance\n\nPowerUP\n0\nCategoricalValue{String, UInt32}\n\n\n7\nscore\n226.141\n1.14152\n4.65116\n1530.0\n0\nFloat64\n\n\n8\na1\n0.0607297\n-0.505476\n0.0585216\n0.606092\n0\nFloat64\n\n\n\n\n\n\n\n3.1.1 Transformations\nWe center age at 8.5 years and compute z-scores for each Test. With these variables the data frame df contains all variables used for the final model in the original publication.\n\nselect!(groupby(df, :Test),  Not(:score), :score =&gt; zscore =&gt; :zScore)\n\n525126√ó8 DataFrame525101 rows omitted\n\n\n\nRow\nTest\nCohort\nSchool\nChild\nSex\nage\na1\nzScore\n\n\n\nCat‚Ä¶\nString\nString\nString\nCat‚Ä¶\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nSpeed\n2013\nS100067\nC002352\nBoys\n7.99452\n-0.505476\n1.7913\n\n\n2\nPowerUP\n2013\nS100067\nC002352\nBoys\n7.99452\n-0.505476\n-0.0622317\n\n\n3\nPowerLOW\n2013\nS100067\nC002352\nBoys\n7.99452\n-0.505476\n-0.0336567\n\n\n4\nCoordination\n2013\nS100067\nC002352\nBoys\n7.99452\n-0.505476\n1.46874\n\n\n5\nEndurance\n2013\nS100067\nC002352\nBoys\n7.99452\n-0.505476\n0.331058\n\n\n6\nSpeed\n2013\nS100067\nC002353\nBoys\n7.99452\n-0.505476\n1.15471\n\n\n7\nPowerUP\n2013\nS100067\nC002353\nBoys\n7.99452\n-0.505476\n0.498354\n\n\n8\nPowerLOW\n2013\nS100067\nC002353\nBoys\n7.99452\n-0.505476\n-0.498822\n\n\n9\nCoordination\n2013\nS100067\nC002353\nBoys\n7.99452\n-0.505476\n-0.9773\n\n\n10\nEndurance\n2013\nS100067\nC002353\nBoys\n7.99452\n-0.505476\n0.574056\n\n\n11\nSpeed\n2013\nS100067\nC002354\nBoys\n7.99452\n-0.505476\n0.0551481\n\n\n12\nPowerUP\n2013\nS100067\nC002354\nBoys\n7.99452\n-0.505476\n0.218061\n\n\n13\nPowerLOW\n2013\nS100067\nC002354\nBoys\n7.99452\n-0.505476\n-0.757248\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n525115\nCoordination\n2018\nS401470\nC117964\nBoys\n9.10609\n0.606092\n-1.43175\n\n\n525116\nEndurance\n2018\nS401470\nC117964\nBoys\n9.10609\n0.606092\n-0.944681\n\n\n525117\nSpeed\n2018\nS401470\nC117965\nGirls\n9.10609\n0.606092\n0.31086\n\n\n525118\nPowerUP\n2018\nS401470\nC117965\nGirls\n9.10609\n0.606092\n0.0779146\n\n\n525119\nPowerLOW\n2018\nS401470\nC117965\nGirls\n9.10609\n0.606092\n-0.137027\n\n\n525120\nCoordination\n2018\nS401470\nC117965\nGirls\n9.10609\n0.606092\n-1.8077\n\n\n525121\nEndurance\n2018\nS401470\nC117965\nGirls\n9.10609\n0.606092\n0.513306\n\n\n525122\nSpeed\n2018\nS800200\nC117966\nBoys\n9.10609\n0.606092\n0.0551481\n\n\n525123\nPowerUP\n2018\nS800200\nC117966\nBoys\n9.10609\n0.606092\n0.0779146\n\n\n525124\nPowerLOW\n2018\nS800200\nC117966\nBoys\n9.10609\n0.606092\n-1.32578\n\n\n525125\nCoordination\n2018\nS800200\nC117966\nBoys\n9.10609\n0.606092\n0.473217\n\n\n525126\nEndurance\n2018\nS800200\nC117966\nBoys\n9.10609\n0.606092\n-0.0941883"
  },
  {
    "objectID": "fggk21.html#extract-a-stratified-subsample",
    "href": "fggk21.html#extract-a-stratified-subsample",
    "title": "Basics with Emotikon Project",
    "section": "3.2 Extract a stratified subsample",
    "text": "3.2 Extract a stratified subsample\nFor the prupose of the tutorial, we extract a random sample of 1000 boys and 1000 girls. Child, School, and Cohort are grouping variables. Traditionally, they are called random factors because the units (levels) of the factor are assumed to be a random sample from the population of their units (levels).\nCohort has only nine ‚Äúgroups‚Äù and could have been included as a set of polynomical fixed-effect contrasts rather than a random factor. This choice warrants a short excursion: The secular trends are very different for different tests and require the inclusion of interaction terms with Test contrasts (see Figure 4 in (F√ºhner et al., 2021). The authors opted to absorb these effects in cohort-related variance components for the Test contrasts and plan to address the details of secular changes in a separate analysis.\nFor complex designs, when they are in the theoretical focus of an article, factors and covariates should be specified as part of the fixed effects. If they are not in the theoretical focus, but serve as statistical control variables, they could be put in the RES - if supported by the data.\nStratified sampling: We generate a Child table with information about children. MersenneTwister(42) specifies 42 as the seed for the random number generator to ensure reproducibility of the stratification. For a different pattern of results choose, for example, 84. We randomly sample 1000 boys and 1000 girls from this table; they are stored in samp. Then, we extract the corresponding subset of these children‚Äôs test scores from df and store them dat.\n\nChild = unique(select(df, :Cohort, :School, :Child, :Sex, :age))\nsample = let\n  rng = MersenneTwister(42)\n  combine(\n    groupby(Child, :Sex), x -&gt; x[rand(rng, 1:nrow(x), 1000), :]\n  )\nend\ninsamp(x) = x ‚àà sample.Child\ndat = @subset(df, insamp(:Child))\n\n9621√ó8 DataFrame9596 rows omitted\n\n\n\nRow\nTest\nCohort\nSchool\nChild\nSex\nage\na1\nzScore\n\n\n\nCat‚Ä¶\nString\nString\nString\nCat‚Ä¶\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nSpeed\n2013\nS100547\nC002378\nBoys\n7.99452\n-0.505476\n0.578748\n\n\n2\nPowerUP\n2013\nS100547\nC002378\nBoys\n7.99452\n-0.505476\n-0.762963\n\n\n3\nPowerLOW\n2013\nS100547\nC002378\nBoys\n7.99452\n-0.505476\n-0.808933\n\n\n4\nCoordination\n2013\nS100547\nC002378\nBoys\n7.99452\n-0.505476\n-0.846558\n\n\n5\nEndurance\n2013\nS100547\nC002378\nBoys\n7.99452\n-0.505476\n-0.397936\n\n\n6\nSpeed\n2013\nS102489\nC002562\nGirls\n7.99452\n-0.505476\n-0.189199\n\n\n7\nPowerUP\n2013\nS102489\nC002562\nGirls\n7.99452\n-0.505476\n-0.622817\n\n\n8\nPowerLOW\n2013\nS102489\nC002562\nGirls\n7.99452\n-0.505476\n-1.63589\n\n\n9\nCoordination\n2013\nS102489\nC002562\nGirls\n7.99452\n-0.505476\n-1.62614\n\n\n10\nEndurance\n2013\nS102489\nC002562\nGirls\n7.99452\n-0.505476\n0.12181\n\n\n11\nSpeed\n2013\nS103226\nC002618\nBoys\n7.99452\n-0.505476\n-0.422921\n\n\n12\nPowerUP\n2013\nS103226\nC002618\nBoys\n7.99452\n-0.505476\n-0.482671\n\n\n13\nPowerLOW\n2013\nS103226\nC002618\nBoys\n7.99452\n-0.505476\n-0.292082\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n9610\nPowerLOW\n2018\nS111570\nC117818\nGirls\n9.10609\n0.606092\n0.483194\n\n\n9611\nCoordination\n2018\nS111570\nC117818\nGirls\n9.10609\n0.606092\n-0.31554\n\n\n9612\nEndurance\n2018\nS111570\nC117818\nGirls\n9.10609\n0.606092\n-0.0941883\n\n\n9613\nPowerUP\n2018\nS111739\nC117841\nGirls\n9.10609\n0.606092\n0.0779146\n\n\n9614\nPowerLOW\n2018\nS111739\nC117841\nGirls\n9.10609\n0.606092\n-1.11904\n\n\n9615\nCoordination\n2018\nS111739\nC117841\nGirls\n9.10609\n0.606092\n-0.95589\n\n\n9616\nEndurance\n2018\nS111739\nC117841\nGirls\n9.10609\n0.606092\n-2.58492\n\n\n9617\nSpeed\n2018\nS112999\nC117902\nGirls\n9.10609\n0.606092\n1.7913\n\n\n9618\nPowerUP\n2018\nS112999\nC117902\nGirls\n9.10609\n0.606092\n-0.0622317\n\n\n9619\nPowerLOW\n2018\nS112999\nC117902\nGirls\n9.10609\n0.606092\n0.483194\n\n\n9620\nCoordination\n2018\nS112999\nC117902\nGirls\n9.10609\n0.606092\n0.708474\n\n\n9621\nEndurance\n2018\nS112999\nC117902\nGirls\n9.10609\n0.606092\n0.574056\n\n\n\n\n\n\nDue to missing scores for some tests we have about 2% less than 10,000 observtions."
  },
  {
    "objectID": "fggk21.html#no-evidence-for-age-x-sex-x-test-interaction",
    "href": "fggk21.html#no-evidence-for-age-x-sex-x-test-interaction",
    "title": "Basics with Emotikon Project",
    "section": "3.3 No evidence for age x Sex x Test interaction",
    "text": "3.3 No evidence for age x Sex x Test interaction\nThe main results are captured in the figure constructed in this section. We build it both for the full data and the stratified subset.\n\ndf2 = combine(\n  groupby(\n    select(df, :, :age =&gt; ByRow(x -&gt; round(x; digits=1)) =&gt; :age),\n    [:Sex, :Test, :age],\n  ),\n  :zScore =&gt; mean =&gt; :zScore,\n  :zScore =&gt; length =&gt; :n,\n)\n\n120√ó5 DataFrame95 rows omitted\n\n\n\nRow\nSex\nTest\nage\nzScore\nn\n\n\n\nCat‚Ä¶\nCat‚Ä¶\nFloat64\nFloat64\nInt64\n\n\n\n\n1\nBoys\nSpeed\n8.0\n-0.0265138\n1223\n\n\n2\nBoys\nPowerUP\n8.0\n0.026973\n1227\n\n\n3\nBoys\nPowerLOW\n8.0\n0.121609\n1227\n\n\n4\nBoys\nCoordination\n8.0\n-0.0571726\n1186\n\n\n5\nBoys\nEndurance\n8.0\n0.292695\n1210\n\n\n6\nGirls\nSpeed\n8.0\n-0.35164\n1411\n\n\n7\nGirls\nPowerUP\n8.0\n-0.610355\n1417\n\n\n8\nGirls\nPowerLOW\n8.0\n-0.279872\n1418\n\n\n9\nGirls\nCoordination\n8.0\n-0.268221\n1381\n\n\n10\nGirls\nEndurance\n8.0\n-0.245573\n1387\n\n\n11\nBoys\nSpeed\n8.1\n0.0608397\n3042\n\n\n12\nBoys\nPowerUP\n8.1\n0.0955413\n3069\n\n\n13\nBoys\nPowerLOW\n8.1\n0.123099\n3069\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n109\nBoys\nCoordination\n9.0\n0.254973\n4049\n\n\n110\nBoys\nEndurance\n9.0\n0.258082\n4034\n\n\n111\nGirls\nSpeed\n9.1\n-0.0286172\n1154\n\n\n112\nGirls\nPowerUP\n9.1\n-0.0752301\n1186\n\n\n113\nGirls\nPowerLOW\n9.1\n-0.094587\n1174\n\n\n114\nGirls\nCoordination\n9.1\n0.00276252\n1162\n\n\n115\nGirls\nEndurance\n9.1\n-0.235591\n1150\n\n\n116\nBoys\nSpeed\n9.1\n0.325745\n1303\n\n\n117\nBoys\nPowerUP\n9.1\n0.616416\n1320\n\n\n118\nBoys\nPowerLOW\n9.1\n0.267577\n1310\n\n\n119\nBoys\nCoordination\n9.1\n0.254342\n1297\n\n\n120\nBoys\nEndurance\n9.1\n0.251045\n1294\n\n\n\n\n\n\n\n3.3.1 Figure(s) of interaction\nThe core results of the article are reported in Figure 2 of F√ºhner et al. (2021). In summary:\n\nMain effects of age and Sex: There are developmental gains in the ninth year of life; boys outperform girls. There is no main effect of Test because of z-scoring.\nInteractions of Test and age: Tests differ in how much children improve during the year (i.e., the magnitude of developmental gain), that is slopes depend on Test.\nInteractions of Test and Sex: The sex difference is test dependent, that is the difference between the slopes depends on Test.\nThe most distinctive result is the absence of evidence for an age x Sex x Test interaction, that is the slopes for boys and girls are statistically parallel for each of the five tests.\n\n\n\nCode\nlet\n  design1 = mapping(:age, :zScore; color=:Sex, col=:Test)\n  lines1 = design1 * linear()\n  means1 = design1 * visual(Scatter; markersize=5)\n  draw(data(df2) * means1 + data(df) * lines1;)\nend\n\n\n\n\n\n\n\nFigure¬†1: Age trends by sex for each Test for the full data set\n\n\n\n\nFigure¬†1 shows performance differences for the full set of data between 8.0 and 9.2 years by sex in the five physical fitness tests presented as z-transformed data computed separately for each test.\n\nEndurance = cardiorespiratory endurance (i.e., 6-min-run test),\nCoordination = star-run test,\nSpeed = 20-m linear sprint test,\nPowerLOW = power of lower limbs (i.e., standing long jump test),\nPowerUP = power of upper limbs (i.e., ball push test),\nSD = standard deviation. Points are binned observed child means; lines are simple regression fits to the observations.\n\nWhat do the results look like for the stratified subsample? Here the parallelism is much less clear. In the final LMM we test whether the two regression lines in each of the five panels are statistically parallel for this subset of data. That is, we test the interaction of Sex and age as nested within the levels of Test. Most people want to know the signficance of these five Sex x age interactions.\nThe theoretical focus of the article, however, is on comparisons between tests displayed next to each other. We ask whether the degree of parallelism is statistically the same for Endurance and Coordination (H1), Coordination and Speed (H2), Speed and PowerLOW (H3), and PowerLow and PowerUP (H4). Hypotheses H1 to H4 require Sequential Difference contrasts c1 to c4 for Test; they are tested as fixed effects for`H1 x age x Sex, H2 x age x Sex, H3 x age x Sex, and H4 x age x Sex.\n\n\nCode\ndat2 = combine(\n  groupby(\n    select(dat, :, :age =&gt; ByRow(x -&gt; round(x; digits=1)) =&gt; :age),\n    [:Sex, :Test, :age],\n  ),\n  :zScore =&gt; mean =&gt; :zScore,\n  :zScore =&gt; length =&gt; :n,\n)\n\n\n120√ó5 DataFrame95 rows omitted\n\n\n\nRow\nSex\nTest\nage\nzScore\nn\n\n\n\nCat‚Ä¶\nCat‚Ä¶\nFloat64\nFloat64\nInt64\n\n\n\n\n1\nBoys\nSpeed\n8.0\n0.0108467\n20\n\n\n2\nBoys\nPowerUP\n8.0\n0.0779146\n20\n\n\n3\nBoys\nPowerLOW\n8.0\n0.0800505\n20\n\n\n4\nBoys\nCoordination\n8.0\n0.0843624\n19\n\n\n5\nBoys\nEndurance\n8.0\n0.287361\n19\n\n\n6\nGirls\nSpeed\n8.0\n-0.430054\n27\n\n\n7\nGirls\nPowerUP\n8.0\n-0.799298\n27\n\n\n8\nGirls\nPowerLOW\n8.0\n-0.408374\n28\n\n\n9\nGirls\nCoordination\n8.0\n-0.323287\n28\n\n\n10\nGirls\nEndurance\n8.0\n-0.380386\n25\n\n\n11\nGirls\nSpeed\n8.1\n-0.461211\n55\n\n\n12\nGirls\nPowerUP\n8.1\n-0.566758\n55\n\n\n13\nGirls\nPowerLOW\n8.1\n-0.309937\n55\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n109\nGirls\nCoordination\n9.0\n-0.0750398\n57\n\n\n110\nGirls\nEndurance\n9.0\n-0.42162\n57\n\n\n111\nBoys\nSpeed\n9.1\n0.119451\n29\n\n\n112\nBoys\nPowerUP\n9.1\n0.618479\n28\n\n\n113\nBoys\nPowerLOW\n9.1\n-0.131489\n28\n\n\n114\nBoys\nCoordination\n9.1\n0.145517\n28\n\n\n115\nBoys\nEndurance\n9.1\n-0.0891883\n27\n\n\n116\nGirls\nSpeed\n9.1\n-0.0435788\n20\n\n\n117\nGirls\nPowerUP\n9.1\n0.230801\n22\n\n\n118\nGirls\nPowerLOW\n9.1\n-0.0538813\n23\n\n\n119\nGirls\nCoordination\n9.1\n0.282882\n23\n\n\n120\nGirls\nEndurance\n9.1\n-0.0865179\n22\n\n\n\n\n\n\n\n\nCode\nlet\n  design2 = mapping(:age, :zScore; color=:Sex, col=:Test)\n  lines2 = design2 * linear()\n  means2 = design2 * visual(Scatter; markersize=5)\n  draw(data(dat2) * means2 + data(dat) * lines2;)\nend\n\n\n\n\n\n\n\nFigure¬†2: Age trends by sex for each Test for the stratified sample\n\n\n\n\nFigure¬†2 Performance differences for subset of data between 8.0 and 9.2 years by sex in the five physical fitness tests presented as z-transformed data computed separately for each test.\n\nEndurance = cardiorespiratory endurance (i.e., 6-min-run test),\nCoordination = star-run test,\nSpeed = 20-m linear sprint test,\nPowerLOW = power of lower limbs (i.e., standing long jump test),\nPowerUP = power of upper limbs (i.e., ball push test),\nSD = standard deviation. Points are binned observed child means; lines are simple regression fits to the observations.\n\n\n\n3.3.2 Regression on age by Sex for each Test\nAnother set of relevant statistics are the slopes for the regression of performance on age for boys and girls in each of the five tests. The lines in Figures 1 and 2, however, are computed directly from the raw data with the linear() command.\n\ncombine(\n  groupby(df, [:Sex, :Test]),\n  [:age, :zScore] =&gt; simplelinreg =&gt; :coef,\n)\n\n10√ó3 DataFrame\n\n\n\nRow\nSex\nTest\ncoef\n\n\n\nCat‚Ä¶\nCat‚Ä¶\nTuple‚Ä¶\n\n\n\n\n1\nBoys\nEndurance\n(0.00256718, 0.0291899)\n\n\n2\nBoys\nCoordination\n(-2.47279, 0.302819)\n\n\n3\nBoys\nSpeed\n(-2.12689, 0.267153)\n\n\n4\nBoys\nPowerLOW\n(-1.4307, 0.189659)\n\n\n5\nBoys\nPowerUP\n(-4.35864, 0.549005)\n\n\n6\nGirls\nEndurance\n(-0.692022, 0.0523217)\n\n\n7\nGirls\nCoordination\n(-2.50524, 0.279119)\n\n\n8\nGirls\nSpeed\n(-2.34431, 0.255687)\n\n\n9\nGirls\nPowerLOW\n(-1.87241, 0.196917)\n\n\n10\nGirls\nPowerUP\n(-4.82271, 0.524799)\n\n\n\n\n\n\n\ncombine(\n  groupby(dat, [:Sex, :Test]),\n  [:age, :zScore] =&gt; simplelinreg =&gt; :coef,\n)\n\n10√ó3 DataFrame\n\n\n\nRow\nSex\nTest\ncoef\n\n\n\nCat‚Ä¶\nCat‚Ä¶\nTuple‚Ä¶\n\n\n\n\n1\nBoys\nEndurance\n(-0.681676, 0.111322)\n\n\n2\nBoys\nCoordination\n(-1.11067, 0.141854)\n\n\n3\nBoys\nSpeed\n(-1.37849, 0.178035)\n\n\n4\nBoys\nPowerLOW\n(-1.44439, 0.194219)\n\n\n5\nBoys\nPowerUP\n(-3.26371, 0.420349)\n\n\n6\nGirls\nEndurance\n(-0.350538, 0.0141756)\n\n\n7\nGirls\nCoordination\n(-2.08942, 0.234567)\n\n\n8\nGirls\nSpeed\n(-1.93461, 0.213441)\n\n\n9\nGirls\nPowerLOW\n(0.0629858, -0.0240463)\n\n\n10\nGirls\nPowerUP\n(-4.30863, 0.469259)"
  },
  {
    "objectID": "fggk21.html#seqdiffcoding-of-test",
    "href": "fggk21.html#seqdiffcoding-of-test",
    "title": "Basics with Emotikon Project",
    "section": "3.4 SeqDiffCoding of Test",
    "text": "3.4 SeqDiffCoding of Test\nSeqDiffCoding was used in the publication. This specification tests pairwise differences between the five neighboring levels of Test, that is:\n\nH1: Star_r - Run (2-1)\nH2: S20_r - Star_r (3-2)\nH3: SLJ - S20_r (4-3)\nH4: BPT - SLJ (5-4)\n\nThe levels were sorted such that these contrasts map onto four a priori hypotheses; in other words, they are theoretically motivated pairwise comparisons. The motivation also encompasses theoretically motivated interactions with Sex. The order of levels can also be explicitly specified during contrast construction. This is very useful if levels are in a different order in the dataframe.\nNote that random factors Child, School, and Cohort are declared as Grouping variables. Technically, this specification is required for variables with a very large number of levels (e.g., 100K+ children). We recommend the explicit specification for all random factors as a general coding style.\nThe first command recodes names indicating the physical fitness components used in the above figures and tables back to the shorter actual test names. This reduces clutter in LMM outputs.\n\nrecode!(\n  dat.Test,\n  \"Endurance\" =&gt; \"Run\",\n  \"Coordination\" =&gt; \"Star_r\",\n  \"Speed\" =&gt; \"S20_r\",\n  \"PowerLOW\" =&gt; \"SLJ\",\n  \"PowerUP\" =&gt; \"BMT\",\n)\ncontrasts = Dict{Symbol,Any}(nm =&gt; SeqDiffCoding() for nm in (:Test, :Sex))\n\nDict{Symbol, Any} with 2 entries:\n  :Test =&gt; SeqDiffCoding(nothing)\n  :Sex  =&gt; SeqDiffCoding(nothing)\n\n\nThe statistical disadvantage of SeqDiffCoding is that the contrasts are not orthogonal, that is the contrasts are correlated. This is obvious from the fact that levels 2, 3, and 4 are all used in two contrasts. One consequence of this is that correlation parameters estimated between neighboring contrasts (e.g., 2-1 and 3-2) are difficult to interpret. Usually, they will be negative because assuming some practical limitations on the overall range (e.g., between levels 1 and 3), a small ‚Äú2-1‚Äù effect ‚Äúcorrelates‚Äù negatively with a larger ‚Äú3-2‚Äù effect for mathematical reasons.\nObviously, the tradeoff between theoretical motivation and statistical purity is something that must be considered carefully when planning the analysis.\nVarious options for contrast coding are the topic of the MixedModelsTutorial_contrasts_emotikon.jl and MixedModelsTutorial_contrasts_kwdyz.jl notebooks."
  },
  {
    "objectID": "fggk21.html#lmm-m_ovi",
    "href": "fggk21.html#lmm-m_ovi",
    "title": "Basics with Emotikon Project",
    "section": "4.1 LMM m_ovi",
    "text": "4.1 LMM m_ovi\nIn its random-effect structure (RES) we only vary intercepts (i.e., Grand Means) for School (LMM m_ovi), that is we allow that the schools differ in the average fitness of its children, average over the five tests.\nIt is well known that such a simple RES is likely to be anti-conservative with respect to fixed-effect test statistics.\n\nm_ovi = let\n  f = @formula zScore ~ 1 + Test * Sex * a1 + (1 | School)\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_School\n\n\n(Intercept)\n-0.0079\n0.0195\n-0.40\n0.6858\n0.3367\n\n\nTest: Star_r\n-0.0208\n0.0303\n-0.68\n0.4934\n\n\n\nTest: S20_r\n0.0097\n0.0302\n0.32\n0.7492\n\n\n\nTest: SLJ\n0.0245\n0.0301\n0.81\n0.4162\n\n\n\nTest: BMT\n-0.0363\n0.0301\n-1.21\n0.2271\n\n\n\nSex: Girls\n-0.3839\n0.0208\n-18.49\n&lt;1e-75\n\n\n\na1\n0.1901\n0.0357\n5.32\n&lt;1e-06\n\n\n\nTest: Star_r & Sex: Girls\n0.3042\n0.0606\n5.02\n&lt;1e-06\n\n\n\nTest: S20_r & Sex: Girls\n-0.0679\n0.0603\n-1.12\n0.2608\n\n\n\nTest: SLJ & Sex: Girls\n-0.0898\n0.0602\n-1.49\n0.1355\n\n\n\nTest: BMT & Sex: Girls\n-0.2812\n0.0602\n-4.67\n&lt;1e-05\n\n\n\nTest: Star_r & a1\n0.1230\n0.1037\n1.19\n0.2356\n\n\n\nTest: S20_r & a1\n0.0113\n0.1032\n0.11\n0.9129\n\n\n\nTest: SLJ & a1\n-0.1133\n0.1029\n-1.10\n0.2708\n\n\n\nTest: BMT & a1\n0.3544\n0.1027\n3.45\n0.0006\n\n\n\nSex: Girls & a1\n0.0626\n0.0717\n0.87\n0.3826\n\n\n\nTest: Star_r & Sex: Girls & a1\n0.1758\n0.2074\n0.85\n0.3965\n\n\n\nTest: S20_r & Sex: Girls & a1\n-0.0452\n0.2063\n-0.22\n0.8265\n\n\n\nTest: SLJ & Sex: Girls & a1\n-0.2598\n0.2058\n-1.26\n0.2068\n\n\n\nTest: BMT & Sex: Girls & a1\n0.2645\n0.2054\n1.29\n0.1980\n\n\n\nResidual\n0.9170\n\n\n\n\n\n\n\n\n\nIs the model singular (overparameterized, degenerate)? In other words: Is the model not supported by the data?\n\nissingular(m_ovi)\n\nfalse\n\n\nModels varying only in intercepts are almost always supported by the data."
  },
  {
    "objectID": "fggk21.html#lmm-m_zcp",
    "href": "fggk21.html#lmm-m_zcp",
    "title": "Basics with Emotikon Project",
    "section": "4.2 LMM m_zcp",
    "text": "4.2 LMM m_zcp\nIn this LMM we allow that schools differ not only in GM, but also in the size of the four contrasts defined for Test, in the difference between boys and girls (Sex) and the developmental gain children achieve within the third grade (age).\nWe assume that there is covariance associated with these CPs beyond residual noise, that is we assume that there is no detectable evidence in the data that the CPs are different from zero.\n\nm_zcp = let\n  f = @formula(\n    zScore ~\n      1 + Test * Sex * a1 + zerocorr(1 + Test + Sex + a1 | School)\n  )\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_School\n\n\n(Intercept)\n0.0002\n0.0196\n0.01\n0.9916\n0.3150\n\n\nTest: Star_r\n-0.0134\n0.0308\n-0.44\n0.6627\n0.2033\n\n\nTest: S20_r\n0.0112\n0.0288\n0.39\n0.6959\n0.0700\n\n\nTest: SLJ\n0.0239\n0.0284\n0.84\n0.4008\n0.0000\n\n\nTest: BMT\n-0.0277\n0.0302\n-0.92\n0.3585\n0.1813\n\n\nSex: Girls\n-0.3806\n0.0341\n-11.17\n&lt;1e-28\n0.4879\n\n\na1\n0.1864\n0.0596\n3.13\n0.0018\n0.8207\n\n\nTest: Star_r & Sex: Girls\n0.3107\n0.0579\n5.37\n&lt;1e-07\n\n\n\nTest: S20_r & Sex: Girls\n-0.0686\n0.0571\n-1.20\n0.2292\n\n\n\nTest: SLJ & Sex: Girls\n-0.0869\n0.0568\n-1.53\n0.1263\n\n\n\nTest: BMT & Sex: Girls\n-0.2854\n0.0573\n-4.98\n&lt;1e-06\n\n\n\nTest: Star_r & a1\n0.1138\n0.0992\n1.15\n0.2513\n\n\n\nTest: S20_r & a1\n0.0174\n0.0976\n0.18\n0.8582\n\n\n\nTest: SLJ & a1\n-0.1120\n0.0971\n-1.15\n0.2490\n\n\n\nTest: BMT & a1\n0.3461\n0.0980\n3.53\n0.0004\n\n\n\nSex: Girls & a1\n0.0991\n0.0820\n1.21\n0.2269\n\n\n\nTest: Star_r & Sex: Girls & a1\n0.1113\n0.1985\n0.56\n0.5749\n\n\n\nTest: S20_r & Sex: Girls & a1\n-0.0511\n0.1952\n-0.26\n0.7934\n\n\n\nTest: SLJ & Sex: Girls & a1\n-0.2599\n0.1943\n-1.34\n0.1810\n\n\n\nTest: BMT & Sex: Girls & a1\n0.2592\n0.1960\n1.32\n0.1860\n\n\n\nResidual\n0.8651\n\n\n\n\n\n\n\n\n\nDepending on sampling, this model estimating variance components for School may or may not be supported by the data.\n\nissingular(m_zcp)\n\ntrue"
  },
  {
    "objectID": "fggk21.html#lmm-m_cpx",
    "href": "fggk21.html#lmm-m_cpx",
    "title": "Basics with Emotikon Project",
    "section": "4.3 LMM m_cpx",
    "text": "4.3 LMM m_cpx\nIn the complex LMM investigated in this sequence we give up the assumption of zero-correlation between VCs.\n\nm_cpx = let\n  f = @formula(\n    zScore ~ 1 + Test * Sex * a1 + (1 + Test + Sex + a1 | School)\n  )\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_School\n\n\n(Intercept)\n-0.0019\n0.0196\n-0.10\n0.9237\n0.3184\n\n\nTest: Star_r\n-0.0146\n0.0319\n-0.46\n0.6465\n0.2546\n\n\nTest: S20_r\n0.0097\n0.0298\n0.32\n0.7459\n0.1605\n\n\nTest: SLJ\n0.0225\n0.0284\n0.79\n0.4297\n0.0448\n\n\nTest: BMT\n-0.0230\n0.0305\n-0.75\n0.4523\n0.2107\n\n\nSex: Girls\n-0.3713\n0.0341\n-10.89\n&lt;1e-26\n0.4924\n\n\na1\n0.1716\n0.0583\n2.94\n0.0033\n0.7982\n\n\nTest: Star_r & Sex: Girls\n0.3108\n0.0581\n5.35\n&lt;1e-07\n\n\n\nTest: S20_r & Sex: Girls\n-0.0670\n0.0573\n-1.17\n0.2420\n\n\n\nTest: SLJ & Sex: Girls\n-0.0869\n0.0567\n-1.53\n0.1252\n\n\n\nTest: BMT & Sex: Girls\n-0.2878\n0.0572\n-5.03\n&lt;1e-06\n\n\n\nTest: Star_r & a1\n0.1207\n0.0995\n1.21\n0.2254\n\n\n\nTest: S20_r & a1\n0.0175\n0.0980\n0.18\n0.8582\n\n\n\nTest: SLJ & a1\n-0.1149\n0.0969\n-1.19\n0.2357\n\n\n\nTest: BMT & a1\n0.3481\n0.0977\n3.56\n0.0004\n\n\n\nSex: Girls & a1\n0.0909\n0.0809\n1.12\n0.2609\n\n\n\nTest: Star_r & Sex: Girls & a1\n0.1174\n0.1993\n0.59\n0.5558\n\n\n\nTest: S20_r & Sex: Girls & a1\n-0.0534\n0.1960\n-0.27\n0.7851\n\n\n\nTest: SLJ & Sex: Girls & a1\n-0.2496\n0.1939\n-1.29\n0.1980\n\n\n\nTest: BMT & Sex: Girls & a1\n0.2430\n0.1955\n1.24\n0.2139\n\n\n\nResidual\n0.8628\n\n\n\n\n\n\n\n\n\nWe also need to see the VCs and CPs of the random-effect structure (RES).\n\nVarCorr(m_cpx)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\n\nSchool\n(Intercept)\n0.1013683\n0.3183838\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.0647957\n0.2545500\n+0.15\n\n\n\n\n\n\n\n\nTest: S20_r\n0.0257462\n0.1604562\n+0.03\n-0.37\n\n\n\n\n\n\n\nTest: SLJ\n0.0020046\n0.0447724\n+0.04\n-0.65\n-0.35\n\n\n\n\n\n\nTest: BMT\n0.0444127\n0.2107431\n-0.58\n-0.07\n-0.34\n+0.45\n\n\n\n\n\nSex: Girls\n0.2424428\n0.4923848\n-0.42\n-0.05\n-0.05\n+0.05\n+0.38\n\n\n\n\na1\n0.6370976\n0.7981839\n+0.18\n+0.01\n+0.09\n-0.04\n-0.14\n+0.01\n\n\nResidual\n\n0.7444110\n0.8627925\n\n\n\n\n\n\n\n\n\n\n\n\nissingular(m_cpx)\n\ntrue\n\n\nThe complex model may or may not be supported by the data."
  },
  {
    "objectID": "fggk21.html#model-comparisons",
    "href": "fggk21.html#model-comparisons",
    "title": "Basics with Emotikon Project",
    "section": "4.4 Model comparisons",
    "text": "4.4 Model comparisons\nThe checks of model singularity indicate that the three models are supported by the data. Does model complexification also increase the goodness of fit or are we only fitting noise?\n\n4.4.1 LRT and goodness-of-fit statistics\nAs the thee models are strictly hierarchically nested, we compare them with a likelihood-ratio tests (LRT) and AIC and BIC goodness-of-fit statistics derived from them.\n\nMixedModels.likelihoodratiotest(m_ovi, m_zcp, m_cpx)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nzScore ~ 1 + Test + Sex + a1 + Test & Sex + Test & a1 + Sex & a1 + Test & Sex & a1 + (1 | School)\n22\n26190\n\n\n\n\n\nzScore ~ 1 + Test + Sex + a1 + Test & Sex + Test & a1 + Sex & a1 + Test & Sex & a1 + zerocorr(1 + Test + Sex + a1 | School)\n28\n25862\n328\n6\n&lt;1e-67\n\n\nzScore ~ 1 + Test + Sex + a1 + Test & Sex + Test & a1 + Sex & a1 + Test & Sex & a1 + (1 + Test + Sex + a1 | School)\n49\n25814\n48\n21\n0.0006\n\n\n\n\n\n\n\nCode\ngof_summary = let\n  nms = [:m_ovi, :m_zcp, :m_cpx]\n  mods = eval.(nms)\n  DataFrame(;\n    name=nms,\n    dof=dof.(mods),\n    deviance=deviance.(mods),\n    AIC=aic.(mods),\n    AICc=aicc.(mods),\n    BIC=bic.(mods),\n  )\nend\n\n\n3√ó6 DataFrame\n\n\n\nRow\nname\ndof\ndeviance\nAIC\nAICc\nBIC\n\n\n\nSymbol\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nm_ovi\n22\n26189.8\n26233.8\n26234.0\n26391.6\n\n\n2\nm_zcp\n28\n25862.2\n25918.2\n25918.4\n26119.0\n\n\n3\nm_cpx\n49\n25813.9\n25911.9\n25912.4\n26263.3\n\n\n\n\n\n\nThese statistics will depend on sampling. In general, smaller deviance, AIC, and BIC indicate an improvement in goodness of fit. Usually, œá¬≤ should be larger than the associated degrees of freedom; for AIC and BIC the decrease should amount to more than 5, according to some literature. Severity of meeting these criteria increases from deviance to AIC to BIC. Therefore, it is not always the case that the criteria are unanimous in their verdict. Basically, the more confirmatory the analysis, the more one may go with deviance and AIC; for exploratory analyses the BIC is probably a better guide. There are grey zones here.\n\n\n4.4.2 Comparing fixed effects of m_ovi, m_zcp, and m_cpx\nWe check whether enriching the RES changed the significance of fixed effects in the final model.\n\n\nCode\nm_ovi_fe = DataFrame(coeftable(m_ovi));\nm_zcp_fe = DataFrame(coeftable(m_zcp));\nm_cpx_fe = DataFrame(coeftable(m_cpx));\nm_all = hcat(\n  m_ovi_fe[:, [1, 2, 4]],\n  leftjoin(\n    m_zcp_fe[:, [1, 2, 4]],\n    m_cpx_fe[:, [1, 2, 4]];\n    on=:Name,\n    makeunique=true,\n  );\n  makeunique=true,\n)\nrename!(\n  m_all,\n  \"Coef.\" =&gt; \"b_ovi\",\n  \"Coef._2\" =&gt; \"b_zcp\",\n  \"Coef._1\" =&gt; \"b_cpx\",\n  \"z\" =&gt; \"z_ovi\",\n  \"z_2\" =&gt; \"z_zcp\",\n  \"z_1\" =&gt; \"z_cpx\",\n)\nm_all2 =\n  round.(\n    m_all[:, [:b_ovi, :b_zcp, :b_cpx, :z_ovi, :z_zcp, :z_cpx]],\n    digits=2,\n  )\nm_all3 = hcat(m_all.Name, m_all2)\n\n\n20√ó7 DataFrame\n\n\n\nRow\nx1\nb_ovi\nb_zcp\nb_cpx\nz_ovi\nz_zcp\nz_cpx\n\n\n\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n(Intercept)\n-0.01\n0.0\n-0.0\n-0.4\n0.01\n-0.1\n\n\n2\nTest: Star_r\n-0.02\n-0.01\n-0.01\n-0.68\n-0.44\n-0.46\n\n\n3\nTest: S20_r\n0.01\n0.01\n0.01\n0.32\n0.39\n0.32\n\n\n4\nTest: SLJ\n0.02\n0.02\n0.02\n0.81\n0.84\n0.79\n\n\n5\nTest: BMT\n-0.04\n-0.03\n-0.02\n-1.21\n-0.92\n-0.75\n\n\n6\nSex: Girls\n-0.38\n-0.38\n-0.37\n-18.49\n-11.17\n-10.89\n\n\n7\na1\n0.19\n0.19\n0.17\n5.32\n3.13\n2.94\n\n\n8\nTest: Star_r & Sex: Girls\n0.3\n0.31\n0.31\n5.02\n5.37\n5.35\n\n\n9\nTest: S20_r & Sex: Girls\n-0.07\n-0.07\n-0.07\n-1.12\n-1.2\n-1.17\n\n\n10\nTest: SLJ & Sex: Girls\n-0.09\n-0.09\n-0.09\n-1.49\n-1.53\n-1.53\n\n\n11\nTest: BMT & Sex: Girls\n-0.28\n-0.29\n-0.29\n-4.67\n-4.98\n-5.03\n\n\n12\nTest: Star_r & a1\n0.12\n0.11\n0.12\n1.19\n1.15\n1.21\n\n\n13\nTest: S20_r & a1\n0.01\n0.02\n0.02\n0.11\n0.18\n0.18\n\n\n14\nTest: SLJ & a1\n-0.11\n-0.11\n-0.11\n-1.1\n-1.15\n-1.19\n\n\n15\nTest: BMT & a1\n0.35\n0.35\n0.35\n3.45\n3.53\n3.56\n\n\n16\nSex: Girls & a1\n0.06\n0.1\n0.09\n0.87\n1.21\n1.12\n\n\n17\nTest: Star_r & Sex: Girls & a1\n0.18\n0.11\n0.12\n0.85\n0.56\n0.59\n\n\n18\nTest: S20_r & Sex: Girls & a1\n-0.05\n-0.05\n-0.05\n-0.22\n-0.26\n-0.27\n\n\n19\nTest: SLJ & Sex: Girls & a1\n-0.26\n-0.26\n-0.25\n-1.26\n-1.34\n-1.29\n\n\n20\nTest: BMT & Sex: Girls & a1\n0.26\n0.26\n0.24\n1.29\n1.32\n1.24\n\n\n\n\n\n\nThe three models usually do not differ in fixed-effect estimates. For main effects of age and Sex, z-values decrease strongly with the complexity of the model (i.e., standard errors are larger). For other coefficients, the changes are not very large and not consistent.\nIn general, dropping significant variance components and/or correlation parameters may lead to anti-conservative estimates of fixed effects (e.g., Schielzeth & Forstmeier, 2008). Basically, some of the variance allocated to age and Sex in LMM m_ovi could also be due to differences between schools. This ambiguity increased the uncertainty of the respective fixed effects in the other two LMMs."
  },
  {
    "objectID": "fggk21.html#fitting-an-overparameterized-lmm",
    "href": "fggk21.html#fitting-an-overparameterized-lmm",
    "title": "Basics with Emotikon Project",
    "section": "4.5 Fitting an overparameterized LMM",
    "text": "4.5 Fitting an overparameterized LMM\nThe complex LMM was not overparameterized with respect to School, because there are over 400 schools in the data. When the number of units (levels) of a grouping factor is small relative to the number of parameters we are trying to estimate, we often end up with an overparameterized / degenerate random-effect structure.\nAs an illustration, we fit a full CP matrix for the Cohort. As there are only nine cohorts in the data, we may be asking too much to estimate 5*6/2 = 15 VC/CP parameters.\n\nm_cpxCohort = let\n  f = @formula zScore ~ 1 + Test * a1 * Sex + (1 + Test | Cohort)\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Cohort\n\n\n(Intercept)\n0.0108\n0.0150\n0.72\n0.4710\n0.0333\n\n\nTest: Star_r\n-0.0215\n0.0383\n-0.56\n0.5738\n0.0627\n\n\nTest: S20_r\n0.0060\n0.0385\n0.16\n0.8765\n0.0647\n\n\nTest: SLJ\n0.0293\n0.0354\n0.83\n0.4072\n0.0467\n\n\nTest: BMT\n-0.0399\n0.0338\n-1.18\n0.2377\n0.0345\n\n\na1\n0.1910\n0.0349\n5.47\n&lt;1e-07\n\n\n\nSex: Girls\n-0.3818\n0.0201\n-18.95\n&lt;1e-79\n\n\n\nTest: Star_r & a1\n0.1041\n0.1101\n0.95\n0.3445\n\n\n\nTest: S20_r & a1\n0.0154\n0.1093\n0.14\n0.8878\n\n\n\nTest: SLJ & a1\n-0.1028\n0.1089\n-0.94\n0.3451\n\n\n\nTest: BMT & a1\n0.3500\n0.1085\n3.22\n0.0013\n\n\n\nTest: Star_r & Sex: Girls\n0.3033\n0.0639\n4.74\n&lt;1e-05\n\n\n\nTest: S20_r & Sex: Girls\n-0.0678\n0.0636\n-1.07\n0.2866\n\n\n\nTest: SLJ & Sex: Girls\n-0.0899\n0.0635\n-1.42\n0.1568\n\n\n\nTest: BMT & Sex: Girls\n-0.2810\n0.0634\n-4.43\n&lt;1e-05\n\n\n\na1 & Sex: Girls\n-0.0287\n0.0688\n-0.42\n0.6767\n\n\n\nTest: Star_r & a1 & Sex: Girls\n0.1905\n0.2187\n0.87\n0.3837\n\n\n\nTest: S20_r & a1 & Sex: Girls\n-0.0557\n0.2175\n-0.26\n0.7979\n\n\n\nTest: SLJ & a1 & Sex: Girls\n-0.2549\n0.2169\n-1.17\n0.2400\n\n\n\nTest: BMT & a1 & Sex: Girls\n0.2671\n0.2166\n1.23\n0.2175\n\n\n\nResidual\n0.9669\n\n\n\n\n\n\n\n\n\n\nVarCorr(m_cpxCohort)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nCohort\n(Intercept)\n0.0011065\n0.0332640\n\n\n\n\n\n\n\nTest: Star_r\n0.0039347\n0.0627268\n+0.52\n\n\n\n\n\n\nTest: S20_r\n0.0041798\n0.0646514\n-1.00\n-0.50\n\n\n\n\n\nTest: SLJ\n0.0021826\n0.0467180\n+0.58\n-0.38\n-0.60\n\n\n\n\nTest: BMT\n0.0011871\n0.0344536\n+0.68\n+0.94\n-0.67\n-0.18\n\n\nResidual\n\n0.9349904\n0.9669490\n\n\n\n\n\n\n\n\n\n\nissingular(m_cpxCohort)\n\ntrue\n\n\nThe model is overparameterized with several CPs estimated between |.98| and |1.00|. How about the zero-correlation parameter (zcp) version of this LMM?\n\nm_zcpCohort = let\n  f = @formula(\n    zScore ~ 1 + Test * a1 * Sex + zerocorr(1 + Test | Cohort)\n  )\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Cohort\n\n\n(Intercept)\n0.0109\n0.0143\n0.76\n0.4461\n0.0300\n\n\nTest: Star_r\n-0.0184\n0.0330\n-0.56\n0.5771\n0.0245\n\n\nTest: S20_r\n0.0074\n0.0318\n0.23\n0.8172\n0.0000\n\n\nTest: SLJ\n0.0252\n0.0317\n0.80\n0.4266\n0.0000\n\n\nTest: BMT\n-0.0378\n0.0317\n-1.19\n0.2334\n0.0000\n\n\na1\n0.1904\n0.0350\n5.44\n&lt;1e-07\n\n\n\nSex: Girls\n-0.3821\n0.0202\n-18.95\n&lt;1e-79\n\n\n\nTest: Star_r & a1\n0.1203\n0.1095\n1.10\n0.2720\n\n\n\nTest: S20_r & a1\n0.0076\n0.1088\n0.07\n0.9443\n\n\n\nTest: SLJ & a1\n-0.1109\n0.1085\n-1.02\n0.3066\n\n\n\nTest: BMT & a1\n0.3599\n0.1084\n3.32\n0.0009\n\n\n\nTest: Star_r & Sex: Girls\n0.3035\n0.0639\n4.75\n&lt;1e-05\n\n\n\nTest: S20_r & Sex: Girls\n-0.0646\n0.0636\n-1.02\n0.3099\n\n\n\nTest: SLJ & Sex: Girls\n-0.0928\n0.0635\n-1.46\n0.1437\n\n\n\nTest: BMT & Sex: Girls\n-0.2811\n0.0635\n-4.43\n&lt;1e-05\n\n\n\na1 & Sex: Girls\n-0.0300\n0.0689\n-0.44\n0.6633\n\n\n\nTest: Star_r & a1 & Sex: Girls\n0.1896\n0.2187\n0.87\n0.3859\n\n\n\nTest: S20_r & a1 & Sex: Girls\n-0.0571\n0.2176\n-0.26\n0.7929\n\n\n\nTest: SLJ & a1 & Sex: Girls\n-0.2533\n0.2170\n-1.17\n0.2430\n\n\n\nTest: BMT & a1 & Sex: Girls\n0.2670\n0.2167\n1.23\n0.2180\n\n\n\nResidual\n0.9675\n\n\n\n\n\n\n\n\n\n\nissingular(m_zcpCohort)\n\ntrue\n\n\nThis zcpLMM is also singular. Three of the five VCs are estimated as zero. This raises the possibility that LMM m_oviCohort might fit as well as LMM m_zcpCohort.\n\nm_oviCohort = let\n  f = @formula zScore ~ 1 + Test * a1 * Sex + (1 | Cohort)\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Cohort\n\n\n(Intercept)\n0.0109\n0.0143\n0.76\n0.4459\n0.0300\n\n\nTest: Star_r\n-0.0174\n0.0320\n-0.54\n0.5871\n\n\n\nTest: S20_r\n0.0074\n0.0318\n0.23\n0.8172\n\n\n\nTest: SLJ\n0.0252\n0.0317\n0.80\n0.4264\n\n\n\nTest: BMT\n-0.0378\n0.0317\n-1.19\n0.2333\n\n\n\na1\n0.1904\n0.0350\n5.44\n&lt;1e-07\n\n\n\nSex: Girls\n-0.3821\n0.0202\n-18.95\n&lt;1e-79\n\n\n\nTest: Star_r & a1\n0.1254\n0.1093\n1.15\n0.2515\n\n\n\nTest: S20_r & a1\n0.0076\n0.1088\n0.07\n0.9444\n\n\n\nTest: SLJ & a1\n-0.1109\n0.1085\n-1.02\n0.3065\n\n\n\nTest: BMT & a1\n0.3599\n0.1084\n3.32\n0.0009\n\n\n\nTest: Star_r & Sex: Girls\n0.3039\n0.0639\n4.75\n&lt;1e-05\n\n\n\nTest: S20_r & Sex: Girls\n-0.0646\n0.0636\n-1.02\n0.3099\n\n\n\nTest: SLJ & Sex: Girls\n-0.0928\n0.0635\n-1.46\n0.1438\n\n\n\nTest: BMT & Sex: Girls\n-0.2811\n0.0635\n-4.43\n&lt;1e-05\n\n\n\na1 & Sex: Girls\n-0.0300\n0.0689\n-0.43\n0.6636\n\n\n\nTest: Star_r & a1 & Sex: Girls\n0.1894\n0.2187\n0.87\n0.3864\n\n\n\nTest: S20_r & a1 & Sex: Girls\n-0.0571\n0.2176\n-0.26\n0.7930\n\n\n\nTest: SLJ & a1 & Sex: Girls\n-0.2534\n0.2170\n-1.17\n0.2430\n\n\n\nTest: BMT & a1 & Sex: Girls\n0.2669\n0.2167\n1.23\n0.2180\n\n\n\nResidual\n0.9675\n\n\n\n\n\n\n\n\n\n\nissingular(m_oviCohort)\n\nfalse\n\n\nThis solves the problem with singularity, but does LMM m_zcpCohort fit noise relative to the LMM m_oviCohort?\n\nMixedModels.likelihoodratiotest(m_oviCohort, m_zcpCohort)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + (1 | Cohort)\n22\n26674\n\n\n\n\n\nzScore ~ 1 + Test + a1 + Sex + Test & a1 + Test & Sex + a1 & Sex + Test & a1 & Sex + zerocorr(1 + Test | Cohort)\n26\n26674\n0\n4\n0.9997\n\n\n\n\n\n\ngof_summary2 = let\n  mods = [m_oviCohort, m_zcpCohort, m_cpxCohort]\n  DataFrame(;\n    dof=dof.(mods),\n    deviance=deviance.(mods),\n    AIC=aic.(mods),\n    AICc=aicc.(mods),\n    BIC=bic.(mods),\n  )\nend\n\n3√ó5 DataFrame\n\n\n\nRow\ndof\ndeviance\nAIC\nAICc\nBIC\n\n\n\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n22\n26674.0\n26718.0\n26718.1\n26875.8\n\n\n2\n26\n26674.0\n26726.0\n26726.1\n26912.4\n\n\n3\n36\n26669.6\n26741.6\n26741.9\n26999.8\n\n\n\n\n\n\nIndeed, adding VCs is fitting noise. Again, the goodness of fit statistics unanimously favor the selection of the LMM m_oviCohort.\nNot shown here, but the Cohort-related VCs for the Test contrasts could be estimated reliably for the full data. Thus, the small number of cohorts does not necessarily prevent the determination of reliable differences between tests across cohorts. What if we include VCs and CPs related to random factors Child and School?"
  },
  {
    "objectID": "fggk21.html#fitting-the-published-lmm-m1-to-the-reduced-data",
    "href": "fggk21.html#fitting-the-published-lmm-m1-to-the-reduced-data",
    "title": "Basics with Emotikon Project",
    "section": "4.6 Fitting the published LMM m1 to the reduced data",
    "text": "4.6 Fitting the published LMM m1 to the reduced data\n\n\n\n\n\n\nWarning\n\n\n\nThe following LMMs m1, m2, etc. take a bit longer (e.g., close to 6 minutes in the Pluto notebook, close to 3 minutes in the REPL on a MacBook Pro).\n\n\nLMM m1 reported in F√ºhner et al. (2021) included random factors for School, Child, and Cohort. The RES for School was specified like in LMM m_cpx. The RES for Child included VCs and CPs for Test, but not for linear developmental gain in the ninth year of life a1 or Sex; they are between-Child effects.\nThe RES for Cohort included only VCs, no CPs for Test. The parsimony was due to the small number of nine levels for this grouping factor.\nHere we fit this LMM m1 for the reduced data. For a different subset of similar size on MacBook Pro [13 | 15 | 16] this took [303 | 250 | 244 ] s; for LMM m1a (i.e., dropping 1 school-relate VC for Sex), times are [212 | 165 | 160] s. The corresponding lme4 times for LMM m1 are [397 | 348 | 195].\nFinally, times for fitting the full set of data ‚Äìnot in this script‚Äì, for LMM m1are [60 | 62 | 85] minutes (!); for LMM m1a the times were [46 | 48 | 34] minutes. It was not possible to fit the full set of data with lme4; after about 13 to 18 minutes the program stopped with: Error in eval_f(x, ...) : Downdated VtV is not positive definite.\n\nm1 = let\n  f = @formula(\n    zScore ~\n      1 +\n      Test * a1 * Sex +\n      (1 + Test + a1 + Sex | School) +\n      (1 + Test | Child) +\n      zerocorr(1 + Test | Cohort)\n  )\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\nœÉ_School\nœÉ_Cohort\n\n\n(Intercept)\n0.0005\n0.0198\n0.02\n0.9812\n0.5970\n0.2027\n0.0201\n\n\nTest: Star_r\n-0.0213\n0.0390\n-0.55\n0.5848\n0.6294\n0.3872\n0.0685\n\n\nTest: S20_r\n0.0191\n0.0323\n0.59\n0.5546\n0.6145\n0.3234\n0.0409\n\n\nTest: SLJ\n0.0162\n0.0260\n0.62\n0.5339\n0.5072\n0.2500\n0.0087\n\n\nTest: BMT\n-0.0187\n0.0309\n-0.60\n0.5453\n0.6832\n0.2900\n0.0314\n\n\na1\n0.1805\n0.0543\n3.32\n0.0009\n\n0.1664\n\n\n\nSex: Girls\n-0.3743\n0.0329\n-11.38\n&lt;1e-29\n\n0.2132\n\n\n\nTest: Star_r & a1\n0.1201\n0.0858\n1.40\n0.1614\n\n\n\n\n\nTest: S20_r & a1\n0.0061\n0.0832\n0.07\n0.9416\n\n\n\n\n\nTest: SLJ & a1\n-0.1207\n0.0767\n-1.58\n0.1152\n\n\n\n\n\nTest: BMT & a1\n0.3397\n0.0855\n3.97\n&lt;1e-04\n\n\n\n\n\nTest: Star_r & Sex: Girls\n0.3113\n0.0494\n6.30\n&lt;1e-09\n\n\n\n\n\nTest: S20_r & Sex: Girls\n-0.0634\n0.0482\n-1.31\n0.1890\n\n\n\n\n\nTest: SLJ & Sex: Girls\n-0.0892\n0.0447\n-1.99\n0.0463\n\n\n\n\n\nTest: BMT & Sex: Girls\n-0.2890\n0.0498\n-5.81\n&lt;1e-08\n\n\n\n\n\na1 & Sex: Girls\n0.0233\n0.1066\n0.22\n0.8269\n\n\n\n\n\nTest: Star_r & a1 & Sex: Girls\n0.0481\n0.1700\n0.28\n0.7771\n\n\n\n\n\nTest: S20_r & a1 & Sex: Girls\n-0.0716\n0.1656\n-0.43\n0.6656\n\n\n\n\n\nTest: SLJ & a1 & Sex: Girls\n-0.2182\n0.1535\n-1.42\n0.1551\n\n\n\n\n\nTest: BMT & a1 & Sex: Girls\n0.2560\n0.1705\n1.50\n0.1332\n\n\n\n\n\nResidual\n0.5571\n\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\n\nChild\n(Intercept)\n0.35644885\n0.59703337\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.39612586\n0.62938531\n+0.05\n\n\n\n\n\n\n\n\nTest: S20_r\n0.37756491\n0.61446311\n+0.12\n-0.49\n\n\n\n\n\n\n\nTest: SLJ\n0.25728424\n0.50723194\n+0.05\n-0.03\n-0.40\n\n\n\n\n\n\nTest: BMT\n0.46677019\n0.68320582\n-0.32\n+0.18\n-0.18\n-0.28\n\n\n\n\nSchool\n(Intercept)\n0.04110043\n0.20273242\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.14991369\n0.38718689\n+0.16\n\n\n\n\n\n\n\n\nTest: S20_r\n0.10459787\n0.32341594\n-0.20\n-0.48\n\n\n\n\n\n\n\nTest: SLJ\n0.06248324\n0.24996648\n-0.03\n-0.14\n-0.46\n\n\n\n\n\n\nTest: BMT\n0.08411646\n0.29002838\n-0.14\n-0.09\n-0.11\n-0.28\n\n\n\n\n\na1\n0.02768556\n0.16638977\n+0.81\n-0.08\n+0.39\n-0.19\n-0.19\n\n\n\n\nSex: Girls\n0.04546967\n0.21323618\n-0.97\n-0.18\n+0.09\n+0.23\n+0.18\n-0.81\n\n\nCohort\n(Intercept)\n0.00040498\n0.02012402\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.00469387\n0.06851184\n.\n\n\n\n\n\n\n\n\nTest: S20_r\n0.00167556\n0.04093366\n.\n.\n\n\n\n\n\n\n\nTest: SLJ\n0.00007562\n0.00869623\n.\n.\n.\n\n\n\n\n\n\nTest: BMT\n0.00098305\n0.03135366\n.\n.\n.\n.\n\n\n\n\nResidual\n\n0.31041033\n0.55714480\n\n\n\n\n\n\n\n\n\n\n\n\nissingular(m1)\n\ntrue\n\n\nDepending on the random number for stratified samplign, LMM m1 may or may not be supported by the data.\nWe also fit an alternative parameterization, estimating VCs and CPs for Test scores rather than Test effects by replacing the 1 + ... in the RE terms with 0 + ....\n\nm2 = let\n  f = @formula(\n    zScore ~\n      1 +\n      Test * a1 * Sex +\n      (0 + Test + a1 + Sex | School) +\n      (0 + Test | Child) +\n      zerocorr(0 + Test | Cohort)\n  )\n  fit(MixedModel, f, dat; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_Child\nœÉ_School\nœÉ_Cohort\n\n\n(Intercept)\n0.0000\n0.0199\n0.00\n0.9982\n\n\n\n\n\nTest: Star_r\n-0.0223\n0.0424\n-0.53\n0.5991\n0.7374\n0.3453\n0.0681\n\n\nTest: S20_r\n0.0188\n0.0401\n0.47\n0.6391\n0.7823\n0.2832\n0.0449\n\n\nTest: SLJ\n0.0212\n0.0315\n0.67\n0.5003\n0.7924\n0.2497\n0.0289\n\n\nTest: BMT\n-0.0205\n0.0321\n-0.64\n0.5232\n0.7076\n0.2450\n0.0289\n\n\na1\n0.1802\n0.0542\n3.32\n0.0009\n\n0.1653\n\n\n\nSex: Girls\n-0.3743\n0.0329\n-11.38\n&lt;1e-29\n\n0.2131\n\n\n\nTest: Star_r & a1\n0.1185\n0.0861\n1.38\n0.1687\n\n\n\n\n\nTest: S20_r & a1\n0.0112\n0.0839\n0.13\n0.8943\n\n\n\n\n\nTest: SLJ & a1\n-0.1095\n0.0774\n-1.41\n0.1571\n\n\n\n\n\nTest: BMT & a1\n0.3384\n0.0857\n3.95\n&lt;1e-04\n\n\n\n\n\nTest: Star_r & Sex: Girls\n0.3117\n0.0494\n6.31\n&lt;1e-09\n\n\n\n\n\nTest: S20_r & Sex: Girls\n-0.0653\n0.0482\n-1.35\n0.1757\n\n\n\n\n\nTest: SLJ & Sex: Girls\n-0.0864\n0.0447\n-1.93\n0.0535\n\n\n\n\n\nTest: BMT & Sex: Girls\n-0.2900\n0.0498\n-5.83\n&lt;1e-08\n\n\n\n\n\na1 & Sex: Girls\n0.0237\n0.1066\n0.22\n0.8244\n\n\n\n\n\nTest: Star_r & a1 & Sex: Girls\n0.0510\n0.1699\n0.30\n0.7641\n\n\n\n\n\nTest: S20_r & a1 & Sex: Girls\n-0.0757\n0.1655\n-0.46\n0.6471\n\n\n\n\n\nTest: SLJ & a1 & Sex: Girls\n-0.2174\n0.1534\n-1.42\n0.1563\n\n\n\n\n\nTest: BMT & a1 & Sex: Girls\n0.2571\n0.1705\n1.51\n0.1315\n\n\n\n\n\nTest: Run\n\n\n\n\n0.7398\n0.3070\n0.0495\n\n\nResidual\n0.5234\n\n\n\n\n\n\n\n\n\n\n\n\nissingular(m2)\n\ntrue\n\n\nDepending on the random number generator seed, the model may or may not be supported in the alternative parameterization of scores. The fixed-effects profile is not affected (see 2.8 below).\n\n\n\n\n\n\nCaution\n\n\n\nRK: The order of RE terms is critical. In formula f2 the zerocorr() term must be placed last as shown. If it is placed first, School-related and Child-related CPs are estimated/reported (?) as zero. This was not the case for formula m1. Thus, it appears to be related to the 0-intercepts in School and Child terms. Need a reprex.\n\n\n\nVarCorr(m2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\n\nChild\nTest: Run\n0.5473778\n0.7398499\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.5438260\n0.7374456\n+0.57\n\n\n\n\n\n\n\n\nTest: S20_r\n0.6119318\n0.7822607\n+0.60\n+0.61\n\n\n\n\n\n\n\nTest: SLJ\n0.6278676\n0.7923810\n+0.61\n+0.62\n+0.74\n\n\n\n\n\n\nTest: BMT\n0.5007014\n0.7076026\n+0.30\n+0.45\n+0.46\n+0.53\n\n\n\n\nSchool\nTest: Run\n0.0942570\n0.3070131\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.1192168\n0.3452779\n+0.29\n\n\n\n\n\n\n\n\nTest: S20_r\n0.0801988\n0.2831940\n+0.24\n+0.47\n\n\n\n\n\n\n\nTest: SLJ\n0.0623402\n0.2496802\n+0.40\n+0.50\n+0.56\n\n\n\n\n\n\nTest: BMT\n0.0600224\n0.2449946\n+0.38\n+0.36\n+0.24\n+0.31\n\n\n\n\n\na1\n0.0273172\n0.1652791\n+0.46\n+0.34\n+0.85\n+0.76\n+0.56\n\n\n\n\nSex: Girls\n0.0454264\n0.2131346\n-0.63\n-0.76\n-0.83\n-0.70\n-0.50\n-0.82\n\n\nCohort\nTest: Run\n0.0024476\n0.0494735\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.0046391\n0.0681112\n.\n\n\n\n\n\n\n\n\nTest: S20_r\n0.0020186\n0.0449292\n.\n.\n\n\n\n\n\n\n\nTest: SLJ\n0.0008329\n0.0288596\n.\n.\n.\n\n\n\n\n\n\nTest: BMT\n0.0008358\n0.0289101\n.\n.\n.\n.\n\n\n\n\nResidual\n\n0.2739100\n0.5233641"
  },
  {
    "objectID": "fggk21.html#principle-component-analysis-of-random-effect-structure-repca",
    "href": "fggk21.html#principle-component-analysis-of-random-effect-structure-repca",
    "title": "Basics with Emotikon Project",
    "section": "4.7 Principle Component Analysis of Random Effect Structure (rePCA)",
    "text": "4.7 Principle Component Analysis of Random Effect Structure (rePCA)\nThe √¨ssingular() command is sort of a shortcut for a quick inspection of the principle components (PCs) of the variance-covariance matrix of the RES. With the MixedModels.PCA() command, we also obtain information about the amount of cumulative variance accounted for as we add PCs.\nThe output also provides PC loadings which may facilitate interpretation of the CP matrices (if estimated). This topic will be picked uo in a separate vignette. See also F√ºhner et al. (2021) for an application."
  },
  {
    "objectID": "fggk21.html#effects-in-res",
    "href": "fggk21.html#effects-in-res",
    "title": "Basics with Emotikon Project",
    "section": "4.8 Effects in RES",
    "text": "4.8 Effects in RES\nFor every random factor, MixedModels.PCA() extracts as many PCs as there are VCs. Therefore, the cumulation of variance across PCs within a random factor will always add up to 100% ‚Äì at the latest with the last VC, but, in the case of overparameterized LMMs, the ceiling will be reached earlier. The final PCs are usually quite small.\nPCs are extracted in the order of the amount of unique variance they account for. The first PC accounts for the largest and the final PC for the least amount of variance. The number the PCs with percent variance above a certain threshold indicates the number of weighted composites needed and reflects the dimensionality of the orthogonal space within which (almost) all the variance can be accounted for. The weights for forming composite scores are the listed loadings. For ease of interpretation it is often useful to change the sign of some composite scores.\nThe PCA for LMM m1 shows that each of the five PCs for Child accounts for a non-zero percent of unique variance.\nFor School fewer than seven PCs have unique variance. The exact number depends on sampling. The overparameterization of School might be resolved when the CPs for Sex are dropped from the LMM.\nCohort was estimated with CPs forced to zero. Therefore, the VCs were forced to be orthogonal; they already represent the PCA solution. However, depending on sampling, not all PCs may be identified for this random factor either.\nImportantly, again depending on sampling, a non-singular fit does not imply that unique variance is associated with all PCs (i.e., not for last PC for School). Embrace uncertainty!\n\nMixedModels.PCA(m1)\n\n(Child = \nPrincipal components based on correlation matrix\n (Intercept)    1.0     .      .      .      .\n Test: Star_r   0.05   1.0     .      .      .\n Test: S20_r    0.12  -0.49   1.0     .      .\n Test: SLJ      0.05  -0.03  -0.4    1.0     .\n Test: BMT     -0.32   0.18  -0.18  -0.28   1.0\n\nNormalized cumulative variances:\n[0.3348, 0.6248, 0.8281, 0.9392, 1.0]\n\nComponent loadings\n                 PC1    PC2    PC3    PC4    PC5\n (Intercept)   -0.23  -0.44   0.68  -0.53  -0.08\n Test: Star_r   0.56  -0.02   0.55   0.42   0.45\n Test: S20_r   -0.68   0.24   0.07   0.09   0.69\n Test: SLJ      0.22  -0.63  -0.47  -0.26   0.52\n Test: BMT      0.36   0.59  -0.01  -0.68   0.23, School = \nPrincipal components based on correlation matrix\n (Intercept)    1.0     .      .      .      .      .      .\n Test: Star_r   0.16   1.0     .      .      .      .      .\n Test: S20_r   -0.2   -0.48   1.0     .      .      .      .\n Test: SLJ     -0.03  -0.14  -0.46   1.0     .      .      .\n Test: BMT     -0.14  -0.09  -0.11  -0.28   1.0     .      .\n a1             0.81  -0.08   0.39  -0.19  -0.19   1.0     .\n Sex: Girls    -0.97  -0.18   0.09   0.23   0.18  -0.81   1.0\n\nNormalized cumulative variances:\n[0.4037, 0.6536, 0.8346, 0.9629, 1.0, 1.0, 1.0]\n\nComponent loadings\n                 PC1    PC2    PC3    PC4    PC5    PC6    PC7\n (Intercept)   -0.56   0.18  -0.01   0.22   0.07  -0.51   0.58\n Test: Star_r  -0.09   0.48   0.43  -0.56  -0.49   0.09   0.13\n Test: S20_r   -0.05  -0.71  -0.12  -0.25  -0.34   0.22   0.5\n Test: SLJ      0.14   0.41  -0.64   0.32  -0.45   0.27   0.17\n Test: BMT      0.14  -0.1    0.62   0.68  -0.32   0.13   0.08\n a1            -0.54  -0.22  -0.12   0.07  -0.49  -0.19  -0.6\n Sex: Girls     0.58  -0.09  -0.07  -0.07  -0.3   -0.74   0.0, Cohort = \nPrincipal components based on correlation matrix\n (Intercept)   1.0  .    .    .    .\n Test: Star_r  0.0  1.0  .    .    .\n Test: S20_r   0.0  0.0  1.0  .    .\n Test: SLJ     0.0  0.0  0.0  1.0  .\n Test: BMT     0.0  0.0  0.0  0.0  1.0\n\nNormalized cumulative variances:\n[0.2, 0.4, 0.6, 0.8, 1.0]\n\nComponent loadings\n                PC1   PC2   PC3   PC4   PC5\n (Intercept)   1.0   0.0   0.0   0.0   0.0\n Test: Star_r  0.0   1.0   0.0   0.0   0.0\n Test: S20_r   0.0   0.0   1.0   0.0   0.0\n Test: SLJ     0.0   0.0   0.0   1.0   0.0\n Test: BMT     0.0   0.0   0.0   0.0   1.0)\n\n\n\n4.8.1 Scores in RES\nNow lets looks at the PCA results for the alternative parameterization of LMM m2. It is important to note that the reparameterization to base estimates of VCs and CPs on scores rather than effects applies only to the Test factor (i.e., the first factor in the formula); VCs for Sex and age refer to the associated effects.\nDepending on sampling, the difference between LMM m1 and LMM m2 may show that overparameterization according to PCs may depend on the specification chosen for the other the random-effect structure.\n\n\n\n\n\n\nNote\n\n\n\nFor the complete data, all PCs had unique variance associated with them.\n\n\n\nMixedModels.PCA(m2)\n\n(Child = \nPrincipal components based on correlation matrix\n Test: Run     1.0    .     .     .     .\n Test: Star_r  0.57  1.0    .     .     .\n Test: S20_r   0.6   0.61  1.0    .     .\n Test: SLJ     0.61  0.62  0.74  1.0    .\n Test: BMT     0.3   0.45  0.46  0.53  1.0\n\nNormalized cumulative variances:\n[0.6442, 0.788, 0.8725, 0.9489, 1.0]\n\nComponent loadings\n                 PC1    PC2    PC3    PC4    PC5\n Test: Run     -0.43   0.52   0.04  -0.73  -0.12\n Test: Star_r  -0.45   0.09  -0.84   0.27   0.06\n Test: S20_r   -0.48   0.1    0.39   0.48  -0.61\n Test: SLJ     -0.49  -0.01   0.38   0.18   0.76\n Test: BMT     -0.37  -0.84  -0.02  -0.36  -0.15, School = \nPrincipal components based on correlation matrix\n Test: Run      1.0     .      .      .      .      .      .\n Test: Star_r   0.29   1.0     .      .      .      .      .\n Test: S20_r    0.24   0.47   1.0     .      .      .      .\n Test: SLJ      0.4    0.5    0.56   1.0     .      .      .\n Test: BMT      0.38   0.36   0.24   0.31   1.0     .      .\n a1             0.46   0.34   0.85   0.76   0.56   1.0     .\n Sex: Girls    -0.63  -0.76  -0.83  -0.7   -0.5   -0.82   1.0\n\nNormalized cumulative variances:\n[0.6069, 0.7375, 0.8431, 0.937, 1.0, 1.0, 1.0]\n\nComponent loadings\n                 PC1    PC2    PC3    PC4    PC5    PC6    PC7\n Test: Run     -0.29   0.58  -0.1    0.68  -0.19  -0.26   0.08\n Test: Star_r  -0.33  -0.05   0.84  -0.07   0.04  -0.33  -0.24\n Test: S20_r   -0.39  -0.49  -0.16  -0.08  -0.46  -0.33   0.49\n Test: SLJ     -0.39  -0.18  -0.1    0.17   0.83   0.0    0.29\n Test: BMT     -0.29   0.61  -0.08  -0.69   0.04  -0.03   0.26\n a1            -0.44  -0.11  -0.46  -0.13  -0.0   -0.15  -0.74\n Sex: Girls     0.47   0.03  -0.16  -0.1    0.23  -0.83  -0.0, Cohort = \nPrincipal components based on correlation matrix\n Test: Run     1.0  .    .    .    .\n Test: Star_r  0.0  1.0  .    .    .\n Test: S20_r   0.0  0.0  1.0  .    .\n Test: SLJ     0.0  0.0  0.0  1.0  .\n Test: BMT     0.0  0.0  0.0  0.0  1.0\n\nNormalized cumulative variances:\n[0.2, 0.4, 0.6, 0.8, 1.0]\n\nComponent loadings\n                PC1   PC2   PC3   PC4   PC5\n Test: Run     1.0   0.0   0.0   0.0   0.0\n Test: Star_r  0.0   1.0   0.0   0.0   0.0\n Test: S20_r   0.0   0.0   1.0   0.0   0.0\n Test: SLJ     0.0   0.0   0.0   1.0   0.0\n Test: BMT     0.0   0.0   0.0   0.0   1.0)"
  },
  {
    "objectID": "fggk21.html#summary-of-results-for-stratified-subset-of-data",
    "href": "fggk21.html#summary-of-results-for-stratified-subset-of-data",
    "title": "Basics with Emotikon Project",
    "section": "4.9 Summary of results for stratified subset of data",
    "text": "4.9 Summary of results for stratified subset of data\nReturning to the theoretical focus of the article, the significant main effects of age and Sex, the interactions between age and c1 and c4 contrasts and the interactions between Sex and three test contrasts (c1, c2, c4) are replicated. Obviously, the subset of data is much noisier than the full set."
  },
  {
    "objectID": "fggk21.html#overall-summary-statistics",
    "href": "fggk21.html#overall-summary-statistics",
    "title": "Basics with Emotikon Project",
    "section": "6.1 Overall summary statistics",
    "text": "6.1 Overall summary statistics\n+ julia&gt; m1.optsum         # MixedModels.OptSummary:  gets all info\n+ julia&gt; loglikelihood(m1) # StatsBase.loglikelihood: return loglikelihood\n                             of the model\n+ julia&gt; deviance(m1)      # StatsBase.deviance: negative twice the log-likelihood\n                             relative to saturated model\n+ julia&gt; objective(m1)     # MixedModels.objective: saturated model not clear:\n                             negative twice the log-likelihood\n+ julia&gt; nobs(m1)          # n of observations; they are not independent\n+ julia&gt; dof(m1)           # n of degrees of freedom is number of model parameters\n+ julia&gt; aic(m1)           # objective(m1) + 2*dof(m1)\n+ julia&gt; bic(m1)           # objective(m1) + dof(m1)*log(nobs(m1))\n\nm1.optsum            # MixedModels.OptSummary:  gets all info\n\n\n\n\n\n\n\n\nInitialization\n\n\n\nInitial parameter vector\n[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n\n\nInitial objective value\n25653.67035388993\n\n\nOptimizer settings\n\n\n\nOptimizer\nLN_BOBYQA\n\n\nBackend\nnlopt\n\n\nLower bounds\n[0.0, -Inf, -Inf, -Inf, -Inf, 0.0, -Inf, -Inf, -Inf, 0.0, -Inf, -Inf, 0.0, -Inf, 0.0, 0.0, -Inf, -Inf, -Inf, -Inf, -Inf, -Inf, 0.0, -Inf, -Inf, -Inf, -Inf, -Inf, 0.0, -Inf, -Inf, -Inf, -Inf, 0.0, -Inf, -Inf, -Inf, 0.0, -Inf, -Inf, 0.0, -Inf, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n\n\nftol_rel\n1.0e-12\n\n\nftol_abs\n1.0e-8\n\n\nxtol_rel\n0.0\n\n\nxtol_abs\n[1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10]\n\n\ninitial_step\n[0.75, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 0.75, 1.0, 0.75, 0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 0.75, 1.0, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]\n\n\nmaxfeval\n-1\n\n\nmaxtime\n-1.0\n\n\nxtol_zero_abs\n0.001\n\n\nftol_zero_abs\n1.0e-5\n\n\nResult\n\n\n\nFunction evaluations\n1214\n\n\nFinal parameter vector\n[1.0716, 0.0525, 0.1277, 0.0465, -0.3953, 1.1284, -0.5466, -0.0275, 0.2442, 0.9493, -0.4498, -0.0649, 0.7897, -0.3966, 1.0613, 0.3639, 0.1142, -0.1161, -0.0138, -0.0729, 0.2405, -0.3719, 0.6855, -0.2656, -0.0624, -0.0354, -0.0653, -0.008, 0.5029, -0.2732, -0.1004, 0.155, -0.052, 0.3501, -0.2743, 0.0451, 0.0583, 0.4232, 0.0318, 0.045, 0.0, 0.0002, 0.0, 0.0361, 0.123, 0.0735, 0.0156, 0.0563]\n\n\nFinal objective value\n24467.6721\n\n\nReturn code\nFTOL_REACHED\n\n\n\n\n\n\nloglikelihood(m1) # StatsBase.loglikelihood: return loglikelihood of the model\n\n-12233.836061904854\n\n\n\ndeviance(m1)      # StatsBase.deviance: negative twice the log-likelihood relative to saturated mode`\n\n24467.67212380971\n\n\n\nobjective(m1)    # MixedModels.objective: saturated model not clear: negative twice the log-likelihood\n\n24467.67212380971\n\n\n\nnobs(m1) # n of observations; they are not independent\n\n9621\n\n\n\nn_, p_, q_, k_ = size(m1)\n\n(9621, 20, 13072, 3)\n\n\n\ndof(m1)  # n of degrees of freedom is number of model parameters\n\n69\n\n\n\ngeom_df = sum(leverage(m1)) # trace of hat / rank of model matrix / geom dof\n\n4991.27828029558\n\n\n\nresid_df = nobs(m1) - geom_df  # eff. residual degrees of freedom\n\n4629.72171970442\n\n\n\naic(m1)  # objective(m1) + 2*dof(m1)\n\n24605.67212380971\n\n\n\nbic(m1)  # objective(m1) + dof(m1)*log(nobs(m1))\n\n25100.519664506635"
  },
  {
    "objectID": "fggk21.html#fixed-effect-statistics",
    "href": "fggk21.html#fixed-effect-statistics",
    "title": "Basics with Emotikon Project",
    "section": "6.2 Fixed-effect statistics",
    "text": "6.2 Fixed-effect statistics\n+ julia&gt; coeftable(m1)     # StatsBase.coeftable: fixed-effects statiscs;\n                             default level=0.95\n+ julia&gt; Arrow.write(\"./data/m_cpx_fe.arrow\", DataFrame(coeftable(m1)));\n+ julia&gt; coef(m1)          # StatsBase.coef - parts of the table\n+ julia&gt; fixef(m1)         # MixedModels.fixef: not the same as coef()\n                             for rank-deficient case\n+ julia&gt; m1.beta           # alternative extractor\n+ julia&gt; fixefnames(m1)    # works also for coefnames(m1)\n+ julia&gt; vcov(m1)          # StatsBase.vcov: var-cov matrix of fixed-effects coef.\n+ julia&gt; stderror(m1)      # StatsBase.stderror: SE for fixed-effects coefficients\n+ julia&gt; propertynames(m1) # names of available extractors\n\ncoeftable(m1) # StatsBase.coeftable: fixed-effects statiscs; default level=0.95\n\n\n\n\n\n\n\n\n\n\n\n\nCoef.\nStd. Error\nz\nPr(&gt;\n\n\n\n\n(Intercept)\n0.000467072\n0.019842\n0.02\n0.9812\n\n\nTest: Star_r\n-0.0213338\n0.0390491\n-0.55\n0.5848\n\n\nTest: S20_r\n0.0190941\n0.0323135\n0.59\n0.5546\n\n\nTest: SLJ\n0.016153\n0.0259649\n0.62\n0.5339\n\n\nTest: BMT\n-0.0186661\n0.0308656\n-0.60\n0.5453\n\n\na1\n0.180451\n0.0542791\n3.32\n0.0009\n\n\nSex: Girls\n-0.374299\n0.0328964\n-11.38\n&lt;1e-29\n\n\nTest: Star_r & a1\n0.120145\n0.0857875\n1.40\n0.1614\n\n\nTest: S20_r & a1\n0.00609408\n0.0831568\n0.07\n0.9416\n\n\nTest: SLJ & a1\n-0.120742\n0.0766592\n-1.58\n0.1152\n\n\nTest: BMT & a1\n0.339746\n0.0855181\n3.97\n&lt;1e-04\n\n\nTest: Star_r & Sex: Girls\n0.311304\n0.0493989\n6.30\n&lt;1e-09\n\n\nTest: S20_r & Sex: Girls\n-0.0633765\n0.0482496\n-1.31\n0.1890\n\n\nTest: SLJ & Sex: Girls\n-0.0891735\n0.0447465\n-1.99\n0.0463\n\n\nTest: BMT & Sex: Girls\n-0.289001\n0.049778\n-5.81\n&lt;1e-08\n\n\na1 & Sex: Girls\n0.0233157\n0.106647\n0.22\n0.8269\n\n\nTest: Star_r & a1 & Sex: Girls\n0.0481238\n0.169995\n0.28\n0.7771\n\n\nTest: S20_r & a1 & Sex: Girls\n-0.0715751\n0.165604\n-0.43\n0.6656\n\n\nTest: SLJ & a1 & Sex: Girls\n-0.218191\n0.153476\n-1.42\n0.1551\n\n\nTest: BMT & a1 & Sex: Girls\n0.256017\n0.170516\n1.50\n0.1332\n\n\n\n\n\n\n#Arrow.write(\"./data/m_cpx_fe.arrow\", DataFrame(coeftable(m1)));\n\n\ncoef(m1)              # StatsBase.coef; parts of the table\n\n20-element Vector{Float64}:\n  0.0004670723892130331\n -0.021333802239089303\n  0.019094056227210526\n  0.016152964782558395\n -0.018666074381647135\n  0.18045084170205147\n -0.3742992360212075\n  0.1201452525790853\n  0.006094084227405034\n -0.12074235077826267\n  0.3397458957216605\n  0.31130352159144414\n -0.06337653060857683\n -0.0891735029697018\n -0.2890005277255869\n  0.02331569400180366\n  0.04812383273625013\n -0.07157512338941173\n -0.2181914105423559\n  0.25601673304523814\n\n\n\nfixef(m1)    # MixedModels.fixef: not the same as coef() for rank-deficient case\n\n20-element Vector{Float64}:\n  0.0004670723892130331\n -0.021333802239089303\n  0.019094056227210526\n  0.016152964782558395\n -0.018666074381647135\n  0.18045084170205147\n -0.3742992360212075\n  0.1201452525790853\n  0.006094084227405034\n -0.12074235077826267\n  0.3397458957216605\n  0.31130352159144414\n -0.06337653060857683\n -0.0891735029697018\n -0.2890005277255869\n  0.02331569400180366\n  0.04812383273625013\n -0.07157512338941173\n -0.2181914105423559\n  0.25601673304523814\n\n\n\nm1.Œ≤                  # alternative extractor\n\n20-element Vector{Float64}:\n  0.0004670723892130331\n -0.021333802239089303\n  0.019094056227210526\n  0.016152964782558395\n -0.018666074381647135\n  0.18045084170205147\n -0.3742992360212075\n  0.1201452525790853\n  0.006094084227405034\n -0.12074235077826267\n  0.3397458957216605\n  0.31130352159144414\n -0.06337653060857683\n -0.0891735029697018\n -0.2890005277255869\n  0.02331569400180366\n  0.04812383273625013\n -0.07157512338941173\n -0.2181914105423559\n  0.25601673304523814\n\n\n\nfixefnames(m1)        # works also for coefnames(m1)\n\n20-element Vector{String}:\n \"(Intercept)\"\n \"Test: Star_r\"\n \"Test: S20_r\"\n \"Test: SLJ\"\n \"Test: BMT\"\n \"a1\"\n \"Sex: Girls\"\n \"Test: Star_r & a1\"\n \"Test: S20_r & a1\"\n \"Test: SLJ & a1\"\n \"Test: BMT & a1\"\n \"Test: Star_r & Sex: Girls\"\n \"Test: S20_r & Sex: Girls\"\n \"Test: SLJ & Sex: Girls\"\n \"Test: BMT & Sex: Girls\"\n \"a1 & Sex: Girls\"\n \"Test: Star_r & a1 & Sex: Girls\"\n \"Test: S20_r & a1 & Sex: Girls\"\n \"Test: SLJ & a1 & Sex: Girls\"\n \"Test: BMT & a1 & Sex: Girls\"\n\n\n\nvcov(m1)   # StatsBase.vcov: var-cov matrix of fixed-effects coefficients\n\n20√ó20 Matrix{Float64}:\n  0.000393707   4.46417e-5   -1.51329e-5   ‚Ä¶  -4.12575e-6   -1.85049e-5\n  4.46417e-5    0.00152483   -0.000453855     -1.95037e-6    7.35562e-6\n -1.51329e-5   -0.000453855   0.00104416      -5.9442e-5    -1.07845e-5\n  4.63807e-6   -4.25138e-5   -0.000347555      0.000108161  -4.50754e-5\n -9.40779e-5    1.59636e-5   -7.0498e-5       -4.4736e-5     0.000144063\n -7.23932e-5   -2.70869e-5    5.45815e-5   ‚Ä¶   4.26762e-5   -1.4443e-5\n -0.000146008  -4.4128e-5     1.72354e-5      -3.62901e-5    0.000180553\n -1.17468e-5   -0.0004036     0.000200276     -6.21663e-6    3.32436e-5\n -1.0142e-6     0.00019951   -0.000380391     -0.000334581  -4.06917e-5\n -9.74452e-6    6.11636e-6    0.000160746      0.000562647  -0.000208968\n  4.42201e-5   -2.57745e-5    2.95495e-5   ‚Ä¶  -0.000208589   0.000564777\n -7.12505e-6   -3.05662e-5    2.04263e-5       2.30277e-5   -0.000103513\n  3.03796e-6    2.04242e-5   -3.07055e-5       0.000655805   0.000123664\n  4.76103e-6    8.62204e-7    8.65201e-6      -0.00132595    0.000614772\n  5.90607e-6   -4.71239e-7    2.01646e-6       0.000616036  -0.00169325\n  6.03406e-5    1.31917e-5   -6.25723e-6   ‚Ä¶   0.000357881  -0.00338117\n  1.15537e-5    0.000165273  -9.46645e-5      -0.000389788   0.00187178\n -2.12902e-6   -9.46494e-5    0.000161572     -0.0118658    -0.00206638\n -4.12575e-6   -1.95037e-6   -5.9442e-5        0.023555     -0.0107441\n -1.85049e-5    7.35562e-6   -1.07845e-5      -0.0107441     0.0290757\n\n\n\nvcov(m1; corr=true) # StatsBase.vcov: correlation matrix of fixed-effects coefficients\n\n20√ó20 Matrix{Float64}:\n  1.0           0.057616     -0.0236022   ‚Ä¶  -0.0013548    -0.00546934\n  0.057616      1.0          -0.359685       -0.000325435   0.0011047\n -0.0236022    -0.359685      1.0            -0.0119858    -0.00195728\n  0.00900253   -0.0419308    -0.414241        0.027142     -0.0101809\n -0.153612      0.0132447    -0.0706834      -0.00944366    0.0273724\n -0.067217     -0.0127796     0.0311193   ‚Ä¶   0.00512285   -0.00156049\n -0.223688     -0.0343523     0.016214       -0.00718784    0.0321879\n -0.00690098   -0.12048       0.0722471      -0.000472161   0.00227258\n -0.000614664   0.0614408    -0.141563       -0.0262157    -0.00286974\n -0.00640633    0.00204323    0.0648922       0.0478222    -0.0159864\n  0.0260601    -0.00771831    0.0106932   ‚Ä¶  -0.0158925     0.0387306\n -0.00726916   -0.0158458     0.0127964       0.00303733   -0.0122889\n  0.00317323    0.0108403    -0.0196942       0.0885603     0.0150308\n  0.00536235    0.000493447   0.00598376     -0.193076      0.0805731\n  0.00597964   -0.000242434   0.00125362      0.0806356    -0.199489\n  0.0285151     0.00316769   -0.00181572  ‚Ä¶   0.021865     -0.185931\n  0.00342529    0.0248975    -0.0172333      -0.01494       0.0645733\n -0.000647921  -0.0146365     0.0301934      -0.466859     -0.0731769\n -0.0013548    -0.000325435  -0.0119858       1.0          -0.410549\n -0.00546934    0.0011047    -0.00195728     -0.410549      1.0\n\n\n\nstderror(m1)       # StatsBase.stderror: SE for fixed-effects coefficients\n\n20-element Vector{Float64}:\n 0.0198420454909161\n 0.039049061480778455\n 0.03231349939561272\n 0.025964866732486276\n 0.03086564740374968\n 0.05427906333351011\n 0.032896359433475984\n 0.08578747123451703\n 0.08315680609153173\n 0.07665922767854766\n 0.08551805503537704\n 0.04939887549882396\n 0.04824962589848215\n 0.04474646604398148\n 0.049778004681580224\n 0.10664691443515188\n 0.16999484488405148\n 0.16560376236789542\n 0.15347641129495596\n 0.17051607373002423\n\n\n\npropertynames(m1)  # names of available extractors\n\n(:formula, :reterms, :Xymat, :feterm, :sqrtwts, :parmap, :dims, :A, :L, :optsum, :Œ∏, :theta, :Œ≤, :beta, :Œ≤s, :betas, :Œª, :lambda, :stderror, :œÉ, :sigma, :œÉs, :sigmas, :œÉœÅs, :sigmarhos, :b, :u, :lowerbd, :X, :y, :corr, :vcov, :PCA, :rePCA, :objective, :pvalues)"
  },
  {
    "objectID": "fggk21.html#covariance-parameter-estimates",
    "href": "fggk21.html#covariance-parameter-estimates",
    "title": "Basics with Emotikon Project",
    "section": "6.3 Covariance parameter estimates",
    "text": "6.3 Covariance parameter estimates\nThese commands inform us about the model parameters associated with the RES.\n+ julia&gt; issingular(m1)        # Test singularity for param. vector m1.theta\n+ julia&gt; VarCorr(m1)           # MixedModels.VarCorr: est. of RES\n+ julia&gt; propertynames(m1)\n+ julia&gt; m1.œÉ                  # residual; or: m1.sigma\n+ julia&gt; m1.œÉs                 # VCs; m1.sigmas\n+ julia&gt; m1.Œ∏                  # Parameter vector for RES (w/o residual); m1.theta\n+ julia&gt; MixedModels.sdest(m1) #  prsqrt(MixedModels.varest(m1))\n+ julia&gt; BlockDescription(m1)  #  Description of blocks of A and L in an LMM\n\nissingular(m1) # Test if model is singular for parameter vector m1.theta (default)\n\ntrue\n\n\n\nissingular(m2)\n\ntrue\n\n\n\nVarCorr(m1) # MixedModels.VarCorr: estimates of random-effect structure (RES)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\n\nChild\n(Intercept)\n0.35644885\n0.59703337\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.39612586\n0.62938531\n+0.05\n\n\n\n\n\n\n\n\nTest: S20_r\n0.37756491\n0.61446311\n+0.12\n-0.49\n\n\n\n\n\n\n\nTest: SLJ\n0.25728424\n0.50723194\n+0.05\n-0.03\n-0.40\n\n\n\n\n\n\nTest: BMT\n0.46677019\n0.68320582\n-0.32\n+0.18\n-0.18\n-0.28\n\n\n\n\nSchool\n(Intercept)\n0.04110043\n0.20273242\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.14991369\n0.38718689\n+0.16\n\n\n\n\n\n\n\n\nTest: S20_r\n0.10459787\n0.32341594\n-0.20\n-0.48\n\n\n\n\n\n\n\nTest: SLJ\n0.06248324\n0.24996648\n-0.03\n-0.14\n-0.46\n\n\n\n\n\n\nTest: BMT\n0.08411646\n0.29002838\n-0.14\n-0.09\n-0.11\n-0.28\n\n\n\n\n\na1\n0.02768556\n0.16638977\n+0.81\n-0.08\n+0.39\n-0.19\n-0.19\n\n\n\n\nSex: Girls\n0.04546967\n0.21323618\n-0.97\n-0.18\n+0.09\n+0.23\n+0.18\n-0.81\n\n\nCohort\n(Intercept)\n0.00040498\n0.02012402\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.00469387\n0.06851184\n.\n\n\n\n\n\n\n\n\nTest: S20_r\n0.00167556\n0.04093366\n.\n.\n\n\n\n\n\n\n\nTest: SLJ\n0.00007562\n0.00869623\n.\n.\n.\n\n\n\n\n\n\nTest: BMT\n0.00098305\n0.03135366\n.\n.\n.\n.\n\n\n\n\nResidual\n\n0.31041033\n0.55714480\n\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\n\nChild\nTest: Run\n0.5473778\n0.7398499\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.5438260\n0.7374456\n+0.57\n\n\n\n\n\n\n\n\nTest: S20_r\n0.6119318\n0.7822607\n+0.60\n+0.61\n\n\n\n\n\n\n\nTest: SLJ\n0.6278676\n0.7923810\n+0.61\n+0.62\n+0.74\n\n\n\n\n\n\nTest: BMT\n0.5007014\n0.7076026\n+0.30\n+0.45\n+0.46\n+0.53\n\n\n\n\nSchool\nTest: Run\n0.0942570\n0.3070131\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.1192168\n0.3452779\n+0.29\n\n\n\n\n\n\n\n\nTest: S20_r\n0.0801988\n0.2831940\n+0.24\n+0.47\n\n\n\n\n\n\n\nTest: SLJ\n0.0623402\n0.2496802\n+0.40\n+0.50\n+0.56\n\n\n\n\n\n\nTest: BMT\n0.0600224\n0.2449946\n+0.38\n+0.36\n+0.24\n+0.31\n\n\n\n\n\na1\n0.0273172\n0.1652791\n+0.46\n+0.34\n+0.85\n+0.76\n+0.56\n\n\n\n\nSex: Girls\n0.0454264\n0.2131346\n-0.63\n-0.76\n-0.83\n-0.70\n-0.50\n-0.82\n\n\nCohort\nTest: Run\n0.0024476\n0.0494735\n\n\n\n\n\n\n\n\n\nTest: Star_r\n0.0046391\n0.0681112\n.\n\n\n\n\n\n\n\n\nTest: S20_r\n0.0020186\n0.0449292\n.\n.\n\n\n\n\n\n\n\nTest: SLJ\n0.0008329\n0.0288596\n.\n.\n.\n\n\n\n\n\n\nTest: BMT\n0.0008358\n0.0289101\n.\n.\n.\n.\n\n\n\n\nResidual\n\n0.2739100\n0.5233641\n\n\n\n\n\n\n\n\n\n\n\n\nm1.œÉs      # VCs; m1.sigmas\n\n(Child = (var\"(Intercept)\" = 0.5970333742988695, var\"Test: Star_r\" = 0.6293853060758717, var\"Test: S20_r\" = 0.6144631074805543, var\"Test: SLJ\" = 0.5072319420683844, var\"Test: BMT\" = 0.6832058209082789), School = (var\"(Intercept)\" = 0.20273242120000007, var\"Test: Star_r\" = 0.38718689475207274, var\"Test: S20_r\" = 0.3234159378665591, var\"Test: SLJ\" = 0.24996648354257367, var\"Test: BMT\" = 0.29002838282311016, a1 = 0.16638977398250243, var\"Sex: Girls\" = 0.21323617536194978), Cohort = (var\"(Intercept)\" = 0.02012401628576114, var\"Test: Star_r\" = 0.06851183953424704, var\"Test: S20_r\" = 0.04093366225223904, var\"Test: SLJ\" = 0.008696232573581956, var\"Test: BMT\" = 0.03135366337476736))\n\n\n\nm1.Œ∏       # Parameter vector for RES (w/o residual); m1.theta\n\n48-element Vector{Float64}:\n  1.071594619153003\n  0.05250595430880366\n  0.12767549005897527\n  0.04648373001688595\n -0.39533232957558384\n  1.1284411050427687\n -0.5466255654697172\n -0.02750677819623261\n  0.2441891497801566\n  0.9493370154393599\n  ‚ãÆ\n  0.045022375468869794\n  0.0\n  0.0002459832402487232\n  0.0\n  0.03611990300021972\n  0.12296953864495568\n  0.07347041907537934\n  0.015608568019664126\n  0.05627560938714999\n\n\n\nBlockDescription(m1) #  Description of blocks of A and L in a LinearMixedModel\n\n\n\n\nrows\nChild\nSchool\nCohort\nfixed\n\n\n9905\nBlkDiag\n\n\n\n\n\n3122\nSparse\nBlkDiag\n\n\n\n\n45\nDense\nDense\nBlkDiag/Dense\n\n\n\n21\nDense\nDense\nDense\nDense\n\n\n\n\n\n\nm2.Œ∏\n\n48-element Vector{Float64}:\n  1.4136426655407388\n  0.806489474952303\n  0.8928617305735013\n  0.92969329059766\n  0.4036881168827272\n  1.1554190840458038\n  0.49762271985534146\n  0.4893256254928638\n  0.4584332896455281\n  1.090518670616228\n  ‚ãÆ\n -0.03795068651069014\n  0.0\n -0.00022203581359845476\n  0.0\n  0.09452980247808336\n  0.1301411983321199\n  0.08584700784463564\n  0.05514241323812233\n  0.055238912536445264\n\n\n\nBlockDescription(m2)\n\n\n\n\nrows\nChild\nSchool\nCohort\nfixed\n\n\n9905\nBlkDiag\n\n\n\n\n\n3122\nSparse\nBlkDiag\n\n\n\n\n45\nDense\nDense\nBlkDiag/Dense\n\n\n\n21\nDense\nDense\nDense\nDense"
  },
  {
    "objectID": "fggk21.html#model-predictions",
    "href": "fggk21.html#model-predictions",
    "title": "Basics with Emotikon Project",
    "section": "6.4 Model ‚Äúpredictions‚Äù",
    "text": "6.4 Model ‚Äúpredictions‚Äù\nThese commands inform us about extracion of conditional modes/means and (co-)variances, that using the model parameters to improve the predictions for units (levels) of the grouping (random) factors. We need this information, e.g., for partial-effect response profiles (e.g., facet plot) or effect profiles (e.g., caterpillar plot), or visualizing the borrowing-strength effect for correlation parameters (e.g., shrinkage plots). We are using the fit of LMM m2.\njulia&gt; condVar(m2)\nSome plotting functions are currently available from the MixedModelsMakie package or via custom functions.\n+ julia&gt; caterpillar!(m2)\n+ julia&gt; shrinkage!(m2)\n\n6.4.1 Conditional covariances\n\ncondVar(m1)\n\n3-element Vector{Array{Float64, 3}}:\n [0.07637623596216048 0.006241407360480224 ‚Ä¶ 0.0023973867683012937 -0.01976143440499707; 0.006241407360480224 0.25044089543126574 ‚Ä¶ -0.006524061383082141 0.029954629867289924; ‚Ä¶ ; 0.0023973867683012937 -0.006524061383082141 ‚Ä¶ 0.1844355645358918 -0.07663005839715625; -0.01976143440499707 0.029954629867289924 ‚Ä¶ -0.07663005839715625 0.2531175459613838;;; 0.05411311121790054 0.0038686221729095182 ‚Ä¶ 0.003462416986408414 -0.01177278054195299; 0.0038686221729095182 0.2479712682979557 ‚Ä¶ -0.006277208078985418 0.030373146877724702; ‚Ä¶ ; 0.003462416986408414 -0.006277208078985418 ‚Ä¶ 0.18400790411635726 -0.0767094163196225; -0.01177278054195299 0.030373146877724702 ‚Ä¶ -0.0767094163196225 0.24920252872218962;;; 0.07752659686414914 0.006535311805486493 ‚Ä¶ 0.002349490058189243 -0.02026116375438254; 0.006535311805486493 0.25140824088295605 ‚Ä¶ -0.006616642706471912 0.029955989422848592; ‚Ä¶ ; 0.002349490058189243 -0.006616642706471912 ‚Ä¶ 0.18465302448566856 -0.07660030601919139; -0.02026116375438254 0.029955989422848592 ‚Ä¶ -0.07660030601919139 0.25386532369039433;;; ‚Ä¶ ;;; 0.0685626341452695 0.0031935123621303543 ‚Ä¶ 0.0029814891929243153 -0.01741139003606812; 0.0031935123621303543 0.2511031992556448 ‚Ä¶ -0.006709774049797612 0.030735076354719244; ‚Ä¶ ; 0.0029814891929243153 -0.006709774049797612 ‚Ä¶ 0.18471540020029856 -0.07671326008070771; -0.01741139003606812 0.030735076354719244 ‚Ä¶ -0.07671326008070771 0.25302488904905684;;; 0.08680590800596592 0.0028343812430930114 ‚Ä¶ -0.026298415033131375 -0.028182465048338132; 0.0028343812430930114 0.2511499597588315 ‚Ä¶ -0.006056625120683058 0.030961465750594722; ‚Ä¶ ; -0.026298415033131375 -0.006056625120683058 ‚Ä¶ 0.23311118696075017 -0.059198574193460314; -0.028182465048338132 0.030961465750594722 ‚Ä¶ -0.059198574193460314 0.2594363077264869;;; 0.06694893571289103 0.0024221123695643554 ‚Ä¶ 0.0030937467374888426 -0.016747848889387972; 0.0024221123695643554 0.250344972856431 ‚Ä¶ -0.006633999373566436 0.030872833169174524; ‚Ä¶ ; 0.0030937467374888426 -0.006633999373566436 ‚Ä¶ 0.18433102441705754 -0.07675090453801796; -0.016747848889387972 0.030872833169174524 ‚Ä¶ -0.07675090453801796 0.2517866570798174]\n [0.02781370030378842 0.007392631521770867 ‚Ä¶ 0.019040792455318516 -0.028229380620747348; 0.007392631521770867 0.11441166699680101 ‚Ä¶ -0.006182357368286098 -0.00835773818085157; ‚Ä¶ ; 0.019040792455318516 -0.006182357368286098 ‚Ä¶ 0.021157605183506824 -0.02016857873049107; -0.028229380620747348 -0.00835773818085157 ‚Ä¶ -0.02016857873049107 0.030843135294566056;;; 0.02868303514321815 0.007315011900096549 ‚Ä¶ 0.019825304376061743 -0.02913539828414361; 0.007315011900096549 0.11437503049693049 ‚Ä¶ -0.006211571196442391 -0.00828019895193212; ‚Ä¶ ; 0.019825304376061743 -0.006211571196442391 ‚Ä¶ 0.021829624062697367 -0.020983257262480952; -0.02913539828414361 -0.00828019895193212 ‚Ä¶ -0.020983257262480952 0.031787145617697944;;; 0.03895190459288834 0.008336774810494286 ‚Ä¶ 0.027008721437372683 -0.039703433978060684; 0.008336774810494286 0.10289257036467726 ‚Ä¶ -0.004486683330976322 -0.00908820412676877; ‚Ä¶ ; 0.027008721437372683 -0.004486683330976322 ‚Ä¶ 0.026137455222488094 -0.028229883140806367; -0.039703433978060684 -0.00908820412676877 ‚Ä¶ -0.028229883140806367 0.04249696449871521;;; ‚Ä¶ ;;; 0.030601335661895285 0.009644221080281885 ‚Ä¶ 0.02009330626833299 -0.031095263139420543; 0.009644221080281885 0.12979634279600583 ‚Ä¶ -0.006024548704101073 -0.011013688479958506; ‚Ä¶ ; 0.02009330626833299 -0.006024548704101073 ‚Ä¶ 0.022032254483030613 -0.021361235348242705; -0.031095263139420543 -0.011013688479958506 ‚Ä¶ -0.021361235348242705 0.0339479026668747;;; 0.029706135401761022 0.008197773182419276 ‚Ä¶ 0.02014700707349558 -0.03024629050280591; 0.008197773182419276 0.10430425885553803 ‚Ä¶ -0.004676562662899554 -0.008847417142533554; ‚Ä¶ ; 0.02014700707349558 -0.004676562662899554 ‚Ä¶ 0.02095541545818084 -0.021189562402249038; -0.03024629050280591 -0.008847417142533554 ‚Ä¶ -0.021189562402249038 0.03271617911177686;;; 0.029821735425956328 0.00783370972549375 ‚Ä¶ 0.019751087805391487 -0.03029854307974203; 0.00783370972549375 0.1230644751766385 ‚Ä¶ -0.005638880286842799 -0.008849779353887565; ‚Ä¶ ; 0.019751087805391487 -0.005638880286842799 ‚Ä¶ 0.021051843303021487 -0.02082736350368696; -0.03029854307974203 -0.008849779353887565 ‚Ä¶ -0.02082736350368696 0.032829736806490144]\n [0.00035679433950943084 1.1201177063944307e-5 ‚Ä¶ -2.2339372798274556e-7 -1.3264324564480273e-5; 1.1201177063944307e-5 0.0026584206408690413 ‚Ä¶ -1.062421568755267e-5 -3.4306228035510044e-5; ‚Ä¶ ; -2.2339372798274556e-7 -1.062421568755267e-5 ‚Ä¶ 7.425187675096072e-5 -6.366560300512278e-6; -1.3264324564480273e-5 -3.4306228035510044e-5 ‚Ä¶ -6.366560300512278e-6 0.0008440540855781409;;; 0.0003477046509044893 1.2648183437172053e-5 ‚Ä¶ -2.471901692688514e-7 -1.5060807453870266e-5; 1.2648183437172053e-5 0.0024211600732476305 ‚Ä¶ -1.1108030633628336e-5 -3.235124489466996e-5; ‚Ä¶ ; -2.471901692688514e-7 -1.1108030633628336e-5 ‚Ä¶ 7.398537330289522e-5 -7.296092022110772e-6; -1.5060807453870266e-5 -3.235124489466996e-5 ‚Ä¶ -7.296092022110772e-6 0.0008197350778474391;;; 0.00034006641404224074 1.4968897131076909e-5 ‚Ä¶ -2.6732770813031464e-7 -1.6746155315344856e-5; 1.4968897131076909e-5 0.0022250868831148332 ‚Ä¶ -1.1338170946710179e-5 -3.126903081260357e-5; ‚Ä¶ ; -2.6732770813031464e-7 -1.1338170946710179e-5 ‚Ä¶ 7.374366833586933e-5 -8.281193392890097e-6; -1.6746155315344856e-5 -3.126903081260357e-5 ‚Ä¶ -8.281193392890097e-6 0.0007967864838693073;;; 0.00034858891052831864 1.3829864032748155e-5 ‚Ä¶ -2.5909388226352447e-7 -1.5049252080171674e-5; 1.3829864032748155e-5 0.0024232634941742538 ‚Ä¶ -1.1116559684497985e-5 -3.3292712754138614e-5; ‚Ä¶ ; -2.5909388226352447e-7 -1.1116559684497985e-5 ‚Ä¶ 7.399840580722298e-5 -7.3232566631359326e-6; -1.5049252080171674e-5 -3.3292712754138614e-5 ‚Ä¶ -7.3232566631359326e-6 0.0008206706894241955;;; 0.00034100483195313936 1.4809608634081099e-5 ‚Ä¶ -2.9649395767093277e-7 -1.6800047099269826e-5; 1.4809608634081099e-5 0.0022590128685866617 ‚Ä¶ -1.1515422344077047e-5 -3.207264081220814e-5; ‚Ä¶ ; -2.9649395767093277e-7 -1.1515422344077047e-5 ‚Ä¶ 7.37798222592314e-5 -8.10336751922222e-6; -1.6800047099269826e-5 -3.207264081220814e-5 ‚Ä¶ -8.10336751922222e-6 0.0007992494529048708;;; 0.00033896356426489724 1.5178499913220799e-5 ‚Ä¶ -2.832166717029485e-7 -1.6857307528070153e-5; 1.5178499913220799e-5 0.0022193517680776163 ‚Ä¶ -1.1451981718981823e-5 -3.255922784217206e-5; ‚Ä¶ ; -2.832166717029485e-7 -1.1451981718981823e-5 ‚Ä¶ 7.371380733258204e-5 -8.341752943754693e-6; -1.6857307528070153e-5 -3.255922784217206e-5 ‚Ä¶ -8.341752943754693e-6 0.0007941112510247628;;; 0.00033588772750474383 1.3693239908927955e-5 ‚Ä¶ -3.750302492230006e-7 -1.7730838511743876e-5; 1.3693239908927955e-5 0.002163726695107046 ‚Ä¶ -1.1695388232518622e-5 -3.1469152338456756e-5; ‚Ä¶ ; -3.750302492230006e-7 -1.1695388232518622e-5 ‚Ä¶ 7.359156977103077e-5 -8.622618267471169e-6; -1.7730838511743876e-5 -3.1469152338456756e-5 ‚Ä¶ -8.622618267471169e-6 0.0007832411300925984;;; 0.0003289200599218879 1.4247611266532819e-5 ‚Ä¶ -3.3559324655692503e-7 -1.8991589427080174e-5; 1.4247611266532819e-5 0.002041987207141683 ‚Ä¶ -1.159185117116066e-5 -3.0202082849891735e-5; ‚Ä¶ ; -3.3559324655692503e-7 -1.159185117116066e-5 ‚Ä¶ 7.340905137101724e-5 -9.340457334541582e-6; -1.8991589427080174e-5 -3.0202082849891735e-5 ‚Ä¶ -9.340457334541582e-6 0.0007665118071328616;;; 0.0003166489073209147 1.3343030453536153e-5 ‚Ä¶ -4.1019091005425465e-7 -2.1458383086632417e-5; 1.3343030453536153e-5 0.001885719692060897 ‚Ä¶ -1.1509317433963161e-5 -2.760389336421803e-5; ‚Ä¶ ; -4.1019091005425465e-7 -1.1509317433963161e-5 ‚Ä¶ 7.305194464424145e-5 -1.0453924866597237e-5; -2.1458383086632417e-5 -2.760389336421803e-5 ‚Ä¶ -1.0453924866597237e-5 0.000735487201587206]\n\n\n\ncondVar(m2)\n\n3-element Vector{Array{Float64, 3}}:\n [0.18347121688775614 0.05173744414002439 ‚Ä¶ 0.05260371925527129 0.014039993493901852; 0.05173744414002439 0.186302678462757 ‚Ä¶ 0.05193776912555438 0.03660869275267824; ‚Ä¶ ; 0.05260371925527129 0.05193776912555438 ‚Ä¶ 0.1723172505056618 0.041832707406288694; 0.014039993493901852 0.03660869275267824 ‚Ä¶ 0.041832707406288694 0.17840188616256805;;; 0.15979978379014484 0.027203250075659585 ‚Ä¶ 0.02848252887022984 -0.002202608586148471; 0.027203250075659585 0.15750109948702692 ‚Ä¶ 0.025253270258324006 0.01821991213548266; ‚Ä¶ ; 0.02848252887022984 0.025253270258324006 ‚Ä¶ 0.14588951835687977 0.024550715949206183; -0.002202608586148471 0.01821991213548266 ‚Ä¶ 0.024550715949206183 0.16610073070849893;;; 0.18503015815498425 0.05290875265119061 ‚Ä¶ 0.053756915216855536 0.014670490368780174; 0.05290875265119061 0.18845149577202788 ‚Ä¶ 0.053423165770385195 0.03754441320272822; ‚Ä¶ ; 0.053756915216855536 0.053423165770385195 ‚Ä¶ 0.17384642391356717 0.04256014030478666; 0.014670490368780174 0.03754441320272822 ‚Ä¶ 0.04256014030478666 0.17926369250239213;;; ‚Ä¶ ;;; 0.1731713802407055 0.03762623827694346 ‚Ä¶ 0.04431819084377604 0.0083171988355217; 0.03762623827694346 0.1694498081812061 ‚Ä¶ 0.040170597264633935 0.028104555534943187; ‚Ä¶ ; 0.04431819084377604 0.040170597264633935 ‚Ä¶ 0.16781465060720896 0.03921308316796978; 0.0083171988355217 0.028104555534943187 ‚Ä¶ 0.03921308316796978 0.17781965549768575;;; 0.17859453373932244 0.04286627664859201 ‚Ä¶ 0.052552332332152535 0.011514904446570471; 0.04286627664859201 0.17458929233714268 ‚Ä¶ 0.048179101530798636 0.031241580642202543; ‚Ä¶ ; 0.052552332332152535 0.048179101530798636 ‚Ä¶ 0.1804746163616352 0.04403975326511237; 0.011514904446570471 0.031241580642202543 ‚Ä¶ 0.04403975326511237 0.1797499373880305;;; 0.1722518981818894 0.03593935140547411 ‚Ä¶ 0.04285780587836219 0.007490439183161973; 0.03593935140547411 0.1659460369289058 ‚Ä¶ 0.038033207459256764 0.02676695477260505; ‚Ä¶ ; 0.04285780587836219 0.038033207459256764 ‚Ä¶ 0.1654880483766188 0.03808864596205829; 0.007490439183161973 0.02676695477260505 ‚Ä¶ 0.03808864596205829 0.17631182349613958]\n [0.06935896257482851 0.018486690290651475 ‚Ä¶ 0.015648094264290955 -0.02779092390267517; 0.018486690290651475 0.08269720620421575 ‚Ä¶ 0.010534515931000181 -0.035886071266215264; ‚Ä¶ ; 0.015648094264290955 0.010534515931000181 ‚Ä¶ 0.020773327233453594 -0.020296218373725635; -0.02779092390267517 -0.035886071266215264 ‚Ä¶ -0.020296218373725635 0.030798724000207826;;; 0.07011829989008583 0.019175076933906965 ‚Ä¶ 0.016398754068211716 -0.02864830394072758; 0.019175076933906965 0.08328539424186256 ‚Ä¶ 0.0112725186644505 -0.036692970621590756; ‚Ä¶ ; 0.016398754068211716 0.0112725186644505 ‚Ä¶ 0.021435354019100544 -0.02110489623394693; -0.02864830394072758 -0.036692970621590756 ‚Ä¶ -0.02110489623394693 0.031748439390621455;;; 0.07817337607847157 0.03436706632166644 ‚Ä¶ 0.0244761966211191 -0.040348454346705885; 0.03436706632166644 0.09402169726548205 ‚Ä¶ 0.020969418789142106 -0.04918690070119044; ‚Ä¶ ; 0.0244761966211191 0.020969418789142106 ‚Ä¶ 0.025830679745354725 -0.028375646138881855; -0.040348454346705885 -0.04918690070119044 ‚Ä¶ -0.028375646138881855 0.042430928570634366;;; ‚Ä¶ ;;; 0.07750751162980041 0.02123413021902602 ‚Ä¶ 0.016668613473160135 -0.0305737858641261; 0.02123413021902602 0.09557424442639569 ‚Ä¶ 0.011767384299965322 -0.04122716354911311; ‚Ä¶ ; 0.016668613473160135 0.011767384299965322 ‚Ä¶ 0.0216703087493955 -0.021533182584350233; -0.0305737858641261 -0.04122716354911311 ‚Ä¶ -0.021533182584350233 0.03387959725270977;;; 0.06777680795293484 0.0228351262756701 ‚Ä¶ 0.017214020832414977 -0.030144646234097957; 0.0228351262756701 0.08283577617660844 ‚Ä¶ 0.013503054826156472 -0.038692354703424664; ‚Ä¶ ; 0.017214020832414977 0.013503054826156472 ‚Ä¶ 0.020649584237628853 -0.02132970970625593; -0.030144646234097957 -0.038692354703424664 ‚Ä¶ -0.02132970970625593 0.03263288315185464;;; 0.07746969234880287 0.02107883070682651 ‚Ä¶ 0.01685373444311681 -0.03081002979918781; 0.02107883070682651 0.08841230026656159 ‚Ä¶ 0.012316380732904681 -0.03932259223999424; ‚Ä¶ ; 0.01685373444311681 0.012316380732904681 ‚Ä¶ 0.020719754601476497 -0.020977513763678655; -0.03081002979918781 -0.03932259223999424 ‚Ä¶ -0.020977513763678655 0.032750743998785276]\n [0.0016592314424889781 0.00016072206887955367 ‚Ä¶ 6.258220092394e-5 1.0130970220286564e-5; 0.00016072206887955367 0.0023888240213197696 ‚Ä¶ 8.09910625932975e-5 5.432717669980695e-5; ‚Ä¶ ; 6.258220092394e-5 8.09910625932975e-5 ‚Ä¶ 0.0007061107189353745 2.4037832979800496e-5; 1.0130970220286564e-5 5.432717669980695e-5 ‚Ä¶ 2.4037832979800496e-5 0.0007148176673318631;;; 0.001541367115132701 0.0001727862011198795 ‚Ä¶ 7.234762654825182e-5 1.2431770613461469e-5; 0.0001727862011198795 0.0021332705033957674 ‚Ä¶ 9.094642671842289e-5 5.959809540200509e-5; ‚Ä¶ ; 7.234762654825182e-5 9.094642671842289e-5 ‚Ä¶ 0.0006830658869447088 2.8336234399712355e-5; 1.2431770613461469e-5 5.959809540200509e-5 ‚Ä¶ 2.8336234399712355e-5 0.0006936294978323041;;; 0.0014369857542568028 0.00018176190853599742 ‚Ä¶ 7.956758779990248e-5 1.59129441273209e-5; 0.00018176190853599742 0.0019674148862000866 ‚Ä¶ 9.623637866294387e-5 6.478925557858399e-5; ‚Ä¶ ; 7.956758779990248e-5 9.623637866294387e-5 ‚Ä¶ 0.0006650970814242522 3.179257105808506e-5; 1.59129441273209e-5 6.478925557858399e-5 ‚Ä¶ 3.179257105808506e-5 0.0006737448070143301;;; 0.001541020280345677 0.00017418875377789536 ‚Ä¶ 7.159323237561269e-5 1.3026899691079782e-5; 0.00017418875377789536 0.0021608068364381704 ‚Ä¶ 8.931115213549879e-5 5.997933928280083e-5; ‚Ä¶ ; 7.159323237561269e-5 8.931115213549879e-5 ‚Ä¶ 0.000685138997935127 2.78919426789845e-5; 1.3026899691079782e-5 5.997933928280083e-5 ‚Ä¶ 2.78919426789845e-5 0.0006944911003350023;;; 0.0014525244622206179 0.00017660217137508287 ‚Ä¶ 7.912148416881335e-5 1.5244196812238881e-5; 0.00017660217137508287 0.0020073535725080617 ‚Ä¶ 9.523596240167824e-5 6.298421400714721e-5; ‚Ä¶ ; 7.912148416881335e-5 9.523596240167824e-5 ‚Ä¶ 0.0006666619833002903 3.1770927566828524e-5; 1.5244196812238881e-5 6.298421400714721e-5 ‚Ä¶ 3.1770927566828524e-5 0.0006757491087914028;;; 0.0014307576879335736 0.00017657508902678304 ‚Ä¶ 7.946056827741855e-5 1.6393098509972054e-5; 0.00017657508902678304 0.0019573538191694825 ‚Ä¶ 9.691242997388856e-5 6.37726780925217e-5; ‚Ä¶ ; 7.946056827741855e-5 9.691242997388856e-5 ‚Ä¶ 0.0006621939868738274 3.24567239077569e-5; 1.6393098509972054e-5 6.37726780925217e-5 ‚Ä¶ 3.24567239077569e-5 0.0006714546965838581;;; 0.0014032026625103524 0.0001785573872089359 ‚Ä¶ 8.375653551778081e-5 1.7735991039727756e-5; 0.0001785573872089359 0.0018915136913363285 ‚Ä¶ 0.00010167784255986017 6.600503779805204e-5; ‚Ä¶ ; 8.375653551778081e-5 0.00010167784255986017 ‚Ä¶ 0.00065065841054729 3.470555698813903e-5; 1.7735991039727756e-5 6.600503779805204e-5 ‚Ä¶ 3.470555698813903e-5 0.0006620932370567458;;; 0.0013350215187581864 0.0001781242437406676 ‚Ä¶ 8.738661343136847e-5 1.9507495863325997e-5; 0.0001781242437406676 0.001760041741985946 ‚Ä¶ 0.00010472706742123987 6.790027635846897e-5; ‚Ä¶ ; 8.738661343136847e-5 0.00010472706742123987 ‚Ä¶ 0.0006383893668528909 3.682430752991573e-5; 1.9507495863325997e-5 6.790027635846897e-5 ‚Ä¶ 3.682430752991573e-5 0.0006471294421471405;;; 0.001246428115271783 0.00017764240117981253 ‚Ä¶ 9.248536979164199e-5 2.172292262757856e-5; 0.00017764240117981253 0.001594789067821193 ‚Ä¶ 0.00011004965442557412 7.131140258782263e-5; ‚Ä¶ ; 9.248536979164199e-5 0.00011004965442557412 ‚Ä¶ 0.0006125324308299989 4.1000585334168505e-5; 2.172292262757856e-5 7.131140258782263e-5 ‚Ä¶ 4.1000585334168505e-5 0.000619254946331833]\n\n\nThey are hard to look at. Let‚Äôs take pictures.\n\n\n6.4.2 Caterpillar plots\n\n\nCode\ncaterpillar!(\n  Figure(; resolution=(800, 400)), ranefinfo(m1, :Cohort)\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†3: Prediction intervals of the random effects for Cohort in model m1\n\n\n\n\n\n\n6.4.3 Shrinkage plots\nThese are just teasers. We will pick this up in a separate tutorial. Enjoy!\n\n\nCode\nshrinkageplot!(Figure(; resolution=(800, 800)), m1, :Cohort)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†4: Shrinkage plot of the random effects for Cohort in model m1\n\n\n\n\n\n\nCode\nshrinkageplot!(Figure(; resolution=(800, 800)), m2, :Cohort)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†5: Shrinkage plot of the random effects for Cohort in model m2\n\n\n\n\n\n\nF√ºhner, T., Granacher, U., Golle, K., & Kliegl, R. (2021). Age and sex effects in physical fitness components of 108,295 third graders including 515 primary schools and 9 cohorts. Scientific Reports, 11(1). https://doi.org/10.1038/s41598-021-97000-4\n\n\nSchielzeth, H., & Forstmeier, W. (2008). Conclusions beyond support: Overconfident estimates in mixed models. Behavioral Ecology, 20(2), 416‚Äì420. https://doi.org/10.1093/beheco/arn145\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Eighth Summer School on Statistical Methods for Linguistics and Psychology",
    "section": "",
    "text": "This site provides materials for the Advanced frequentist methods stream of the Summer School on Statistical Methods to be held at the University of Potsdam, 9-13 September, 2025."
  },
  {
    "objectID": "index.html#git",
    "href": "index.html#git",
    "title": "Eighth Summer School on Statistical Methods for Linguistics and Psychology",
    "section": "1.1 git",
    "text": "1.1 git\nWe will assume that you have git installed and are able to clone a repository from github. If not, Happy Git with R is a good place to learn about git for data science.\nThe example data stored in the data folder is stored with git-lfs. You will need to install git-lfs to access this data, but then everything will ‚Äújust‚Äù work.\nThis website is built using quarto, described below, from the repository. Clone this repository with, e.g.\ngit clone https://github.com/RePsychLing/SMLP2025"
  },
  {
    "objectID": "index.html#julia-programming-language",
    "href": "index.html#julia-programming-language",
    "title": "Eighth Summer School on Statistical Methods for Linguistics and Psychology",
    "section": "1.2 Julia Programming Language",
    "text": "1.2 Julia Programming Language\nWe will use Julia v1.10 in the summer school. We recommend using Juliaup to install and manage Julia versions. Juliaup makes it trivial to upgrade to new Julia releases or even use old ones. Alternatively, you can download the version appropriate for your setup from here: Julia Programming Language"
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "Eighth Summer School on Statistical Methods for Linguistics and Psychology",
    "section": "1.3 Quarto",
    "text": "1.3 Quarto\nThe web site and other documents for this course are rendered using a knitr-like system called Quarto. You can download the version appropriate for your setup from here: quarto"
  },
  {
    "objectID": "index.html#integrated-development-environment-ide",
    "href": "index.html#integrated-development-environment-ide",
    "title": "Eighth Summer School on Statistical Methods for Linguistics and Psychology",
    "section": "1.4 Integrated Development Environment (IDE)",
    "text": "1.4 Integrated Development Environment (IDE)\nAn integrated development environment (IDE) makes editing and running Julia and Quarto source files easier. The ‚Äúintegrated development‚Äù portion is a clue to what makes them different than a text editor (even a text editor with syntax highlighting): they have tools for suggesting code completion, interacting with and running code and much more.\nPopular ones for R and Python include RStudio and Spyder. For Julia, we recommend VS Code or Positron. VS Code is widely used in the Julia community, while Positron is a new fork of VS Code aimed at data scientists and developed by the Posit, the folks behind RStudio and Quarto.\nWhatever IDE you use, make sure to install the necessary extensions for Quarto and Julia."
  },
  {
    "objectID": "kkl15.html",
    "href": "kkl15.html",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "",
    "text": "Kliegl et al. (2015) is a follow-up to Kliegl et al. (2011) (see also script kwdyz11.qmd) from an experiment looking at a variety of effects of visual cueing under four different cue-target relations (CTRs). In this experiment two rectangles are displayed (1) in horizontal orientation , (2) in vertical orientation, (3) in left diagonal orientation, or in (4) right diagonal orientation relative to a central fixation point. Subjects react to the onset of a small or a large visual target occurring at one of the four ends of the two rectangles. The target is cued validly on 70% of trials by a brief flash of the corner of the rectangle at which it appears; it is cued invalidly at the three other locations 10% of the trials each. This implies a latent imbalance in design that is not visible in the repeated-measures ANOVA, but we will show its effect in the random-effect structure and conditional modes.\nThere are a couple of differences between the first and this follow-up experiment, rendering it more a conceptual than a direct replication. First, the original experiment was carried out at Peking University and this follow-up at Potsdam University. Second, diagonal orientations of rectangles and large target sizes were not part of the design of Kliegl et al. (2011).\nWe specify three contrasts for the four-level factor CTR that are derived from spatial, object-based, and attractor-like features of attention. They map onto sequential differences between appropriately ordered factor levels. Replicating Kliegl et al. (2011), the attraction effect was not significant as a fixed effect, but yielded a highly reliable variance component (VC; i.e., reliable individual differences in positive and negative attraction effects cancel the fixed effect). Moreover, these individual differences in the attraction effect were negatively correlated with those in the spatial effect.\nThis comparison is of interest because a few years after the publication of Kliegl et al. (2011), the theoretically critical correlation parameter (CP) between the spatial effect and the attraction effect was determined as the source of a non-singular LMM in that paper. The present study served the purpose to estimate this parameter with a larger sample and a wider variety of experimental conditions.\nHere we also include two additional experimental manipulations of target size and orientation of cue rectangle. A similar analysis was reported in the parsimonious mixed-model paper (Bates et al., 2015); it was also used in a paper of GAMEMs (Baayen et al., 2017). Data and R scripts of those analyses are also available in R-package RePsychLing.\nThe analysis is based on reaction times rt to maintain compatibility with Kliegl et al. (2011).\nIn this vignette we focus on the reduction of model complexity. And we start with a quote:\n‚ÄúNeither the [maximal] nor the [minimal] linear mixed models are appropriate for most repeated measures analysis. Using the [maximal] model is generally wasteful and costly in terms of statiscal power for testing hypotheses. On the other hand, the [minimal] model fails to account for nontrivial correlation among repeated measurements. This results in inflated [T]ype I error rates when non-negligible correlation does in fact exist. We can usually find middle ground, a covariance model that adequately accounts for correlation but is more parsimonious than the [maximal] model. Doing so allows us full control over [T]ype I error rates without needlessly sacrificing power.‚Äù\nStroup, W. W. (2012, p.¬†185). Generalized linear mixed models: Modern concepts, methods and applica?ons. CRC Press, Boca Raton.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#zero-correlation-parameter-lmm-1",
    "href": "kkl15.html#zero-correlation-parameter-lmm-1",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "6.1 Zero-correlation parameter LMM (1)",
    "text": "6.1 Zero-correlation parameter LMM (1)\nForce CPs to zero. Reduction strategy 1 is more suited for reducing model w/o theoretical expectations about CPs. The better reduction strategy for the present experiment with an a priori interest in CPs is described as Reduction strategy 2.\n\nm_zcp1 = let\n  form = @formula rt ~ 1 + CTR * cardinal * size +\n                   zerocorr(1 + CTR * cardinal | Subj)\n  fit(MixedModel, form, dat; contrasts)\nend;\n\n\nissingular(m_zcp1)\n\ntrue\n\n\n\nonly(MixedModels.PCA(m_zcp1))\n\n\nPrincipal components based on correlation matrix\n (Intercept)                    1.0  .    .    .    .    .    .    .\n CTR: sod                       0.0  1.0  .    .    .    .    .    .\n CTR: dos                       0.0  0.0  1.0  .    .    .    .    .\n CTR: dod                       0.0  0.0  0.0  1.0  .    .    .    .\n cardinal: diagonal             0.0  0.0  0.0  0.0  1.0  .    .    .\n CTR: sod & cardinal: diagonal  0.0  0.0  0.0  0.0  0.0  1.0  .    .\n CTR: dos & cardinal: diagonal  0.0  0.0  0.0  0.0  0.0  0.0  0.0  .\n CTR: dod & cardinal: diagonal  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0\n\nNormalized cumulative variances:\n[0.1429, 0.2857, 0.4286, 0.5714, 0.7143, 0.8571, 1.0, 1.0]\n\nComponent loadings\n                                 PC1   PC2  ‚Ä¶   PC4   PC5   PC6   PC7     PC8\n (Intercept)                    1.0   0.0      0.0   0.0   0.0   0.0     0.0\n CTR: sod                       0.0   1.0      0.0   0.0   0.0   0.0     0.0\n CTR: dos                       0.0   0.0      0.0   0.0   0.0   0.0     0.0\n CTR: dod                       0.0   0.0      1.0   0.0   0.0   0.0     0.0\n cardinal: diagonal             0.0   0.0   ‚Ä¶  0.0   1.0   0.0   0.0     0.0\n CTR: sod & cardinal: diagonal  0.0   0.0      0.0   0.0   1.0   0.0     0.0\n CTR: dos & cardinal: diagonal  0.0   0.0      0.0   0.0   0.0   0.0   NaN\n CTR: dod & cardinal: diagonal  0.0   0.0      0.0   0.0   0.0   1.0     0.0\n\n\n\nVarCorr(m_zcp1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\n\n\n\nSubj\n(Intercept)\n2875.43244\n53.62306\n\n\n\n\n\n\n\n\n\n\nCTR: sod\n483.09089\n21.97933\n.\n\n\n\n\n\n\n\n\n\nCTR: dos\n79.93243\n8.94049\n.\n.\n\n\n\n\n\n\n\n\nCTR: dod\n216.91700\n14.72810\n.\n.\n.\n\n\n\n\n\n\n\ncardinal: diagonal\n250.32171\n15.82156\n.\n.\n.\n.\n\n\n\n\n\n\nCTR: sod & cardinal: diagonal\n35.91784\n5.99315\n.\n.\n.\n.\n.\n\n\n\n\n\nCTR: dos & cardinal: diagonal\n0.00000\n0.00000\n.\n.\n.\n.\n.\n.\n\n\n\n\nCTR: dod & cardinal: diagonal\n6.88389\n2.62372\n.\n.\n.\n.\n.\n.\n.\n\n\nResidual\n\n3972.38114\n63.02683\n\n\n\n\n\n\n\n\n\n\n\n\nThe LMM m_zcp1 is also overparameterized, but now there is clear evidence for absence of evidence for the VC of one of the interactions and the other two interaction-based VCs are also very small.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#reduced-zcp-lmm",
    "href": "kkl15.html#reduced-zcp-lmm",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "6.2 Reduced zcp LMM",
    "text": "6.2 Reduced zcp LMM\nTake out VCs for interactions.\n\nm_zcp1_rdc = let\n  form = @formula rt ~ 1 + CTR * cardinal * size +\n                   zerocorr(1 + CTR + cardinal | Subj)\n  fit(MixedModel, form, dat; contrasts)\nend;\n\n\nissingular(m_zcp1_rdc)\n\nfalse\n\n\n\nonly(MixedModels.PCA(m_zcp1_rdc))\n\n\nPrincipal components based on correlation matrix\n (Intercept)         1.0  .    .    .    .\n CTR: sod            0.0  1.0  .    .    .\n CTR: dos            0.0  0.0  1.0  .    .\n CTR: dod            0.0  0.0  0.0  1.0  .\n cardinal: diagonal  0.0  0.0  0.0  0.0  1.0\n\nNormalized cumulative variances:\n[0.2, 0.4, 0.6, 0.8, 1.0]\n\nComponent loadings\n                      PC1   PC2   PC3   PC4   PC5\n (Intercept)         0.0   0.0   0.0   0.0   1.0\n CTR: sod            1.0   0.0   0.0   0.0   0.0\n CTR: dos            0.0   1.0   0.0   0.0   0.0\n CTR: dod            0.0   0.0   1.0   0.0   0.0\n cardinal: diagonal  0.0   0.0   0.0   1.0   0.0\n\n\n\nVarCorr(m_zcp1_rdc)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nSubj\n(Intercept)\n2881.45052\n53.67914\n\n\n\n\n\n\n\nCTR: sod\n484.31679\n22.00720\n.\n\n\n\n\n\n\nCTR: dos\n79.54961\n8.91906\n.\n.\n\n\n\n\n\nCTR: dod\n216.59820\n14.71728\n.\n.\n.\n\n\n\n\ncardinal: diagonal\n244.93991\n15.65056\n.\n.\n.\n.\n\n\nResidual\n\n3980.87777\n63.09420\n\n\n\n\n\n\n\n\n\nLMM m_zcp_rdc is ok . We add in CPs.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#parsimonious-lmm-1",
    "href": "kkl15.html#parsimonious-lmm-1",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "6.3 Parsimonious LMM (1)",
    "text": "6.3 Parsimonious LMM (1)\nExtend zcp-reduced LMM with CPs\n\nm_prm1 = let\n  form = @formula rt ~ 1 + CTR * cardinal * size +\n                           (1 + CTR + cardinal | Subj)\n  fit(MixedModel, form, dat; contrasts)\nend;\n\n\nissingular(m_prm1)\n\nfalse\n\n\n\nonly(MixedModels.PCA(m_prm1))\n\n\nPrincipal components based on correlation matrix\n (Intercept)          1.0     .      .      .      .\n CTR: sod             0.6    1.0     .      .      .\n CTR: dos             0.45   0.19   1.0     .      .\n CTR: dod             0.37   0.54   0.29   1.0     .\n cardinal: diagonal  -0.1   -0.05  -0.09   0.13   1.0\n\nNormalized cumulative variances:\n[0.4488, 0.6668, 0.8307, 0.9437, 1.0]\n\nComponent loadings\n                       PC1    PC2    PC3    PC4    PC5\n (Intercept)         -0.55  -0.16   0.01   0.58  -0.58\n CTR: sod            -0.54   0.09  -0.49   0.17   0.66\n CTR: dos            -0.4   -0.25   0.8   -0.13   0.34\n CTR: dod            -0.49   0.36  -0.1   -0.71  -0.35\n cardinal: diagonal   0.05   0.88   0.32   0.34   0.07\n\n\nLMM m_zcp_rdc is ok . We add in CPs.\n\nVarCorr(m_prm1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nSubj\n(Intercept)\n2926.39374\n54.09615\n\n\n\n\n\n\n\nCTR: sod\n454.10921\n21.30984\n+0.60\n\n\n\n\n\n\nCTR: dos\n56.75233\n7.53341\n+0.45\n+0.19\n\n\n\n\n\nCTR: dod\n188.74621\n13.73849\n+0.37\n+0.54\n+0.29\n\n\n\n\ncardinal: diagonal\n245.27143\n15.66114\n-0.10\n-0.05\n-0.09\n+0.13\n\n\nResidual\n\n3981.71306\n63.10082\n\n\n\n\n\n\n\n\n\nWe note that the critical correlation parameter between spatial (sod) and attraction (dod) is now estimated at .54 ‚Äì not that close to the 1.0 boundary that caused singularity in Kliegl et al. (2011).",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#model-comparison-1",
    "href": "kkl15.html#model-comparison-1",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "6.4 Model comparison 1",
    "text": "6.4 Model comparison 1\n\ngof_summary = let\n  nms = [:m_zcp1_rdc, :m_prm1, :m_max]\n  mods = eval.(nms)\n  lrt = MixedModels.likelihoodratiotest(m_zcp1_rdc, m_prm1, m_max)\n  DataFrame(;\n    name = nms,\n    dof=dof.(mods),\n    deviance=round.(deviance.(mods), digits=0),\n    AIC=round.(aic.(mods),digits=0),\n    AICc=round.(aicc.(mods),digits=0),\n     BIC=round.(bic.(mods),digits=0),\n    œá¬≤=vcat(:., round.(lrt.tests.deviancediff, digits=0)),\n    œá¬≤_dof=vcat(:., round.(lrt.tests.dofdiff, digits=0)),\n    pvalue=vcat(:., round.(lrt.tests.pvalues, digits=3))\n  )\nend\n\n3√ó9 DataFrame\n\n\n\nRow\nname\ndof\ndeviance\nAIC\nAICc\nBIC\nœá¬≤\nœá¬≤_dof\npvalue\n\n\n\nSymbol\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nAny\nAny\nAny\n\n\n\n\n1\nm_zcp1_rdc\n22\n599486.0\n599530.0\n599530.0\n599725.0\n.\n.\n.\n\n\n2\nm_prm1\n32\n599418.0\n599482.0\n599482.0\n599766.0\n68.0\n10.0\n0.0\n\n\n3\nm_max\n53\n599359.0\n599465.0\n599465.0\n599936.0\n59.0\n21.0\n0.0\n\n\n\n\n\n\nAIC prefers LMM m_prm1 over m_zcp1_rdc; BIC LMM m_zcp1_rdc. As the CPs were one reason for conducting this experiment, AIC is the criterion of choice.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#complex-lmm",
    "href": "kkl15.html#complex-lmm",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "7.1 Complex LMM",
    "text": "7.1 Complex LMM\nRelative to LMM m_max, first we take out interaction VCs and associated CPs, because these VCs are very small. This is the same as LMM m_prm1 above.\n\nm_cpx = let\n  form = @formula rt ~ 1 + CTR * cardinal * size +\n                      (1 + CTR + cardinal | Subj)\n  fit(MixedModel, form, dat; contrasts)\nend;",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#zero-correlation-parameter-lmm-2",
    "href": "kkl15.html#zero-correlation-parameter-lmm-2",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "7.2 Zero-correlation parameter LMM (2)",
    "text": "7.2 Zero-correlation parameter LMM (2)\nNow we check the significance of ensemble of CPs.\n\nm_zcp2 = let\n  form = @formula rt ~ 1 + CTR * cardinal * size  +\n              zerocorr(1 + CTR + cardinal | Subj)\n  fit(MixedModel, form, dat; contrasts)\nend;\n\n\nVarCorr(m_zcp2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nSubj\n(Intercept)\n2881.45052\n53.67914\n\n\n\n\n\n\n\nCTR: sod\n484.31679\n22.00720\n.\n\n\n\n\n\n\nCTR: dos\n79.54961\n8.91906\n.\n.\n\n\n\n\n\nCTR: dod\n216.59820\n14.71728\n.\n.\n.\n\n\n\n\ncardinal: diagonal\n244.93991\n15.65056\n.\n.\n.\n.\n\n\nResidual\n\n3980.87777\n63.09420",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#parsimonious-lmm-2",
    "href": "kkl15.html#parsimonious-lmm-2",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "7.3 Parsimonious LMM (2)",
    "text": "7.3 Parsimonious LMM (2)\nThe cardinal-related CPs are quite small. Do we need them?\n\nm_prm2 = let\n  form = @formula(rt ~ 1 + CTR * cardinal * size  +\n                      (1 + CTR | Subj) + (0 + cardinal | Subj))\n  fit(MixedModel, form, dat; contrasts)\nend;\n\n\nVarCorr(m_prm2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\n\nSubj\n(Intercept)\n2923.32186\n54.06775\n\n\n\n\n\n\n\nCTR: sod\n454.38842\n21.31639\n+0.60\n\n\n\n\n\n\nCTR: dos\n56.46065\n7.51403\n+0.45\n+0.19\n\n\n\n\n\nCTR: dod\n187.89792\n13.70759\n+0.37\n+0.54\n+0.30\n\n\n\n\ncardinal: diagonal\n245.16943\n15.65789\n.\n.\n.\n.\n\n\nResidual\n\n3981.74285\n63.10105",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#model-comparison-2",
    "href": "kkl15.html#model-comparison-2",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "7.4 Model comparison 2",
    "text": "7.4 Model comparison 2\n\ngof_summary = let\n  nms = [:m_zcp2, :m_prm2, :m_cpx, :m_max]\n  mods = eval.(nms)\n  lrt = MixedModels.likelihoodratiotest(m_zcp2, m_prm2, m_cpx, m_max)\n  DataFrame(;\n    name = nms,\n    dof=dof.(mods),\n    deviance=round.(deviance.(mods), digits=0),\n    AIC=round.(aic.(mods),digits=0),\n    AICc=round.(aicc.(mods),digits=0),\n     BIC=round.(bic.(mods),digits=0),\n    œá¬≤=vcat(:., round.(lrt.tests.deviancediff, digits=0)),\n    œá¬≤_dof=vcat(:., round.(lrt.tests.dofdiff, digits=0)),\n    pvalue=vcat(:., round.(lrt.tests.pvalues, digits=3))\n  )\nend\n\n4√ó9 DataFrame\n\n\n\nRow\nname\ndof\ndeviance\nAIC\nAICc\nBIC\nœá¬≤\nœá¬≤_dof\npvalue\n\n\n\nSymbol\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nAny\nAny\nAny\n\n\n\n\n1\nm_zcp2\n22\n599486.0\n599530.0\n599530.0\n599725.0\n.\n.\n.\n\n\n2\nm_prm2\n28\n599420.0\n599476.0\n599476.0\n599725.0\n65.0\n6.0\n0.0\n\n\n3\nm_cpx\n32\n599418.0\n599482.0\n599482.0\n599766.0\n2.0\n4.0\n0.652\n\n\n4\nm_max\n53\n599359.0\n599465.0\n599465.0\n599936.0\n59.0\n21.0\n0.0\n\n\n\n\n\n\nThe cardinal-related CPs could be removed w/o loss of goodness of fit. However, there is no harm in keeping them in the LMM. The data support both LMM m_prm2 and m_cpx (same as: m_prm1). We keep the slightly more complex LMM m_cpx (m_prm1).",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#residual-over-fitted-plot",
    "href": "kkl15.html#residual-over-fitted-plot",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "8.1 Residual-over-fitted plot",
    "text": "8.1 Residual-over-fitted plot\nThe slant in residuals show a lower and upper boundary of reaction times, that is we have have too few short and too few long residuals. Not ideal, but at least width of the residual band looks similar across the fitted values, that is there is no evidence for heteroskedasticity.\n\n\nCode\nCairoMakie.activate!(; type=\"png\")\nscatter(fitted(m_prm1), residuals(m_prm1); alpha=0.3)\n\n\n\n\n\n\n\nFigure¬†2: Residuals versus fitted values for model m1\n\n\n\n\nWith many observations the scatterplot is not that informative. Contour plots or heatmaps may be an alternative.\n\n\nCode\nset_aog_theme!()\ndraw(\n  data((; f=fitted(m_prm1), r=residuals(m_prm1))) *\n  mapping(\n    :f =&gt; \"Fitted values from m1\", :r =&gt; \"Residuals from m1\"\n  ) *\n  density();\n)\n\n\n\n\n\n\n\nFigure¬†3: Heatmap of residuals versus fitted values for model m1",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#q-q-plot",
    "href": "kkl15.html#q-q-plot",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "8.2 Q-Q plot",
    "text": "8.2 Q-Q plot\nThe plot of quantiles of model residuals over corresponding quantiles of the normal distribution should yield a straight line along the main diagonal.\n\n\nCode\nCairoMakie.activate!(; type=\"png\")\nqqnorm(\n  residuals(m_prm1);\n  qqline=:none,\n  axis=(;\n    xlabel=\"Standard normal quantiles\",\n    ylabel=\"Quantiles of the residuals from model m1\",\n  ),\n)\n\n\n\n\n\n\n\nFigure¬†4: Quantile-quantile plot of the residuals for model m1 versus a standard normal",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#caterpillar-plot",
    "href": "kkl15.html#caterpillar-plot",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "9.1 Caterpillar plot",
    "text": "9.1 Caterpillar plot\n\n\nCode\ncm1 = only(ranefinfo(m_prm1))\ncaterpillar!(Figure(; resolution=(800, 1200)), cm1; orderby=2)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†5: Prediction intervals of the subject random effects in model m1",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#shrinkage-plot",
    "href": "kkl15.html#shrinkage-plot",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "9.2 Shrinkage plot",
    "text": "9.2 Shrinkage plot\n\n\nCode\nshrinkageplot!(Figure(; resolution=(1000, 1200)), m_prm1)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†6: Shrinkage plots of the subject random effects in model m1L",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#generate-a-bootstrap-sample",
    "href": "kkl15.html#generate-a-bootstrap-sample",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "10.1 Generate a bootstrap sample",
    "text": "10.1 Generate a bootstrap sample\nWe generate 2500 samples for the 15 model parameters (4 fixed effect, 7 VCs, 15 CPs, and 1 residual).\n\nsamp = parametricbootstrap(MersenneTwister(1234321), 2500, m_prm1;\n                           optsum_overrides=(; ftol_rel=1e-8));\n\n\ntbl = samp.tbl\n\nTable with 48 columns and 2500 rows:\n      obj        Œ≤01      Œ≤02      Œ≤03      Œ≤04       Œ≤05      Œ≤06      ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ 5.99123e5  318.146  26.2903  13.9174  6.74944   5.97167  27.2175  ‚ãØ\n 2  ‚îÇ 5.99228e5  315.166  21.7222  13.8924  1.41165   4.28871  26.216   ‚ãØ\n 3  ‚îÇ 5.99391e5  304.787  22.8413  14.4555  1.30937   5.97979  28.3124  ‚ãØ\n 4  ‚îÇ 5.98758e5  304.983  25.7334  14.2529  4.46301   7.3687   25.5255  ‚ãØ\n 5  ‚îÇ 5.99417e5  305.661  20.3663  11.7683  1.95922   7.55567  22.6423  ‚ãØ\n 6  ‚îÇ 5.99825e5  303.204  20.6372  11.9589  3.01109   3.64718  14.051   ‚ãØ\n 7  ‚îÇ 5.9885e5   308.687  26.3962  14.9357  4.30657   9.44674  28.0379  ‚ãØ\n 8  ‚îÇ 5.99054e5  308.726  22.0484  14.0206  2.04468   2.35748  21.458   ‚ãØ\n 9  ‚îÇ 5.99529e5  300.775  22.2847  10.537   4.48452   4.40397  21.3034  ‚ãØ\n 10 ‚îÇ 5.99096e5  314.717  27.6003  12.8212  1.9483    5.6583   24.3917  ‚ãØ\n 11 ‚îÇ 5.99564e5  313.363  25.41    11.5791  4.62007   9.92006  28.7788  ‚ãØ\n 12 ‚îÇ 5.99323e5  312.305  22.9754  15.0654  0.256928  8.85752  25.8754  ‚ãØ\n 13 ‚îÇ 5.99502e5  310.986  23.8323  14.729   1.69965   9.73568  25.5329  ‚ãØ\n 14 ‚îÇ 5.997e5    317.858  25.1774  13.9608  4.48191   8.0803   36.8897  ‚ãØ\n 15 ‚îÇ 6.00337e5  309.607  24.4717  13.2423  2.80069   3.8812   24.2719  ‚ãØ\n 16 ‚îÇ 600049.0   308.469  24.842   10.4018  3.39803   6.35019  28.8359  ‚ãØ\n 17 ‚îÇ 5.98992e5  313.968  24.6616  12.7233  3.90727   7.20239  27.1067  ‚ãØ\n ‚ãÆ  ‚îÇ     ‚ãÆ         ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ         ‚ãÆ        ‚ãÆ     ‚ã±",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#shortest-coverage-interval",
    "href": "kkl15.html#shortest-coverage-interval",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "10.2 Shortest coverage interval",
    "text": "10.2 Shortest coverage interval\n\nconfint(samp)\n\nDictTable with 2 columns and 32 rows:\n par   lower      upper\n ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Œ≤01 ‚îÇ 297.126    319.558\n Œ≤02 ‚îÇ 18.785     28.3171\n Œ≤03 ‚îÇ 10.2014    15.9642\n Œ≤04 ‚îÇ -1.03419   6.55744\n Œ≤05 ‚îÇ 3.25478    9.7972\n Œ≤06 ‚îÇ 14.051     37.0229\n Œ≤07 ‚îÇ 1.86817    5.3913\n Œ≤08 ‚îÇ -0.975109  3.7586\n Œ≤09 ‚îÇ -2.88731   1.77475\n Œ≤10 ‚îÇ 3.98408    13.7493\n Œ≤11 ‚îÇ -3.31111   2.47015\n Œ≤12 ‚îÇ 3.9137     11.1273\n Œ≤13 ‚îÇ -1.07411   5.60924\n Œ≤14 ‚îÇ -2.49725   1.0596\n Œ≤15 ‚îÇ -2.50563   2.27366\n Œ≤16 ‚îÇ 1.76716    6.47652\n œÅ01 ‚îÇ 0.343104   0.785229\n  ‚ãÆ  ‚îÇ     ‚ãÆ         ‚ãÆ\n\n\nWe can also visualize the shortest coverage intervals for fixed effects with the ridgeplot() command:\n\n\nCode\nridgeplot(samp; show_intercept=false)\n\n\n\n\n\n\n\nFigure¬†7: Ridge plot of fixed-effects bootstrap samples from model m1L",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "kkl15.html#comparative-density-plots-of-bootstrapped-parameter-estimates",
    "href": "kkl15.html#comparative-density-plots-of-bootstrapped-parameter-estimates",
    "title": "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity",
    "section": "10.3 Comparative density plots of bootstrapped parameter estimates",
    "text": "10.3 Comparative density plots of bootstrapped parameter estimates\n\n10.3.1 Residual\n\n\nCode\ndraw(\n  data(tbl) *\n  mapping(:œÉ =&gt; \"Residual\") *\n  density();\n  figure=(; resolution=(800, 400)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†8: Kernel density estimate from bootstrap samples of the residual standard deviation for model m_prm1\n\n\n\n\n\n\n10.3.2 Fixed effects and associated variance components (w/o GM)\nThe shortest coverage interval for the GM ranges from x to x ms and the associate variance component from .x to .x. To keep the plot range small we do not include their densities here.\n\n\nCode\nrn = renamer([\n  \"(Intercept)\" =&gt; \"GM\",\n  \"CTR: sod\" =&gt; \"spatial effect\",\n  \"CTR: dos\" =&gt; \"object effect\",\n  \"CTR: dod\" =&gt; \"attraction effect\",\n  \"(Intercept), CTR: sod\" =&gt; \"GM, spatial\",\n  \"(Intercept), CTR: dos\" =&gt; \"GM, object\",\n  \"CTR: sod, CTR: dos\" =&gt; \"spatial, object\",\n  \"(Intercept), CTR: dod\" =&gt; \"GM, attraction\",\n  \"CTR: sod, CTR: dod\" =&gt; \"spatial, attraction\",\n  \"CTR: dos, CTR: dod\" =&gt; \"object, attraction\",\n])\ndraw(\n  data(tbl) *\n  mapping(\n    [:Œ≤02, :Œ≤03, :Œ≤04] .=&gt; \"Experimental effect size [ms]\";\n    color=dims(1) =&gt;\n    renamer([\"spatial effect\", \"object effect\", \"attraction effect\"]) =&gt;\n    \"Experimental effects\",\n  ) *\n  density();\n  figure=(; resolution=(800, 350)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†9: Kernel density estimate from bootstrap samples of the fixed effects for model m_prm1\n\n\n\n\nThe densitiies correspond nicely with the shortest coverage intervals.\n\n\nCode\ndraw(\n  data(tbl) *\n  mapping(\n    [:œÉ2, :œÉ3, :œÉ4] .=&gt; \"Standard deviations [ms]\";\n    color=dims(1) =&gt;\n    renamer([\"spatial effect\", \"object effect\", \"attraction effect\"]) =&gt;\n    \"Variance components\",\n  ) *\n  density();\n  figure=(; resolution=(800, 350)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†10: Kernel density estimate from bootstrap samples of the standard deviations for model m1L (excluding Grand Mean)\n\n\n\n\nThe VC are all very nicely defined.\n\n\n10.3.3 Correlation parameters (CPs)\n\n\nCode\ndraw(\n  data(tbl) *\n  mapping(\n    [:œÅ01, :œÅ02, :œÅ03, :œÅ04, :œÅ05, :œÅ06] .=&gt; \"Correlation\";\n    color=dims(1) =&gt;\n    renamer([\"GM, spatial\", \"GM, object\", \"spatial, object\",\n    \"GM, attraction\", \"spatial, attraction\", \"object, attraction\"]) =&gt;\n    \"Correlation parameters\",\n  ) *\n  density();\n  figure=(; resolution=(800, 350)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†11: Kernel density estimate from bootstrap samples of the standard deviations for model m1L\n\n\n\n\nThree CPs stand out positively, the correlation between GM and the spatial effect, GM and attraction effect, and the correlation between spatial and attraction effects. The second CP was positive, but not significant in the first study. The third CP replicates a CP that was judged questionable in script kwdyz11.jl. The three remaining CPs are not well defined for reaction times.",
    "crumbs": [
      "Worked examples",
      "RePsychLing Kliegl, Kuschela, & Laubrock (2015)- Reduction of Model Complexity"
    ]
  },
  {
    "objectID": "largescaledesigned.html",
    "href": "largescaledesigned.html",
    "title": "1 A large-scale designed experiment",
    "section": "",
    "text": "Load the packages to be used.\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing Chain\nusing DataFrameMacros\nusing DataFrames\nusing Effects\nusing MixedModels\nusing MixedModelsMakie\nusing SMLP2025: dataset\nusing StandardizedPredictors\nusing StatsBase\n\n\nThe English Lexicon Project (Balota et al., 2007) was a large-scale multicenter study to examine properties of English words. It incorporated both a lexical decision task and a word recognition task. Different groups of subjects participated in the different tasks.",
    "crumbs": [
      "Worked examples",
      "A large-scale designed experiment"
    ]
  },
  {
    "objectID": "largescaledesigned.html#trial-level-data-from-the-ldt",
    "href": "largescaledesigned.html#trial-level-data-from-the-ldt",
    "title": "1 A large-scale designed experiment",
    "section": "2.1 Trial-level data from the LDT",
    "text": "2.1 Trial-level data from the LDT\nIn the lexical decision task the study participant is shown a character string, under carefully controlled conditions, and responds according to whether they identify the string as a word or not. Two responses are recorded: whether the choice of word/non-word is correct and the time that elapsed between exposure to the string and registering a decision.\nSeveral covariates, some relating to the subject and some relating to the target, were recorded. Initially we consider only the trial-level data.\n\nldttrial = dataset(:ELP_ldt_trial)\n\nArrow.Table with 2745952 rows, 5 columns, and schema:\n :subj  String\n :seq   Int16\n :acc   Union{Missing, Bool}\n :rt    Int16\n :item  String\n\nwith metadata given by a Base.ImmutableDict{String, String} with 3 entries:\n  \"source\"    =&gt; \"https://osf.io/n63s2\"\n  \"reference\" =&gt; \"Balota et al. (2007), The English Lexicon Project, Behavior R‚Ä¶\n  \"title\"     =&gt; \"Trial-level data from Lexical Discrimination Task in the Engl‚Ä¶\n\n\nThe two response variables are acc - the accuracy of the response - and rt, the response time in milliseconds. There is one trial-level covariate, seq, the sequence number of the trial within subj. Each subject participated in two sessions on different days, with 2000 trials recorded on the first day.\nNotice the metadata with a citation and a URL for the OSF project.\nWe convert to a DataFrame and add a Boolean column s2 which is true for trials in the second session.\n\nldttrial = @transform(DataFrame(ldttrial), :s2 = :seq &gt; 2000)\ndescribe(ldttrial)\n\n6√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nType\n\n\n\n\n1\nsubj\n\nS001\n\nS816\n0\nString\n\n\n2\nseq\n1687.21\n1\n1687.0\n3374\n0\nInt16\n\n\n3\nacc\n0.85604\nfalse\n1.0\ntrue\n1370\nUnion{Missing, Bool}\n\n\n4\nrt\n846.325\n-16160\n732.0\n32061\n0\nInt16\n\n\n5\nitem\n\nAarod\n\nzuss\n0\nString\n\n\n6\ns2\n0.407128\nfalse\n0.0\ntrue\n0\nBool",
    "crumbs": [
      "Worked examples",
      "A large-scale designed experiment"
    ]
  },
  {
    "objectID": "largescaledesigned.html#sec-ldtinitialexplore",
    "href": "largescaledesigned.html#sec-ldtinitialexplore",
    "title": "1 A large-scale designed experiment",
    "section": "2.2 Initial data exploration",
    "text": "2.2 Initial data exploration\nFrom the basic summary of ldttrial we can see that there are some questionable response times ‚Äî negative values and values over 32 seconds.\nBecause of obvious outliers we will use the median response time, which is not strongly influenced by outliers, rather than the mean response time when summarizing by item or by subject.\nAlso, there are missing values of the accuracy. We should check if these are associated with particular subjects or particular items.\n\n2.2.1 Summaries by item\nTo summarize by item we group the trials by item and use combine to produce the various summary statistics. As we will create similar summaries by subject, we incorporate an ‚Äòi‚Äô in the names of these summaries (and an ‚Äòs‚Äô in the name of the summaries by subject) to be able to identify the grouping used.\n\nbyitem = @chain ldttrial begin\n  groupby(:item)\n  @combine(\n    :ni = length(:acc),               # no. of obs\n    :imiss = count(ismissing, :acc),  # no. of missing acc\n    :iacc = count(skipmissing(:acc)), # no. of accurate\n    :imedianrt = median(:rt),\n  )\n  @transform!(\n    :wrdlen = Int8(length(:item)),\n    :ipropacc = :iacc / :ni\n  )\nend\n\n80962√ó7 DataFrame80937 rows omitted\n\n\n\nRow\nitem\nni\nimiss\niacc\nimedianrt\nwrdlen\nipropacc\n\n\n\nString\nInt64\nInt64\nInt64\nFloat64\nInt8\nFloat64\n\n\n\n\n1\na\n35\n0\n26\n743.0\n1\n0.742857\n\n\n2\ne\n35\n0\n19\n824.0\n1\n0.542857\n\n\n3\naah\n34\n0\n21\n770.5\n3\n0.617647\n\n\n4\naal\n34\n0\n32\n702.5\n3\n0.941176\n\n\n5\nAaron\n33\n0\n31\n625.0\n5\n0.939394\n\n\n6\nAarod\n33\n0\n23\n810.0\n5\n0.69697\n\n\n7\naback\n34\n0\n15\n710.0\n5\n0.441176\n\n\n8\nahack\n34\n0\n34\n662.0\n5\n1.0\n\n\n9\nabacus\n34\n0\n17\n671.5\n6\n0.5\n\n\n10\nalacus\n34\n0\n29\n640.0\n6\n0.852941\n\n\n11\nabandon\n34\n0\n32\n641.0\n7\n0.941176\n\n\n12\nacandon\n34\n0\n33\n725.5\n7\n0.970588\n\n\n13\nabandoned\n34\n0\n31\n667.5\n9\n0.911765\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n80951\nzoology\n33\n0\n32\n623.0\n7\n0.969697\n\n\n80952\npoology\n33\n0\n32\n757.0\n7\n0.969697\n\n\n80953\nzoom\n35\n0\n34\n548.0\n4\n0.971429\n\n\n80954\nzool\n35\n0\n30\n633.0\n4\n0.857143\n\n\n80955\nzooming\n33\n0\n29\n617.0\n7\n0.878788\n\n\n80956\nsooming\n33\n0\n30\n721.0\n7\n0.909091\n\n\n80957\nzooms\n33\n0\n30\n598.0\n5\n0.909091\n\n\n80958\ncooms\n33\n0\n31\n660.0\n5\n0.939394\n\n\n80959\nzucchini\n34\n0\n29\n781.5\n8\n0.852941\n\n\n80960\nhucchini\n34\n0\n32\n727.5\n8\n0.941176\n\n\n80961\nZurich\n34\n0\n21\n731.5\n6\n0.617647\n\n\n80962\nZurach\n34\n0\n26\n811.0\n6\n0.764706\n\n\n\n\n\n\nIt can be seen that the items occur in word/nonword pairs and the pairs are sorted alphabetically by the word in the pair (ignoring case). We can add the word/nonword status for the items as\n\nbyitem.isword = isodd.(eachindex(byitem.item))\ndescribe(byitem)\n\n8√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nitem\n\nAarod\n\nzuss\n0\nString\n\n\n2\nni\n33.9166\n30\n34.0\n37\n0\nInt64\n\n\n3\nimiss\n0.0169215\n0\n0.0\n2\n0\nInt64\n\n\n4\niacc\n29.0194\n0\n31.0\n37\n0\nInt64\n\n\n5\nimedianrt\n753.069\n458.0\n737.5\n1691.0\n0\nFloat64\n\n\n6\nwrdlen\n7.9988\n1\n8.0\n21\n0\nInt8\n\n\n7\nipropacc\n0.855616\n0.0\n0.911765\n1.0\n0\nFloat64\n\n\n8\nisword\n0.5\nfalse\n0.5\ntrue\n0\nBool\n\n\n\n\n\n\nThis table shows that some of the items were never identified correctly. These are\n\nfilter(:iacc =&gt; iszero, byitem)\n\n9√ó8 DataFrame\n\n\n\nRow\nitem\nni\nimiss\niacc\nimedianrt\nwrdlen\nipropacc\nisword\n\n\n\nString\nInt64\nInt64\nInt64\nFloat64\nInt8\nFloat64\nBool\n\n\n\n\n1\nbaobab\n34\n0\n0\n616.5\n6\n0.0\ntrue\n\n\n2\nhaulage\n34\n0\n0\n708.5\n7\n0.0\ntrue\n\n\n3\nleitmotif\n35\n0\n0\n688.0\n9\n0.0\ntrue\n\n\n4\nmiasmal\n35\n0\n0\n774.0\n7\n0.0\ntrue\n\n\n5\npeahen\n34\n0\n0\n684.0\n6\n0.0\ntrue\n\n\n6\nplosive\n34\n0\n0\n663.0\n7\n0.0\ntrue\n\n\n7\nplugugly\n33\n0\n0\n709.0\n8\n0.0\ntrue\n\n\n8\nposhest\n34\n0\n0\n740.0\n7\n0.0\ntrue\n\n\n9\nservo\n33\n0\n0\n697.0\n5\n0.0\ntrue\n\n\n\n\n\n\nNotice that these are all words but somewhat obscure words such that none of the subjects exposed to the word identified it correctly.\nWe can incorporate characteristics like wrdlen and isword back into the original trial table with a ‚Äúleft join‚Äù. This operation joins two tables by values in a common column. It is called a left join because the left (or first) table takes precedence, in the sense that every row in the left table is present in the result. If there is no matching row in the second table then missing values are inserted for the columns from the right table in the result.\n\ndescribe(\n  leftjoin!(\n    ldttrial,\n    select(byitem, :item, :wrdlen, :isword);\n    on=:item,\n  ),\n)\n\n8√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nType\n\n\n\n\n1\nsubj\n\nS001\n\nS816\n0\nString\n\n\n2\nseq\n1687.21\n1\n1687.0\n3374\n0\nInt16\n\n\n3\nacc\n0.85604\nfalse\n1.0\ntrue\n1370\nUnion{Missing, Bool}\n\n\n4\nrt\n846.325\n-16160\n732.0\n32061\n0\nInt16\n\n\n5\nitem\n\nAarod\n\nzuss\n0\nString\n\n\n6\ns2\n0.407128\nfalse\n0.0\ntrue\n0\nBool\n\n\n7\nwrdlen\n7.99835\n1\n8.0\n21\n0\nUnion{Missing, Int8}\n\n\n8\nisword\n0.499995\nfalse\n0.0\ntrue\n0\nUnion{Missing, Bool}\n\n\n\n\n\n\nNotice that the wrdlen and isword variables in this table allow for missing values, because they are derived from the second argument, but there are no missing values for these variables. If there is no need to allow for missing values, there is a slight advantage in disallowing them in the element type, because the code to check for and handle missing values is not needed.\nThis could be done separately for each column or for the whole data frame, as in\n\ndescribe(disallowmissing!(ldttrial; error=false))\n\n8√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nType\n\n\n\n\n1\nsubj\n\nS001\n\nS816\n0\nString\n\n\n2\nseq\n1687.21\n1\n1687.0\n3374\n0\nInt16\n\n\n3\nacc\n0.85604\nfalse\n1.0\ntrue\n1370\nUnion{Missing, Bool}\n\n\n4\nrt\n846.325\n-16160\n732.0\n32061\n0\nInt16\n\n\n5\nitem\n\nAarod\n\nzuss\n0\nString\n\n\n6\ns2\n0.407128\nfalse\n0.0\ntrue\n0\nBool\n\n\n7\nwrdlen\n7.99835\n1\n8.0\n21\n0\nInt8\n\n\n8\nisword\n0.499995\nfalse\n0.0\ntrue\n0\nBool\n\n\n\n\n\n\n\n\n\n\n\n\nNamed argument ‚Äúerror‚Äù\n\n\n\n\n\nThe named argument error=false is required because there is one column, acc, that does incorporate missing values. If error=false were not given then the error thrown when trying to disallowmissing on the acc column would be propagated and the top-level call would fail.\n\n\n\nA barchart of the word length counts, Figure¬†1, shows that the majority of the items are between 3 and 14 characters.\n\n\nCode\nlet\n  wlen = 1:21\n  draw(\n    data((; wrdlen=wlen, count=counts(byitem.wrdlen, wlen))) *\n    mapping(:wrdlen =&gt; \"Length of word\", :count) *\n    visual(BarPlot),\n  )\nend\n\n\n\n\n\n\n\nFigure¬†1: Barchart of word lengths in the items used in the lexical decision task.\n\n\n\n\nTo examine trends in accuracy by word length we plot the proportion accurate versus word-length separately for words and non-words with the area of each marker proportional to the number of observations for that combination (Figure¬†2).\n\n\nCode\nlet\n  itemsummry = combine(\n    groupby(byitem, [:wrdlen, :isword]),\n    :ni =&gt; sum,\n    :imiss =&gt; sum,\n    :iacc =&gt; sum,\n  )\n  @transform!(\n    itemsummry,\n    :iacc_mean = :iacc_sum / (:ni_sum - :imiss_sum)\n  )\n  @transform!(itemsummry, :msz = sqrt((:ni_sum - :imiss_sum) / 800))\n  draw(\n    data(itemsummry) * mapping(\n      :wrdlen =&gt; \"Word length\",\n      :iacc_mean =&gt; \"Proportion accurate\";\n      color=:isword,\n      markersize=:msz,\n    );\n    figure=(; resolution=(800, 450)),\n  )\nend\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/KcEWO/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†2: Proportion of accurate trials in the LDT versus word length separately for words and non-words. The area of the marker is proportional to the number of observations represented.\n\n\n\n\nThe pattern in the range of word lengths with non-negligible counts (there are points in the plot down to word lengths of 1 and up to word lengths of 21 but these points are very small) is that the accuracy for words is nearly constant at about 84% and the accuracy for nonwords is slightly higher until lengths of 13, at which point it falls off a bit.\n\n\n2.2.2 Summaries by subject\nA summary of accuracy and median response time by subject\n\nbysubj = @chain ldttrial begin\n  groupby(:subj)\n  @combine(\n    :ns = length(:acc),               # no. of obs\n    :smiss = count(ismissing, :acc),  # no. of missing acc\n    :sacc = count(skipmissing(:acc)), # no. of accurate\n    :smedianrt = median(:rt),\n  )\n  @transform!(:spropacc = :sacc / :ns)\nend\n\n814√ó6 DataFrame789 rows omitted\n\n\n\nRow\nsubj\nns\nsmiss\nsacc\nsmedianrt\nspropacc\n\n\n\nString\nInt64\nInt64\nInt64\nFloat64\nFloat64\n\n\n\n\n1\nS001\n3374\n0\n3158\n554.0\n0.935981\n\n\n2\nS002\n3372\n1\n3031\n960.0\n0.898873\n\n\n3\nS003\n3372\n3\n3006\n813.0\n0.891459\n\n\n4\nS004\n3374\n1\n3062\n619.0\n0.907528\n\n\n5\nS005\n3374\n0\n2574\n677.0\n0.762893\n\n\n6\nS006\n3374\n0\n2927\n855.0\n0.867516\n\n\n7\nS007\n3374\n4\n2877\n918.5\n0.852697\n\n\n8\nS008\n3372\n1\n2731\n1310.0\n0.809905\n\n\n9\nS009\n3374\n13\n2669\n657.0\n0.791049\n\n\n10\nS010\n3374\n0\n2722\n757.0\n0.806758\n\n\n11\nS011\n3374\n0\n2894\n632.0\n0.857736\n\n\n12\nS012\n3374\n4\n2979\n692.0\n0.882928\n\n\n13\nS013\n3374\n2\n2980\n1114.0\n0.883225\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n803\nS805\n3374\n5\n2881\n534.0\n0.853883\n\n\n804\nS806\n3374\n1\n3097\n841.5\n0.917902\n\n\n805\nS807\n3374\n3\n2994\n704.0\n0.887374\n\n\n806\nS808\n3374\n2\n2751\n630.5\n0.815353\n\n\n807\nS809\n3372\n4\n2603\n627.0\n0.771945\n\n\n808\nS810\n3374\n1\n3242\n603.5\n0.960877\n\n\n809\nS811\n3374\n2\n2861\n827.0\n0.847955\n\n\n810\nS812\n3372\n6\n3012\n471.0\n0.893238\n\n\n811\nS813\n3372\n4\n2932\n823.0\n0.869514\n\n\n812\nS814\n3374\n1\n3070\n773.0\n0.909899\n\n\n813\nS815\n3374\n1\n3024\n602.0\n0.896266\n\n\n814\nS816\n3374\n0\n2950\n733.0\n0.874333\n\n\n\n\n\n\nshows some anomalies\n\ndescribe(bysubj)\n\n6√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nsubj\n\nS001\n\nS816\n0\nString\n\n\n2\nns\n3373.41\n3370\n3374.0\n3374\n0\nInt64\n\n\n3\nsmiss\n1.68305\n0\n1.0\n22\n0\nInt64\n\n\n4\nsacc\n2886.33\n1727\n2928.0\n3286\n0\nInt64\n\n\n5\nsmedianrt\n760.992\n205.0\n735.0\n1804.0\n0\nFloat64\n\n\n6\nspropacc\n0.855613\n0.511855\n0.868031\n0.973918\n0\nFloat64\n\n\n\n\n\n\nFirst, some subjects are accurate on only about half of their trials, which is the proportion that would be expected from random guessing. A plot of the median response time versus proportion accurate, Figure¬†3, shows that the subjects with lower accuracy are some of the fastest responders, further indicating that these subjects are sacrificing accuracy for speed.\n\n\nCode\ndraw(\n  data(bysubj) *\n  mapping(\n    :spropacc =&gt; \"Proportion accurate\",\n    :smedianrt =&gt; \"Median response time (ms)\",\n  ) *\n  (visual(Scatter) + smooth())\n)\n\n\n\n\n\n\n\nFigure¬†3: Median response time versus proportion accurate by subject in the LDT.\n\n\n\n\nAs described in Balota et al. (2007), the participants performed the trials in blocks of 250 followed by a short break. During the break they were given feedback concerning accuracy and response latency in the previous block of trials. If the accuracy was less than 80% the participant was encouraged to improve their accuracy. Similarly, if the mean response latency was greater than 1000 ms, the participant was encouraged to decrease their response time. During the trials immediate feedback was given if the response was incorrect.\nNevertheless, approximately 15% of the subjects were unable to maintain 80% accuracy on their trials\n\ncount(&lt;(0.8), bysubj.spropacc) / nrow(bysubj)\n\n0.15233415233415235\n\n\nand there is some association of faster response times with low accuracy. The majority of the subjects whose median response time is less than 500 ms. are accurate on less than 75% of their trials. Another way of characterizing the relationship is that none of the subjects with 90% accuracy or greater had a median response time less than 500 ms.\n\nminimum(@subset(bysubj, :spropacc &gt; 0.9).smedianrt)\n\n505.0\n\n\nIt is common in analyses of response latency in a lexical discrimination task to consider only the latencies on correct identifications and to trim outliers. In Balota et al. (2007) a two-stage outlier removal strategy was used; first removing responses less than 200 ms or greater than 3000 ms then removing responses more than three standard deviations from the participant‚Äôs mean response.\nAs described in Section¬†2.2.3 we will analyze these data on a speed scale (the inverse of response time) using only the first-stage outlier removal of response latencies less than 200 ms or greater than 3000 ms. On the speed scale the limits are 0.333 per second up to 5 per second.\nTo examine the effects of the fast but inaccurate responders we will fit models to the data from all the participants and to the data from the 85% of participants who maintained an overall accuracy of 80% or greater.\n\npruned = @chain ldttrial begin\n  @subset(!ismissing(:acc), 200 ‚â§ :rt ‚â§ 3000,)\n  leftjoin!(select(bysubj, :subj, :spropacc); on=:subj)\n  dropmissing!\nend\nsize(pruned)\n\n(2714311, 9)\n\n\n\ndescribe(pruned)\n\n9√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nDataType\n\n\n\n\n1\nsubj\n\nS001\n\nS816\n0\nString\n\n\n2\nseq\n1684.56\n1\n1684.0\n3374\n0\nInt16\n\n\n3\nacc\n0.859884\nfalse\n1.0\ntrue\n0\nBool\n\n\n4\nrt\n838.712\n200\n733.0\n3000\n0\nInt16\n\n\n5\nitem\n\nAarod\n\nzuss\n0\nString\n\n\n6\ns2\n0.40663\nfalse\n0.0\ntrue\n0\nBool\n\n\n7\nwrdlen\n7.99244\n1\n8.0\n21\n0\nInt8\n\n\n8\nisword\n0.500126\nfalse\n1.0\ntrue\n0\nBool\n\n\n9\nspropacc\n0.857169\n0.511855\n0.869295\n0.973918\n0\nFloat64\n\n\n\n\n\n\n\n\n2.2.3 Choice of response scale\nAs we have indicated, generally the response times are analyzed for the correct identifications only. Furthermore, unrealistically large or small response times are eliminated. For this example we only use the responses between 200 and 3000 ms.\nA density plot of the pruned response times, Figure¬†4, shows they are skewed to the right.\n\n\nCode\ndraw(\n  data(pruned) *\n  mapping(:rt =&gt; \"Response time (ms.) for correct responses\") *\n  AlgebraOfGraphics.density();\n  figure=(; resolution=(800, 450)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/KcEWO/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†4: Kernel density plot of the pruned response times (ms.) in the LDT.\n\n\n\n\nIn such cases it is common to transform the response to a scale such as the logarithm of the response time or to the speed of the response, which is the inverse of the response time.\nThe density of the response speed, in responses per second, is shown in Figure¬†5.\n\n\nCode\ndraw(\n  data(pruned) *\n  mapping(\n    :rt =&gt; (x -&gt; 1000 / x) =&gt; \"Response speed (s‚Åª¬π) for correct responses\") *\n  AlgebraOfGraphics.density();\n  figure=(; resolution=(800, 450)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/KcEWO/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†5: Kernel density plot of the pruned response speed in the LDT.\n\n\n\n\nFigure¬†4 and Figure¬†5 indicate that it may be more reasonable to establish a lower bound of 1/3 second (333 ms) on the response latency, corresponding to an upper bound of 3 per second on the response speed. However, only about one half of one percent of the correct responses have latencies in the range of 200 ms. to 333 ms.\n\ncount(\n  r -&gt; !ismissing(r.acc) && 200 &lt; r.rt &lt; 333,\n  eachrow(ldttrial),\n) / count(!ismissing, ldttrial.acc)\n\n0.005867195806137328\n\n\nso the exact position of the lower cut-off point on the response latencies is unlikely to be very important.\n\n\n\n\n\n\nUsing inline transformations vs defining new columns\n\n\n\n\n\nIf you examine the code for (fit-elpldtspeeddens?), you will see that the conversion from rt to speed is done inline rather than creating and storing a new variable in the DataFrame.\nI prefer to keep the DataFrame simple with the integer variables (e.g.¬†:rt) if possible.\nI recommend using the StandardizedPredictors.jl capabilities to center numeric variables or convert to zscores.\n\n\n\n\n\n2.2.4 Transformation of response and the form of the model\nAs noted in Box & Cox (1964), a transformation of the response that produces a more Gaussian distribution often will also produce a simpler model structure. For example, Figure¬†6 shows the smoothed relationship between word length and response time for words and non-words separately,\n\n\nCode\ndraw(\n  data(pruned) *\n  mapping(\n    :wrdlen =&gt; \"Word length\",\n    :rt =&gt; \"Response time (ms)\";\n    :color =&gt; :isword,\n  ) * smooth()\n)\n\n\n\n\n\n\n\nFigure¬†6: Scatterplot smooths of response time versus word length in the LDT.\n\n\n\n\nand Figure¬†7 shows the similar relationships for speed\n\n\nCode\ndraw(\n  data(pruned) *\n  mapping(\n    :wrdlen =&gt; \"Word length\",\n    :rt =&gt; (x -&gt; 1000/x) =&gt; \"Speed of response (s‚Åª¬π)\";\n    :color =&gt; :isword,\n  ) * smooth()\n)\n\n\n\n\n\n\n\nFigure¬†7: Scatterplot smooths of response speed versus word length in the LDT.\n\n\n\n\nFor the most part the smoother lines in Figure¬†7 are reasonably straight. The small amount of curvature is associated with short word lengths, say less than 4 characters, of which there are comparatively few in the study.\nFigure¬†8 shows a ‚Äúviolin plot‚Äù - the empirical density of the response speed by word length separately for words and nonwords. The lines on the plot are fit by linear regression.\n\n\nCode\nlet\n  plt = data(@subset(pruned, :wrdlen &gt; 3, :wrdlen &lt; 14))\n  plt *= mapping(\n    :wrdlen =&gt; \"Word length\",\n    :rt =&gt; (x -&gt; 1000/x) =&gt; \"Speed of response (s‚Åª¬π)\",\n    color=:isword,\n    side=:isword,\n  )\n  plt *= visual(Violin)\n  draw(plt, axis=(; limits=(nothing, (0.0, 2.8))))\nend\n\n\n\n\n\n\n\nFigure¬†8: Empirical density of response speed versus word length by word/non-word status.",
    "crumbs": [
      "Worked examples",
      "A large-scale designed experiment"
    ]
  },
  {
    "objectID": "largescaledesigned.html#sec-ldtinitialmodel",
    "href": "largescaledesigned.html#sec-ldtinitialmodel",
    "title": "1 A large-scale designed experiment",
    "section": "2.3 Models with scalar random effects",
    "text": "2.3 Models with scalar random effects\nA major purpose of the English Lexicon Project is to characterize the items (words or nonwords) according to the observed accuracy of identification and to response latency, taking into account subject-to-subject variability, and to relate these to lexical characteristics of the items.\nIn Balota et al. (2007) the item response latency is characterized by the average response latency from the correct trials after outlier removal.\nMixed-effects models allow us greater flexibility and, we hope, precision in characterizing the items by controlling for subject-to-subject variability and for item characteristics such as word/nonword and item length.\nWe begin with a model that has scalar random effects for item and for subject and incorporates fixed-effects for word/nonword and for item length and for the interaction of these terms.\n\n2.3.1 Establish the contrasts\nFor the isword factor we will use an EffectsCoding contrast with the base level as false. The non-words are assigned -1 in this contrast and the words are assigned +1. The wrdlen covariate is on its original scale but centered at 8 characters.\nThus the (Intercept) coefficient is the predicted speed of response for a typical subject and typical item (without regard to word/non-word status) of 8 characters.\nSet these contrasts\n\ncontrasts = Dict(\n  :isword =&gt; EffectsCoding(; base=false),\n  :wrdlen =&gt; Center(8),\n)\n\nDict{Symbol, Any} with 2 entries:\n  :wrdlen =&gt; Center(8)\n  :isword =&gt; EffectsCoding(false, nothing)\n\n\nand fit a first model with simple, scalar, random effects for subj and item.\n\nelm01 = let\n  form = @formula(\n    1000 / rt ~ 1 + isword * wrdlen + (1 | item) + (1 | subj)\n  )\n  fit(MixedModel, form, pruned; contrasts, progress=false)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n1.3758\n0.0090\n153.69\n&lt;1e-99\n0.1185\n0.2550\n\n\nisword: true\n0.0625\n0.0005\n131.35\n&lt;1e-99\n\n\n\n\nwrdlen(centered: 8)\n-0.0436\n0.0002\n-225.38\n&lt;1e-99\n\n\n\n\nisword: true & wrdlen(centered: 8)\n-0.0056\n0.0002\n-28.83\n&lt;1e-99\n\n\n\n\nResidual\n0.3781\n\n\n\n\n\n\n\n\n\n\nThe predicted response speed by word length and word/nonword status can be summarized as\n\neffects(Dict(:isword =&gt; [false, true], :wrdlen =&gt; 4:2:12), elm01)\n\n10√ó6 DataFrame\n\n\n\nRow\nwrdlen\nisword\n1000 / rt\nerr\nlower\nupper\n\n\n\nInt64\nBool\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n4\nfalse\n1.46555\n0.00903111\n1.45652\n1.47458\n\n\n2\n6\nfalse\n1.38947\n0.00898124\n1.38049\n1.39845\n\n\n3\n8\nfalse\n1.31338\n0.00896459\n1.30442\n1.32235\n\n\n4\n10\nfalse\n1.2373\n0.00898134\n1.22832\n1.24628\n\n\n5\n12\nfalse\n1.16121\n0.00903129\n1.15218\n1.17025\n\n\n6\n4\ntrue\n1.6351\n0.0090311\n1.62607\n1.64413\n\n\n7\n6\ntrue\n1.5367\n0.00898124\n1.52772\n1.54569\n\n\n8\n8\ntrue\n1.43831\n0.00896459\n1.42934\n1.44727\n\n\n9\n10\ntrue\n1.33991\n0.00898133\n1.33092\n1.34889\n\n\n10\n12\ntrue\n1.24151\n0.00903128\n1.23248\n1.25054\n\n\n\n\n\n\nIf we restrict to only those subjects with 80% accuracy or greater the model becomes\n\nelm02 = let\n  form = @formula(\n    1000 / rt ~ 1 + isword * wrdlen + (1 | item) + (1 | subj)\n  )\n  dat = @subset(pruned, :spropacc &gt; 0.8)\n  fit(MixedModel, form, dat; contrasts, progress=false)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n1.3611\n0.0088\n153.98\n&lt;1e-99\n0.1247\n0.2318\n\n\nisword: true\n0.0656\n0.0005\n133.73\n&lt;1e-99\n\n\n\n\nwrdlen(centered: 8)\n-0.0444\n0.0002\n-222.65\n&lt;1e-99\n\n\n\n\nisword: true & wrdlen(centered: 8)\n-0.0057\n0.0002\n-28.73\n&lt;1e-99\n\n\n\n\nResidual\n0.3342\n\n\n\n\n\n\n\n\n\n\n\neffects(Dict(:isword =&gt; [false, true], :wrdlen =&gt; 4:2:12), elm02)\n\n10√ó6 DataFrame\n\n\n\nRow\nwrdlen\nisword\n1000 / rt\nerr\nlower\nupper\n\n\n\nInt64\nBool\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n4\nfalse\n1.45036\n0.00892466\n1.44144\n1.45929\n\n\n2\n6\nfalse\n1.37297\n0.008871\n1.3641\n1.38184\n\n\n3\n8\nfalse\n1.29557\n0.00885308\n1.28672\n1.30443\n\n\n4\n10\nfalse\n1.21818\n0.0088711\n1.20931\n1.22705\n\n\n5\n12\nfalse\n1.14078\n0.00892485\n1.13186\n1.14971\n\n\n6\n4\ntrue\n1.62735\n0.00892465\n1.61842\n1.63627\n\n\n7\n6\ntrue\n1.52702\n0.008871\n1.51815\n1.53589\n\n\n8\n8\ntrue\n1.4267\n0.00885307\n1.41784\n1.43555\n\n\n9\n10\ntrue\n1.32637\n0.00887109\n1.3175\n1.33524\n\n\n10\n12\ntrue\n1.22605\n0.00892483\n1.21712\n1.23497\n\n\n\n\n\n\nThe differences in the fixed-effects parameter estimates between a model fit to the full data set and one fit to the data from accurate responders only, are small.\nHowever, the random effects for the item, while highly correlated, are not perfectly correlated.\n\n\nCode\nCairoMakie.activate!(; type=\"png\")\ndisallowmissing!(\n  leftjoin!(\n    byitem,\n    leftjoin!(\n      rename!(DataFrame(raneftables(elm01)[:item]), [:item, :elm01]),\n      rename!(DataFrame(raneftables(elm02)[:item]), [:item, :elm02]);\n      on=:item,\n    ),\n    on=:item,\n  ),\n)\ndisallowmissing!(\n  leftjoin!(\n    bysubj,\n    leftjoin!(\n      rename!(DataFrame(raneftables(elm01)[:subj]), [:subj, :elm01]),\n      rename!(DataFrame(raneftables(elm02)[:subj]), [:subj, :elm02]);\n      on=:subj,\n    ),\n    on=:subj,\n  ); error=false,\n)\ndraw(\n  data(byitem) * mapping(\n    :elm01 =&gt; \"Conditional means of item random effects for model elm01\",\n    :elm02 =&gt; \"Conditional means of item random effects for model elm02\";\n    color=:isword,\n  ) * visual(Scatter; alpha=0.2);\n  axis=(; width=600, height=600),\n)\n\n\n\n\n\n\n\nFigure¬†9: Conditional means of scalar random effects for item in model elm01, fit to the pruned data, versus those for model elm02, fit to the pruned data with inaccurate subjects removed.\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAdjust the alpha on Figure¬†9.\n\n\nFigure¬†9 is exactly of the form that would be expected in a sample from a correlated multivariate Gaussian distribution. The correlation of the two sets of conditional means is about 96%.\n\ncor(Matrix(select(byitem, :elm01, :elm02)))\n\n2√ó2 Matrix{Float64}:\n 1.0       0.958655\n 0.958655  1.0\n\n\nThese models take only a few seconds to fit on a modern laptop computer, which is quite remarkable given the size of the data set and the number of random effects.\nThe amount of time to fit more complex models will be much greater so we may want to move those fits to more powerful server computers. We can split the tasks of fitting and analyzing a model between computers by saving the optimization summary after the model fit and later creating the MixedModel object followed by restoring the optsum object.\n\nif !isfile(\"./fits/elm01.json\")\n  saveoptsum(\"./fits/elm01.json\", elm01);\nend\n\n\nelm01a = restoreoptsum!(\n  let\n    form = @formula(\n      1000 / rt ~ 1 + isword * wrdlen + (1 | item) + (1 | subj)\n    )\n    MixedModel(form, pruned; contrasts)\n  end,\n  \"./fits/elm01.json\",\n)\n\n\n‚îå Warning: optsum was saved with an older version of MixedModels.jl: consider resaving.\n‚îî @ MixedModels ~/.julia/packages/MixedModels/bu3nA/src/serialization.jl:94\n\n\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n1.3758\n0.0090\n153.69\n&lt;1e-99\n0.1185\n0.2550\n\n\nisword: true\n0.0625\n0.0005\n131.35\n&lt;1e-99\n\n\n\n\nwrdlen(centered: 8)\n-0.0436\n0.0002\n-225.38\n&lt;1e-99\n\n\n\n\nisword: true & wrdlen(centered: 8)\n-0.0056\n0.0002\n-28.83\n&lt;1e-99\n\n\n\n\nResidual\n0.3781\n\n\n\n\n\n\n\n\n\n\nOther covariates associated with the item are available as\n\nelpldtitem = DataFrame(dataset(\"ELP_ldt_item\"))\ndescribe(elpldtitem)\n\n9√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nUnion‚Ä¶\nAny\nInt64\nType\n\n\n\n\n1\nitem\n\nAarod\n\nzuss\n0\nString\n\n\n2\nOrtho_N\n1.53309\n0\n1.0\n25\n0\nInt8\n\n\n3\nBG_Sum\n13938.4\n11\n13026.0\n59803\n177\nUnion{Missing, Int32}\n\n\n4\nBG_Mean\n1921.25\n5.5\n1907.0\n6910.0\n177\nUnion{Missing, Float32}\n\n\n5\nBG_Freq_By_Pos\n2043.08\n0\n1928.0\n6985\n4\nUnion{Missing, Int16}\n\n\n6\nitemno\n40481.5\n1\n40481.5\n80962\n0\nInt32\n\n\n7\nisword\n0.5\nfalse\n0.5\ntrue\n0\nBool\n\n\n8\nwrdlen\n7.9988\n1\n8.0\n21\n0\nInt8\n\n\n9\npairno\n20241.0\n1\n20241.0\n40481\n0\nInt32\n\n\n\n\n\n\nand those associated with the subject are\n\nelpldtsubj = DataFrame(dataset(\"ELP_ldt_subj\"))\ndescribe(elpldtsubj)\n\n20√ó7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion‚Ä¶\nAny\nAny\nAny\nInt64\nType\n\n\n\n\n1\nsubj\n\nS001\n\nS816\n0\nString\n\n\n2\nuniv\n\nKansas\n\nWayne State\n0\nString\n\n\n3\nsex\n\nf\n\nm\n8\nUnion{Missing, String}\n\n\n4\nDOB\n\n1938-06-07\n\n1984-11-14\n0\nDate\n\n\n5\nMEQ\n44.4932\n19.0\n44.0\n75.0\n8\nUnion{Missing, Float32}\n\n\n6\nvision\n5.51169\n0\n6.0\n7\n1\nUnion{Missing, Int8}\n\n\n7\nhearing\n5.86101\n0\n6.0\n7\n1\nUnion{Missing, Int8}\n\n\n8\neducatn\n8.89681\n1\n12.0\n28\n0\nInt8\n\n\n9\nncorrct\n29.8505\n5\n30.0\n40\n18\nUnion{Missing, Int8}\n\n\n10\nrawscor\n31.9925\n13\n32.0\n40\n18\nUnion{Missing, Int8}\n\n\n11\nvocabAge\n17.8123\n10.3\n17.8\n21.0\n19\nUnion{Missing, Float32}\n\n\n12\nshipTime\n3.0861\n0\n3.0\n9\n1\nUnion{Missing, Int8}\n\n\n13\nreadTime\n2.50215\n0.0\n2.0\n15.0\n1\nUnion{Missing, Float32}\n\n\n14\npreshlth\n5.48708\n0\n6.0\n7\n1\nUnion{Missing, Int8}\n\n\n15\npasthlth\n4.92989\n0\n5.0\n7\n1\nUnion{Missing, Int8}\n\n\n16\nS1start\n\n2001-03-16T13:49:27\n2001-10-16T11:38:28.500\n2003-07-29T18:48:44\n0\nDateTime\n\n\n17\nS2start\n\n2001-03-19T10:00:35\n2001-10-19T14:24:19.500\n2003-07-30T13:07:45\n0\nDateTime\n\n\n18\nMEQstrt\n\n2001-03-22T18:32:00\n2001-10-23T11:26:13\n2003-07-30T14:30:49\n7\nUnion{Missing, DateTime}\n\n\n19\nfilename\n\n101DATA.LDT\n\nData998.LDT\n0\nString\n\n\n20\nfrstLang\n\nEnglish\n\nother\n8\nUnion{Missing, String}\n\n\n\n\n\n\nFor the simple model elm01 the estimated standard deviation of the random effects for subject is greater than that of the random effects for item, a common occurrence. A caterpillar plot, Figure¬†10,\n\n\nCode\nqqcaterpillar!(\n  Figure(resolution=(800, 650)),\n  ranefinfo(elm01, :subj),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/KcEWO/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nFigure¬†10: Conditional means and 95% prediction intervals for subject random effects in elm01.\n\n\n\n\n\nshows definite distinctions between subjects because the widths of the prediction intervals are small compared to the range of the conditional modes. Also, there is at least one outlier with a conditional mode over 1.0.\nFigure¬†11 is the corresponding caterpillar plot for model elm02 fit to the data with inaccurate responders eliminated.\n\n\nCode\nqqcaterpillar!(\n  Figure(resolution=(800, 650)),\n  ranefinfo(elm02, :subj),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/KcEWO/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nFigure¬†11: Conditional means and 95% prediction intervals for subject random effects in elm02.",
    "crumbs": [
      "Worked examples",
      "A large-scale designed experiment"
    ]
  },
  {
    "objectID": "largescaledesigned.html#random-effects-from-the-simple-model-related-to-covariates",
    "href": "largescaledesigned.html#random-effects-from-the-simple-model-related-to-covariates",
    "title": "1 A large-scale designed experiment",
    "section": "2.4 Random effects from the simple model related to covariates",
    "text": "2.4 Random effects from the simple model related to covariates\nThe random effects ‚Äúestimates‚Äù (technically they are ‚Äúconditional means‚Äù) from the simple model elm01 provide a measure of how much the item or subject differs from the population. (We use elm01 because the main difference between elm01 and elm02 are that some subjects were dropped before fitting elm02.)\nFor the item its length and word/non-word status have already been incorporated in the model. At this point the subjects are just being treated as a homogeneous population.\nThe random effects conditional means have been extracted and incorporated in the byitem and bysubj tables. Now add selected demographic and item-specific measures.\n\nitemextended = leftjoin(\n  byitem,\n  select(elpldtitem, 1:5);\n  on = :item,\n)\nsubjextended = leftjoin(\n  bysubj,\n  select(elpldtsubj, 1:3, :vocabAge);\n  on=:subj,\n)\n\n814√ó11 DataFrame789 rows omitted\n\n\n\nRow\nsubj\nns\nsmiss\nsacc\nsmedianrt\nspropacc\nelm01\nelm02\nuniv\nsex\nvocabAge\n\n\n\nString\nInt64\nInt64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64?\nString?\nString?\nFloat32?\n\n\n\n\n1\nS001\n3374\n0\n3158\n554.0\n0.935981\n0.411459\n0.426624\nMorehead\nm\n19.8\n\n\n2\nS002\n3372\n1\n3031\n960.0\n0.898873\n-0.30907\n-0.293732\nMorehead\nf\n17.8\n\n\n3\nS003\n3372\n3\n3006\n813.0\n0.891459\n-0.153078\n-0.139436\nMorehead\nf\n18.2\n\n\n4\nS004\n3374\n1\n3062\n619.0\n0.907528\n0.213047\n0.22754\nMorehead\nf\n18.6\n\n\n5\nS005\n3374\n0\n2574\n677.0\n0.762893\n0.0850349\nmissing\nMorehead\nf\n16.2\n\n\n6\nS006\n3374\n0\n2927\n855.0\n0.867516\n-0.207356\n-0.192651\nMorehead\nf\n17.8\n\n\n7\nS007\n3374\n4\n2877\n918.5\n0.852697\n-0.182201\n-0.166357\nMorehead\nf\n17.4\n\n\n8\nS008\n3372\n1\n2731\n1310.0\n0.809905\n-0.541434\n-0.526828\nMorehead\nm\n16.2\n\n\n9\nS009\n3374\n13\n2669\n657.0\n0.791049\n0.154926\nmissing\nMorehead\nf\n16.6\n\n\n10\nS010\n3374\n0\n2722\n757.0\n0.806758\n-0.0541104\n-0.0403266\nMorehead\nf\n17.0\n\n\n11\nS011\n3374\n0\n2894\n632.0\n0.857736\n0.217734\n0.231618\nMorehead\nf\n17.4\n\n\n12\nS012\n3374\n4\n2979\n692.0\n0.882928\n0.062351\n0.0770981\nMorehead\nm\n18.2\n\n\n13\nS013\n3374\n2\n2980\n1114.0\n0.883225\n-0.409761\n-0.3956\nMorehead\nf\n18.2\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n803\nS805\n3374\n5\n2881\n534.0\n0.853883\n0.480461\n0.495683\nWash. Univ\nm\n19.0\n\n\n804\nS806\n3374\n1\n3097\n841.5\n0.917902\n-0.1888\n-0.173376\nWash. Univ\nm\n19.8\n\n\n805\nS807\n3374\n3\n2994\n704.0\n0.887374\n0.01919\n0.0338241\nWash. Univ\nm\n17.4\n\n\n806\nS808\n3374\n2\n2751\n630.5\n0.815353\n0.199416\n0.214299\nWash. Univ\nf\n18.6\n\n\n807\nS809\n3372\n4\n2603\n627.0\n0.771945\n0.2277\nmissing\nWash. Univ\nm\n15.1\n\n\n808\nS810\n3374\n1\n3242\n603.5\n0.960877\n0.252522\n0.266822\nWash. Univ\nm\n19.8\n\n\n809\nS811\n3374\n2\n2861\n827.0\n0.847955\n-0.158097\n-0.143568\nWash. Univ\nf\n16.2\n\n\n810\nS812\n3372\n6\n3012\n471.0\n0.893238\n0.748427\n0.76354\nWash. Univ\nf\n19.8\n\n\n811\nS813\n3372\n4\n2932\n823.0\n0.869514\n-0.167166\n-0.153846\nWash. Univ\nm\n17.4\n\n\n812\nS814\n3374\n1\n3070\n773.0\n0.909899\n-0.0753662\n-0.0606956\nWash. Univ\nf\n18.6\n\n\n813\nS815\n3374\n1\n3024\n602.0\n0.896266\n0.249134\n0.2643\nWash. Univ\nf\n18.6\n\n\n814\nS816\n3374\n0\n2950\n733.0\n0.874333\n-0.0364596\n-0.0222916\nWash. Univ\nf\n17.8\n\n\n\n\n\n\nAs shown in Figure¬†12, there does not seem to be a strong relationship between vocabulary age and speed of response by subject.\n\n\nCode\ndraw(\n  data(dropmissing(select(subjextended, :elm01, :vocabAge, :sex))) *\n  mapping(\n    :vocabAge =&gt; \"Vocabulary age (yr) of subject\",\n    :elm01 =&gt; \"Random effect in model elm01\";\n    color=:sex,\n  ) * visual(Scatter; alpha=0.6)\n)\n\n\n\n\n\n\n\n\nFigure¬†12: Random effect for subject in model elm01 versus vocabulary age\n\n\n\n\n\n\n\nCode\ndraw(\n  data(dropmissing(select(subjextended, :elm01, :univ))) *\n  mapping(\n    :elm01 =&gt; \"Random effect in model elm01\";\n    color=:univ =&gt; \"University\",\n  ) * AlgebraOfGraphics.density()\n)\n\n\n\n\n\n\n\n\nFigure¬†13: Estimated density of random effects for subject in model elm01 by university\n\n\n\n\n\n\n\nCode\ndraw(\n  data(dropmissing(select(subjextended, :elm02, :univ))) *\n  mapping(\n    :elm02 =&gt; \"Random effect in model elm02 (accurate responders only)\";\n    color=:univ =&gt; \"University\",\n  ) * AlgebraOfGraphics.density()\n)\n\n\n\n\n\n\n\n\nFigure¬†14: Estimated density of random effects for subject in model elm02, fit to accurate responders only, by university\n\n\n\n\n\n\n\nCode\nCairoMakie.activate!(; type=\"png\")\ndraw(\n  data(dropmissing(select(itemextended, :elm01, :BG_Mean, :isword))) *\n  mapping(\n    :BG_Mean =&gt; \"Mean bigram frequency\",\n    :elm01 =&gt; \"Random effect in model elm01\";\n    color=:isword,\n  ) * visual(Scatter; alpha=0.2)\n)\n\n\n\n\n\n\n\nFigure¬†15: Random effect in model elm01 versus mean bigram frequency, by word/nonword status\n\n\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.",
    "crumbs": [
      "Worked examples",
      "A large-scale designed experiment"
    ]
  },
  {
    "objectID": "partial_within.html",
    "href": "partial_within.html",
    "title": "Partially-within subjects designs",
    "section": "",
    "text": "Begin by loading the packages to be used.\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing DataFrames\nusing MixedModels\nusing MixedModelsMakie\nusing MixedModelsSim\nusing ProgressMeter\nusing Random\n\nconst progress=false\n\n\n\n\nCode\nn_subj = 40\nn_item = 3\n# things are expressed as \"between\", so \"within subjects\" is \"between items\"\nitem_btwn = Dict(:frequency =&gt; [\"high\", \"medium\", \"low\"])\ndesign = simdat_crossed(MersenneTwister(42), n_subj, n_item;\n                        item_btwn = item_btwn)\ndesign = DataFrame(design)\n\n\n120√ó4 DataFrame95 rows omitted\n\n\n\nRow\nsubj\nitem\nfrequency\ndv\n\n\n\nString\nString\nString\nFloat64\n\n\n\n\n1\nS01\nI1\nhigh\n1.21028\n\n\n2\nS02\nI1\nhigh\n-0.0789986\n\n\n3\nS03\nI1\nhigh\n0.403512\n\n\n4\nS04\nI1\nhigh\n0.289951\n\n\n5\nS05\nI1\nhigh\n-0.0670422\n\n\n6\nS06\nI1\nhigh\n0.61398\n\n\n7\nS07\nI1\nhigh\n1.01694\n\n\n8\nS08\nI1\nhigh\n-0.053864\n\n\n9\nS09\nI1\nhigh\n-0.570387\n\n\n10\nS10\nI1\nhigh\n-0.857737\n\n\n11\nS11\nI1\nhigh\n-0.211452\n\n\n12\nS12\nI1\nhigh\n-0.853673\n\n\n13\nS13\nI1\nhigh\n0.439568\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n109\nS29\nI3\nlow\n-0.358987\n\n\n110\nS30\nI3\nlow\n0.274254\n\n\n111\nS31\nI3\nlow\n-1.87219\n\n\n112\nS32\nI3\nlow\n0.480454\n\n\n113\nS33\nI3\nlow\n0.778338\n\n\n114\nS34\nI3\nlow\n0.330643\n\n\n115\nS35\nI3\nlow\n-0.516103\n\n\n116\nS36\nI3\nlow\n0.156547\n\n\n117\nS37\nI3\nlow\n0.427122\n\n\n118\nS38\nI3\nlow\n-0.291824\n\n\n119\nS39\nI3\nlow\n-0.965346\n\n\n120\nS40\nI3\nlow\n-0.326028\n\n\n\n\n\n\n\n\nCode\nunique!(select(design, :item, :frequency))\n\n\n3√ó2 DataFrame\n\n\n\nRow\nitem\nfrequency\n\n\n\nString\nString\n\n\n\n\n1\nI1\nhigh\n\n\n2\nI2\nmedium\n\n\n3\nI3\nlow\n\n\n\n\n\n\n\n\nCode\nm0 = let contrasts, form\n    contrasts = Dict(:frequency =&gt; HelmertCoding(base=\"high\"))\n    form = @formula(dv ~ 1 + frequency +\n                    (1 + frequency | subj))\n    fit(MixedModel, form, design; contrasts, progress)\nend\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n0.1366\n0.1000\n1.37\n0.1719\n0.5820\n\n\nfrequency: low\n-0.1053\n0.0964\n-1.09\n0.2747\n0.5290\n\n\nfrequency: medium\n0.0594\n0.0684\n0.87\n0.3848\n0.3953\n\n\nResidual\n0.4288\n\n\n\n\n\n\n\n\n\n\n\nCode\ncorrmat = [ 1    0.1 -0.2\n            0.1  1    0.1\n           -0.2  0.1  1 ]\nre_subj = create_re(1.2, 1.5, 1.5; corrmat)\n\n\n3√ó3 LinearAlgebra.LowerTriangular{Float64, Matrix{Float64}}:\n  1.2    ‚ãÖ         ‚ãÖ \n  0.15  1.49248    ‚ãÖ \n -0.3   0.180907  1.45852\n\n\n\n\nCode\nŒ∏ = createŒ∏(m0; subj=re_subj)\n\n\n6-element Vector{Float64}:\n  1.2\n  0.15000000000000002\n -0.30000000000000004\n  1.49248115565993\n  0.18090680674665818\n  1.4585173044131932\n\n\n\n\nCode\nœÉ = 1;\nŒ≤ = [1.0, -3, -2];\n\n\n\n\nCode\nfit!(simulate!(m0; Œ∏, Œ≤, œÉ))\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n0.9281\n0.2255\n4.12\n&lt;1e-04\n1.2742\n\n\nfrequency: low\n-3.5388\n0.1555\n-22.76\n&lt;1e-99\n0.5922\n\n\nfrequency: medium\n-1.7028\n0.2911\n-5.85\n&lt;1e-08\n1.7846\n\n\nResidual\n1.1104\n\n\n\n\n\n\n\n\n\n\n\nCode\nshrinkageplot(m0)\n\n\n\n\n\n\n\nCode\ncaterpillar(m0; orderby=nothing, vline_at_zero=true)\n\n\n\n\n\n\n\nCode\ndesign[!, :dv] .= response(m0)\n\n\n120-element Vector{Float64}:\n  4.628747466875103\n  5.751964917170067\n  3.2049938285620385\n  3.827035755307118\n  3.8214747638451074\n  7.678408315278142\n  8.841227429188681\n  2.7869563468758356\n 12.240561880079486\n -0.7113180660244929\n  ‚ãÆ\n  2.121865335568403\n -4.812929286618183\n  3.830806517794797\n  4.473154106340678\n  1.1504882948034867\n -0.06679610021048354\n -6.0673660040082655\n -6.610886147000896\n -1.2023303425145406\n\n\n\n\nCode\ndesign_partial = filter(design) do row\n    subj = parse(Int, row.subj[2:end])\n    item = parse(Int, row.item[2:end])\n    # for even-numbered subjects, we keep all conditions\n    # for odd-numbered subjects, we keep only the two \"odd\" items,\n    # i.e. the first and last conditions\n    return iseven(subj) || isodd(item)\nend\nsort!(unique!(select(design_partial, :subj, :frequency)), :subj)\n\n\n100√ó2 DataFrame75 rows omitted\n\n\n\nRow\nsubj\nfrequency\n\n\n\nString\nString\n\n\n\n\n1\nS01\nhigh\n\n\n2\nS01\nlow\n\n\n3\nS02\nhigh\n\n\n4\nS02\nmedium\n\n\n5\nS02\nlow\n\n\n6\nS03\nhigh\n\n\n7\nS03\nlow\n\n\n8\nS04\nhigh\n\n\n9\nS04\nmedium\n\n\n10\nS04\nlow\n\n\n11\nS05\nhigh\n\n\n12\nS05\nlow\n\n\n13\nS06\nhigh\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n89\nS36\nmedium\n\n\n90\nS36\nlow\n\n\n91\nS37\nhigh\n\n\n92\nS37\nlow\n\n\n93\nS38\nhigh\n\n\n94\nS38\nmedium\n\n\n95\nS38\nlow\n\n\n96\nS39\nhigh\n\n\n97\nS39\nlow\n\n\n98\nS40\nhigh\n\n\n99\nS40\nmedium\n\n\n100\nS40\nlow\n\n\n\n\n\n\n\n\nCode\nm1 = let contrasts, form\n    contrasts = Dict(:frequency =&gt; HelmertCoding(base=\"high\"))\n    form = @formula(dv ~ 1 + frequency +\n                    (1 + frequency | subj))\n    fit(MixedModel, form, design_partial; contrasts, progress)\nend\n\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n0.9190\n0.2485\n3.70\n0.0002\n1.2290\n\n\nfrequency: low\n-3.5388\n0.1555\n-22.76\n&lt;1e-99\n0.6575\n\n\nfrequency: medium\n-1.7119\n0.3260\n-5.25\n&lt;1e-06\n1.8629\n\n\nResidual\n1.0343\n\n\n\n\n\n\n\n\n\n\n\nCode\nshrinkageplot(m1)\n\n\n\n\n\n\n\nCode\ncaterpillar(m1; orderby=nothing, vline_at_zero=true)\n\n\n\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.\n\n\n\n Back to top",
    "crumbs": [
      "Worked examples",
      "Partially-within subjects designs"
    ]
  },
  {
    "objectID": "profiling.html",
    "href": "profiling.html",
    "title": "Confidence intervals from profiled objective",
    "section": "",
    "text": "Statistical methods that are based on probability models can be used to provide us with a ‚Äúbest guess‚Äù of the value of parameters, such as the effect of a particular experimental treatment, in the form of a parameter estimate. In addition, the probability model can be used to assess the uncertainty in the estimate.\nOften the information about the uncertainty is reduced to a single number, a p-value for a test of a null hypothesis, such as the effect being zero, versus the alternative of a non-zero effect. But quoting a single number from a model fit to experimental data, which may have required considerable effort and expense to obtain, will often mean discarding a considerable amount of the information in the data. In the days when computing was expensive and labor-intensive this may have been unavoidable. However, modern computing hardware and software systems provide us with the opportunity of much more intensive evaluation of the uncertainty. At a minimum, instead of focussing solely on the question of whether a coefficient could reasonably be zero, we can formulate confidence intervals on individual parameter estimates or confidence regions on groups of parameters.\nWe have seen the used of a parametric bootstrap to create a sample from the distribution of the estimators of the parameters, and how such samples can be used to create coverage intervals. The bootstrap is based on simulating response vectors from the model that has been fit to the observed data and refitting the same model to these simulated responses.\nIn this section we explore another approach based on refitting the model, keeping the same responses but holding one of the parameters fixed at a specified value.\n\n\nLoad the packages to be used\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing MixedModels\nusing MixedModelsMakie\nusing Random\nusing SMLP2025: dataset\n\nconst progress=false\n\n\nLoad the data and define the contrasts so that the coefficients for each of the experimental variables, load, spkr and prec, are positive.\n\ncontrasts = Dict( # base levels so estimates for speed are positive\n  :load =&gt; EffectsCoding(; base=\"yes\"),\n  :prec =&gt; EffectsCoding(; base=\"break\"),\n  :spkr =&gt; EffectsCoding(; base=\"old\"),\n)\nkb07 = Table(dataset(:kb07))\n\nTable with 7 columns and 1789 rows:\n      subj  item  spkr  prec      load  rt_trunc  rt_raw\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ S030  I01   new   break     yes   2267      2267\n 2  ‚îÇ S030  I02   old   maintain  no    3856      3856\n 3  ‚îÇ S030  I03   old   break     no    1567      1567\n 4  ‚îÇ S030  I04   new   maintain  no    1732      1732\n 5  ‚îÇ S030  I05   new   break     no    2660      2660\n 6  ‚îÇ S030  I06   old   maintain  yes   2763      2763\n 7  ‚îÇ S030  I07   old   break     yes   3528      3528\n 8  ‚îÇ S030  I08   new   maintain  yes   1741      1741\n 9  ‚îÇ S030  I09   new   break     yes   3692      3692\n 10 ‚îÇ S030  I10   old   maintain  no    1949      1949\n 11 ‚îÇ S030  I11   old   break     no    2189      2189\n 12 ‚îÇ S030  I12   new   maintain  no    2207      2207\n 13 ‚îÇ S030  I13   new   break     no    2078      2078\n 14 ‚îÇ S030  I14   old   maintain  yes   1901      1901\n 15 ‚îÇ S030  I15   old   break     yes   4015      4015\n 16 ‚îÇ S030  I16   new   maintain  yes   1880      1880\n 17 ‚îÇ S030  I17   new   break     yes   1444      1444\n ‚ãÆ  ‚îÇ  ‚ãÆ     ‚ãÆ     ‚ãÆ       ‚ãÆ       ‚ãÆ       ‚ãÆ        ‚ãÆ\n\n\nNow we fit and profile a model. The response is defined as 1000 / rt_raw where rt_raw is measured in milliseconds. Thus the response being modeled is the speed measured in responses per second.\n\npr01 = let f = @formula 1000 / rt_raw ~\n    1 + load + spkr + prec + (1 + prec | item) + (1 | subj)\n  profile(fit(MixedModel, f, kb07; contrasts, progress))\nend\nprintln(pr01.m) # model is a property of the profile object\n\nLinear mixed model fit by maximum likelihood\n :(1000 / rt_raw) ~ 1 + load + spkr + prec + (1 + prec | item) + (1 | subj)\n   logLik   -2 logLik     AIC       AICc        BIC    \n   846.2869 -1692.5738 -1674.5738 -1674.4726 -1625.1691\n\nVariance components:\n             Column      Variance  Std.Dev.   Corr.\nitem     (Intercept)     0.0061053 0.0781364\n         prec: maintain  0.0020476 0.0452502 -0.21\nsubj     (Intercept)     0.0054186 0.0736113\nResidual                 0.0194484 0.1394577\n Number of obs: 1789; levels of grouping factors: 32, 56\n\n  Fixed-effects parameters:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n                    Coef.  Std. Error      z  Pr(&gt;|z|)\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n(Intercept)     0.531523   0.0172749   30.77    &lt;1e-99\nload: no        0.0212959  0.00329731   6.46    &lt;1e-09\nspkr: new       0.011218   0.00329732   3.40    0.0007\nprec: maintain  0.0698293  0.00865212   8.07    &lt;1e-15\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n\nEvaluation of pr01 is similar to other model fits in these notes except that the call to fit is wrapped in a call to profile. Because the object returned from profile includes the original model fit as its m property, it is not necessary to save the original model fit separately.\n\n\n\nThe information from the profile is encapsulated in a table.\n\npr01.tbl\n\nTable with 15 columns and 249 rows:\n      p  Œ∂          Œ≤1        Œ≤2         Œ≤3         Œ≤4         œÉ         ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ œÉ  -4.11624   0.531525  0.021298   0.0112154  0.0698319  0.130088  ‚ãØ\n 2  ‚îÇ œÉ  -3.59106   0.531525  0.0212977  0.0112157  0.0698316  0.131224  ‚ãØ\n 3  ‚îÇ œÉ  -3.06898   0.531524  0.0212975  0.011216   0.0698313  0.13237   ‚ãØ\n 4  ‚îÇ œÉ  -2.54996   0.531524  0.0212972  0.0112164  0.069831   0.133526  ‚ãØ\n 5  ‚îÇ œÉ  -2.03399   0.531524  0.021297   0.0112167  0.0698307  0.134692  ‚ãØ\n 6  ‚îÇ œÉ  -1.52104   0.531524  0.0212967  0.011217   0.0698303  0.135868  ‚ãØ\n 7  ‚îÇ œÉ  -1.01107   0.531523  0.0212964  0.0112173  0.06983    0.137054  ‚ãØ\n 8  ‚îÇ œÉ  -0.504067  0.531523  0.0212961  0.0112177  0.0698297  0.138251  ‚ãØ\n 9  ‚îÇ œÉ  0.0        0.531523  0.0212959  0.011218   0.0698293  0.139458  ‚ãØ\n 10 ‚îÇ œÉ  0.501151   0.531523  0.0212956  0.0112184  0.069829   0.140675  ‚ãØ\n 11 ‚îÇ œÉ  0.999416   0.531522  0.0212953  0.0112187  0.0698286  0.141904  ‚ãØ\n 12 ‚îÇ œÉ  1.49482    0.531522  0.021295   0.0112191  0.0698282  0.143143  ‚ãØ\n 13 ‚îÇ œÉ  1.98739    0.531522  0.0212947  0.0112195  0.0698279  0.144392  ‚ãØ\n 14 ‚îÇ œÉ  2.47714    0.531521  0.0212944  0.0112199  0.0698275  0.145653  ‚ãØ\n 15 ‚îÇ œÉ  2.9641     0.531521  0.021294   0.0112202  0.0698271  0.146925  ‚ãØ\n 16 ‚îÇ œÉ  3.4483     0.531521  0.0212937  0.0112206  0.0698267  0.148208  ‚ãØ\n 17 ‚îÇ œÉ  3.92976    0.53152   0.0212934  0.011221   0.0698263  0.149502  ‚ãØ\n ‚ãÆ  ‚îÇ ‚ãÆ      ‚ãÆ         ‚ãÆ          ‚ãÆ          ‚ãÆ          ‚ãÆ         ‚ãÆ      ‚ã±\n\n\nEach row of the table summarizes a fit of the original model to the original data but with one of the parameters held fixed. For the first 18 rows of the table, the parameter being held fixed is \\(\\sigma\\), as shown in the p column. In the next set of rows the parameter being held fixed will be \\(\\beta_1\\), the intercept.\nThere are blocks of rows for the fixed-effects (\\(\\boldsymbol{\\beta}\\)) parameters, the variance components (on the scale of a standard deviation), and the \\(\\boldsymbol{\\theta}\\) parameters that generate the covariance factor \\(\\boldsymbol{\\Lambda}_{\\boldsymbol{\\theta}}\\). (At present the correlation parameters are not profiled - we may add them later but that computation is rather awkward.)\n\nshow(unique(pr01.tbl.p))\n\n[:œÉ, :Œ≤1, :Œ≤2, :Œ≤3, :Œ≤4, :Œ∏1, :Œ∏2, :Œ∏3, :Œ∏4, :œÉ1, :œÉ2, :œÉ3]\n\n\nTo reiterate, the first row contains the parameter estimates for this model fit to the original response values with the constraint that \\(\\sigma=0.130088\\), instead of the global estimate \\(\\hat{\\sigma}=0.139458\\) in the row for which \\(\\zeta=0.0\\).\nThe global estimates are included in every block at the row for which \\(\\zeta=0.0\\).\n\nfilter(r -&gt; iszero(r.Œ∂), pr01.tbl)\n\nTable with 15 columns and 12 rows:\n      p   Œ∂    Œ≤1        Œ≤2         Œ≤3        Œ≤4         œÉ         œÉ1         ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ œÉ   0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 2  ‚îÇ Œ≤1  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 3  ‚îÇ Œ≤2  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 4  ‚îÇ Œ≤3  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 5  ‚îÇ Œ≤4  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 6  ‚îÇ Œ∏1  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 7  ‚îÇ Œ∏2  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 8  ‚îÇ Œ∏3  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 9  ‚îÇ Œ∏4  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 10 ‚îÇ œÉ1  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 11 ‚îÇ œÉ2  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 12 ‚îÇ œÉ3  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n\n\nThe \\(\\zeta\\) column in this table is a measure of the quality of the fit from the parameters in each row, relative to the global parameter estimates, as measured by the change in the objective (negative twice the log-likelihood).\nThe minimum value for the objective is that at the global parameter estimates. The change in the objective when we constrain one parameter to a particular value has approximately a \\(\\chi^2\\) distribution on 1 degree of freedom, which is the square of a standard normal distribution, \\(\\mathcal{Z}^2\\). We can convert this change in the quality of the fit to the scale of the standard normal distribution by taking the signed square root, which is the square root of the change in the objective with the sign of \\(\\psi-\\hat{\\psi}\\) where \\(\\psi\\) represents the parameter being profiled. This is the value labelled \\(\\zeta\\) in the table.\nTo review:\n\nEach row in the table is the result of re-fitting the original model with the parameter in the p column held fixed at a particular value, as shown in the column for that parameter.\nThe \\(\\zeta\\) column is the signed square root of the change in the objective from the global parameter estimates.\nThus in the block of rows where \\(\\sigma\\) is held fixed, the \\(\\zeta\\) values in rows for which \\(\\sigma&lt;\\hat\\sigma\\) are negative and those for which \\(\\sigma &gt; \\hat\\sigma\\) have positive values of \\(\\zeta\\).\nRows in which \\(\\zeta=0.0\\) are the global parameter estimates.\n\n\n\n\nFigure¬†1 shows, for each of the fixed effects parameters, \\(\\zeta\\) versus the parameter value.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 350)), pr01; ptyp='Œ≤')\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†1: Œ∂ versus the value of the coefficient for the fixed-effects parameters in a model of response speed for the kb07 data.\n\n\n\n\nThe lines on these panels are read like normal probability plots, i.e.¬†QQ plots against a standard normal distribution. Those on the \\(\\beta_2\\) and \\(\\beta_3\\) panels are, to the resolution of the plot, straight lines which indicates that the estimators of those parameters are normally distributed over the region of interest.\nThe points in the \\(\\beta_1\\) and \\(\\beta_4\\) panels are slightly over-dispersed relative to the straight line, which means that the estimators of these parameters are distributed like a T-distribution with a moderate number of degrees of freedom.\nThe profile-\\(\\zeta\\) function can be used to generate confidence intervals on the parameters\n\nconfint(pr01)\n\nDictTable with 3 columns and 8 rows:\n par   estimate   lower       upper\n ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Œ≤1  ‚îÇ 0.531523   0.497103    0.565942\n Œ≤2  ‚îÇ 0.0212959  0.0148295   0.0277621\n Œ≤3  ‚îÇ 0.011218   0.00475175  0.0176844\n Œ≤4  ‚îÇ 0.0698293  0.0523046   0.0873562\n œÉ   ‚îÇ 0.139458   0.13486     0.144322\n œÉ1  ‚îÇ 0.0781364  0.0612443   0.103257\n œÉ2  ‚îÇ 0.0452502  0.0338521   0.0618819\n œÉ3  ‚îÇ 0.0736113  0.0600844   0.0916852\n\n\nas shown in Figure¬†2, which shows the absolute value of \\(\\zeta\\), which is simply the square root of the difference in the objective, versus the parameter being profiled.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 330)), pr01; ptyp='Œ≤', absv=true)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†2: Absolute value of Œ∂ versus value of the coefficient for the fixed-effects parameters in a model of response speed for the kb07 data. The horizontal lines are confidence intervals with nominal 50%, 80%, 90%, 95% and 99% confidence.\n\n\n\n\nThe 95% confidence intervals are the second horizontal lines from the top in each panel, at 1.96 on the vertical scale.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 330)), pr01; ptyp='œÉ', absv=true)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†3: Absolute value of Œ∂ versus value of the coefficient for the variance component parameters in a model of response speed for the kb07 data. The horizontal lines are confidence intervals with nominal 50%, 80%, 90%, 95% and 99% confidence.\n\n\n\n\nFigure¬†3 shows similar confidence intervals on the parameters representing standard deviations as does Figure¬†4 for the \\(\\theta\\) parameters.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 330)), pr01; ptyp='Œ∏', absv=true)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†4: Absolute value of Œ∂ versus parameter value for the Œ∏ parameters in a model of response speed for the kb07 data. The horizontal lines are confidence intervals with nominal 50%, 80%, 90%, 95% and 99% confidence.",
    "crumbs": [
      "Bootstrap and profiling",
      "Confidence intervals from profiled objective"
    ]
  },
  {
    "objectID": "profiling.html#profiling-a-model-for-the-kb07-data",
    "href": "profiling.html#profiling-a-model-for-the-kb07-data",
    "title": "Confidence intervals from profiled objective",
    "section": "",
    "text": "Load the packages to be used\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie\nusing MixedModels\nusing MixedModelsMakie\nusing Random\nusing SMLP2025: dataset\n\nconst progress=false\n\n\nLoad the data and define the contrasts so that the coefficients for each of the experimental variables, load, spkr and prec, are positive.\n\ncontrasts = Dict( # base levels so estimates for speed are positive\n  :load =&gt; EffectsCoding(; base=\"yes\"),\n  :prec =&gt; EffectsCoding(; base=\"break\"),\n  :spkr =&gt; EffectsCoding(; base=\"old\"),\n)\nkb07 = Table(dataset(:kb07))\n\nTable with 7 columns and 1789 rows:\n      subj  item  spkr  prec      load  rt_trunc  rt_raw\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ S030  I01   new   break     yes   2267      2267\n 2  ‚îÇ S030  I02   old   maintain  no    3856      3856\n 3  ‚îÇ S030  I03   old   break     no    1567      1567\n 4  ‚îÇ S030  I04   new   maintain  no    1732      1732\n 5  ‚îÇ S030  I05   new   break     no    2660      2660\n 6  ‚îÇ S030  I06   old   maintain  yes   2763      2763\n 7  ‚îÇ S030  I07   old   break     yes   3528      3528\n 8  ‚îÇ S030  I08   new   maintain  yes   1741      1741\n 9  ‚îÇ S030  I09   new   break     yes   3692      3692\n 10 ‚îÇ S030  I10   old   maintain  no    1949      1949\n 11 ‚îÇ S030  I11   old   break     no    2189      2189\n 12 ‚îÇ S030  I12   new   maintain  no    2207      2207\n 13 ‚îÇ S030  I13   new   break     no    2078      2078\n 14 ‚îÇ S030  I14   old   maintain  yes   1901      1901\n 15 ‚îÇ S030  I15   old   break     yes   4015      4015\n 16 ‚îÇ S030  I16   new   maintain  yes   1880      1880\n 17 ‚îÇ S030  I17   new   break     yes   1444      1444\n ‚ãÆ  ‚îÇ  ‚ãÆ     ‚ãÆ     ‚ãÆ       ‚ãÆ       ‚ãÆ       ‚ãÆ        ‚ãÆ\n\n\nNow we fit and profile a model. The response is defined as 1000 / rt_raw where rt_raw is measured in milliseconds. Thus the response being modeled is the speed measured in responses per second.\n\npr01 = let f = @formula 1000 / rt_raw ~\n    1 + load + spkr + prec + (1 + prec | item) + (1 | subj)\n  profile(fit(MixedModel, f, kb07; contrasts, progress))\nend\nprintln(pr01.m) # model is a property of the profile object\n\nLinear mixed model fit by maximum likelihood\n :(1000 / rt_raw) ~ 1 + load + spkr + prec + (1 + prec | item) + (1 | subj)\n   logLik   -2 logLik     AIC       AICc        BIC    \n   846.2869 -1692.5738 -1674.5738 -1674.4726 -1625.1691\n\nVariance components:\n             Column      Variance  Std.Dev.   Corr.\nitem     (Intercept)     0.0061053 0.0781364\n         prec: maintain  0.0020476 0.0452502 -0.21\nsubj     (Intercept)     0.0054186 0.0736113\nResidual                 0.0194484 0.1394577\n Number of obs: 1789; levels of grouping factors: 32, 56\n\n  Fixed-effects parameters:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n                    Coef.  Std. Error      z  Pr(&gt;|z|)\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n(Intercept)     0.531523   0.0172749   30.77    &lt;1e-99\nload: no        0.0212959  0.00329731   6.46    &lt;1e-09\nspkr: new       0.011218   0.00329732   3.40    0.0007\nprec: maintain  0.0698293  0.00865212   8.07    &lt;1e-15\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n\nEvaluation of pr01 is similar to other model fits in these notes except that the call to fit is wrapped in a call to profile. Because the object returned from profile includes the original model fit as its m property, it is not necessary to save the original model fit separately.",
    "crumbs": [
      "Bootstrap and profiling",
      "Confidence intervals from profiled objective"
    ]
  },
  {
    "objectID": "profiling.html#fixing-values-of-parameters",
    "href": "profiling.html#fixing-values-of-parameters",
    "title": "Confidence intervals from profiled objective",
    "section": "",
    "text": "The information from the profile is encapsulated in a table.\n\npr01.tbl\n\nTable with 15 columns and 249 rows:\n      p  Œ∂          Œ≤1        Œ≤2         Œ≤3         Œ≤4         œÉ         ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ œÉ  -4.11624   0.531525  0.021298   0.0112154  0.0698319  0.130088  ‚ãØ\n 2  ‚îÇ œÉ  -3.59106   0.531525  0.0212977  0.0112157  0.0698316  0.131224  ‚ãØ\n 3  ‚îÇ œÉ  -3.06898   0.531524  0.0212975  0.011216   0.0698313  0.13237   ‚ãØ\n 4  ‚îÇ œÉ  -2.54996   0.531524  0.0212972  0.0112164  0.069831   0.133526  ‚ãØ\n 5  ‚îÇ œÉ  -2.03399   0.531524  0.021297   0.0112167  0.0698307  0.134692  ‚ãØ\n 6  ‚îÇ œÉ  -1.52104   0.531524  0.0212967  0.011217   0.0698303  0.135868  ‚ãØ\n 7  ‚îÇ œÉ  -1.01107   0.531523  0.0212964  0.0112173  0.06983    0.137054  ‚ãØ\n 8  ‚îÇ œÉ  -0.504067  0.531523  0.0212961  0.0112177  0.0698297  0.138251  ‚ãØ\n 9  ‚îÇ œÉ  0.0        0.531523  0.0212959  0.011218   0.0698293  0.139458  ‚ãØ\n 10 ‚îÇ œÉ  0.501151   0.531523  0.0212956  0.0112184  0.069829   0.140675  ‚ãØ\n 11 ‚îÇ œÉ  0.999416   0.531522  0.0212953  0.0112187  0.0698286  0.141904  ‚ãØ\n 12 ‚îÇ œÉ  1.49482    0.531522  0.021295   0.0112191  0.0698282  0.143143  ‚ãØ\n 13 ‚îÇ œÉ  1.98739    0.531522  0.0212947  0.0112195  0.0698279  0.144392  ‚ãØ\n 14 ‚îÇ œÉ  2.47714    0.531521  0.0212944  0.0112199  0.0698275  0.145653  ‚ãØ\n 15 ‚îÇ œÉ  2.9641     0.531521  0.021294   0.0112202  0.0698271  0.146925  ‚ãØ\n 16 ‚îÇ œÉ  3.4483     0.531521  0.0212937  0.0112206  0.0698267  0.148208  ‚ãØ\n 17 ‚îÇ œÉ  3.92976    0.53152   0.0212934  0.011221   0.0698263  0.149502  ‚ãØ\n ‚ãÆ  ‚îÇ ‚ãÆ      ‚ãÆ         ‚ãÆ          ‚ãÆ          ‚ãÆ          ‚ãÆ         ‚ãÆ      ‚ã±\n\n\nEach row of the table summarizes a fit of the original model to the original data but with one of the parameters held fixed. For the first 18 rows of the table, the parameter being held fixed is \\(\\sigma\\), as shown in the p column. In the next set of rows the parameter being held fixed will be \\(\\beta_1\\), the intercept.\nThere are blocks of rows for the fixed-effects (\\(\\boldsymbol{\\beta}\\)) parameters, the variance components (on the scale of a standard deviation), and the \\(\\boldsymbol{\\theta}\\) parameters that generate the covariance factor \\(\\boldsymbol{\\Lambda}_{\\boldsymbol{\\theta}}\\). (At present the correlation parameters are not profiled - we may add them later but that computation is rather awkward.)\n\nshow(unique(pr01.tbl.p))\n\n[:œÉ, :Œ≤1, :Œ≤2, :Œ≤3, :Œ≤4, :Œ∏1, :Œ∏2, :Œ∏3, :Œ∏4, :œÉ1, :œÉ2, :œÉ3]\n\n\nTo reiterate, the first row contains the parameter estimates for this model fit to the original response values with the constraint that \\(\\sigma=0.130088\\), instead of the global estimate \\(\\hat{\\sigma}=0.139458\\) in the row for which \\(\\zeta=0.0\\).\nThe global estimates are included in every block at the row for which \\(\\zeta=0.0\\).\n\nfilter(r -&gt; iszero(r.Œ∂), pr01.tbl)\n\nTable with 15 columns and 12 rows:\n      p   Œ∂    Œ≤1        Œ≤2         Œ≤3        Œ≤4         œÉ         œÉ1         ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ œÉ   0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 2  ‚îÇ Œ≤1  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 3  ‚îÇ Œ≤2  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 4  ‚îÇ Œ≤3  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 5  ‚îÇ Œ≤4  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 6  ‚îÇ Œ∏1  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 7  ‚îÇ Œ∏2  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 8  ‚îÇ Œ∏3  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 9  ‚îÇ Œ∏4  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 10 ‚îÇ œÉ1  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 11 ‚îÇ œÉ2  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n 12 ‚îÇ œÉ3  0.0  0.531523  0.0212959  0.011218  0.0698293  0.139458  0.0781364  ‚ãØ\n\n\nThe \\(\\zeta\\) column in this table is a measure of the quality of the fit from the parameters in each row, relative to the global parameter estimates, as measured by the change in the objective (negative twice the log-likelihood).\nThe minimum value for the objective is that at the global parameter estimates. The change in the objective when we constrain one parameter to a particular value has approximately a \\(\\chi^2\\) distribution on 1 degree of freedom, which is the square of a standard normal distribution, \\(\\mathcal{Z}^2\\). We can convert this change in the quality of the fit to the scale of the standard normal distribution by taking the signed square root, which is the square root of the change in the objective with the sign of \\(\\psi-\\hat{\\psi}\\) where \\(\\psi\\) represents the parameter being profiled. This is the value labelled \\(\\zeta\\) in the table.\nTo review:\n\nEach row in the table is the result of re-fitting the original model with the parameter in the p column held fixed at a particular value, as shown in the column for that parameter.\nThe \\(\\zeta\\) column is the signed square root of the change in the objective from the global parameter estimates.\nThus in the block of rows where \\(\\sigma\\) is held fixed, the \\(\\zeta\\) values in rows for which \\(\\sigma&lt;\\hat\\sigma\\) are negative and those for which \\(\\sigma &gt; \\hat\\sigma\\) have positive values of \\(\\zeta\\).\nRows in which \\(\\zeta=0.0\\) are the global parameter estimates.",
    "crumbs": [
      "Bootstrap and profiling",
      "Confidence intervals from profiled objective"
    ]
  },
  {
    "objectID": "profiling.html#profile-zeta-plots",
    "href": "profiling.html#profile-zeta-plots",
    "title": "Confidence intervals from profiled objective",
    "section": "",
    "text": "Figure¬†1 shows, for each of the fixed effects parameters, \\(\\zeta\\) versus the parameter value.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 350)), pr01; ptyp='Œ≤')\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†1: Œ∂ versus the value of the coefficient for the fixed-effects parameters in a model of response speed for the kb07 data.\n\n\n\n\nThe lines on these panels are read like normal probability plots, i.e.¬†QQ plots against a standard normal distribution. Those on the \\(\\beta_2\\) and \\(\\beta_3\\) panels are, to the resolution of the plot, straight lines which indicates that the estimators of those parameters are normally distributed over the region of interest.\nThe points in the \\(\\beta_1\\) and \\(\\beta_4\\) panels are slightly over-dispersed relative to the straight line, which means that the estimators of these parameters are distributed like a T-distribution with a moderate number of degrees of freedom.\nThe profile-\\(\\zeta\\) function can be used to generate confidence intervals on the parameters\n\nconfint(pr01)\n\nDictTable with 3 columns and 8 rows:\n par   estimate   lower       upper\n ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Œ≤1  ‚îÇ 0.531523   0.497103    0.565942\n Œ≤2  ‚îÇ 0.0212959  0.0148295   0.0277621\n Œ≤3  ‚îÇ 0.011218   0.00475175  0.0176844\n Œ≤4  ‚îÇ 0.0698293  0.0523046   0.0873562\n œÉ   ‚îÇ 0.139458   0.13486     0.144322\n œÉ1  ‚îÇ 0.0781364  0.0612443   0.103257\n œÉ2  ‚îÇ 0.0452502  0.0338521   0.0618819\n œÉ3  ‚îÇ 0.0736113  0.0600844   0.0916852\n\n\nas shown in Figure¬†2, which shows the absolute value of \\(\\zeta\\), which is simply the square root of the difference in the objective, versus the parameter being profiled.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 330)), pr01; ptyp='Œ≤', absv=true)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†2: Absolute value of Œ∂ versus value of the coefficient for the fixed-effects parameters in a model of response speed for the kb07 data. The horizontal lines are confidence intervals with nominal 50%, 80%, 90%, 95% and 99% confidence.\n\n\n\n\nThe 95% confidence intervals are the second horizontal lines from the top in each panel, at 1.96 on the vertical scale.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 330)), pr01; ptyp='œÉ', absv=true)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†3: Absolute value of Œ∂ versus value of the coefficient for the variance component parameters in a model of response speed for the kb07 data. The horizontal lines are confidence intervals with nominal 50%, 80%, 90%, 95% and 99% confidence.\n\n\n\n\nFigure¬†3 shows similar confidence intervals on the parameters representing standard deviations as does Figure¬†4 for the \\(\\theta\\) parameters.\n\n\nCode\nzetaplot!(Figure(; resolution=(1200, 330)), pr01; ptyp='Œ∏', absv=true)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†4: Absolute value of Œ∂ versus parameter value for the Œ∏ parameters in a model of response speed for the kb07 data. The horizontal lines are confidence intervals with nominal 50%, 80%, 90%, 95% and 99% confidence.",
    "crumbs": [
      "Bootstrap and profiling",
      "Confidence intervals from profiled objective"
    ]
  },
  {
    "objectID": "shrinkageplot.html",
    "href": "shrinkageplot.html",
    "title": "More on shrinkage plots",
    "section": "",
    "text": "I have stated that the likelihood criterion used to fit linear mixed-effects can be considered as balancing fidelity to the data (i.e.¬†fits the observed data well) versus model complexity.\nThis is similar to some of the criterion used in Machine Learning (ML), except that the criterion for LMMs has a rigorous mathematical basis.\nIn the shrinkage plot we consider the values of the random-effects coefficients for the fitted values of the model versus those from a model in which there is no penalty for model complexity.\nIf there is strong subject-to-subject variation then the model fit will tend to values of the random effects similar to those without a penalty on complexity.\nIf the random effects term is not contributing much (i.e.¬†it is ‚Äúinert‚Äù) then the random effects will be shrunk considerably towards zero in some directions.\nCode\nusing CairoMakie\nusing DataFrames\nusing LinearAlgebra\nusing MixedModels\nusing MixedModelsMakie\nusing Random\nusing ProgressMeter\n\nconst progress = false\n\n\nfalse\nLoad the kb07 data set (don‚Äôt tell Reinhold that I used these data).\nkb07 = MixedModels.dataset(:kb07)\n\nArrow.Table with 1789 rows, 7 columns, and schema:\n :subj      String\n :item      String\n :spkr      String\n :prec      String\n :load      String\n :rt_trunc  Int16\n :rt_raw    Int16\ncontrasts = Dict(\n  :spkr =&gt; HelmertCoding(),\n  :prec =&gt; HelmertCoding(),\n  :load =&gt; HelmertCoding(),\n)\nm1 = let\n  form = @formula(\n    rt_trunc ~\n      1 +\n      spkr * prec * load +\n      (1 + spkr + prec + load | subj) +\n      (1 + spkr + prec + load | item)\n  )\n  fit(MixedModel, form, kb07; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\nœÉ_item\n\n\n(Intercept)\n2181.6729\n77.3131\n28.22\n&lt;1e-99\n301.6736\n362.3182\n\n\nspkr: old\n67.7490\n18.2747\n3.71\n0.0002\n42.5441\n40.7073\n\n\nprec: maintain\n-333.9206\n47.1388\n-7.08\n&lt;1e-11\n61.9978\n246.8078\n\n\nload: yes\n78.7702\n19.5387\n4.03\n&lt;1e-04\n64.9874\n42.5139\n\n\nspkr: old & prec: maintain\n-21.9655\n15.8070\n-1.39\n0.1646\n\n\n\n\nspkr: old & load: yes\n18.3838\n15.8070\n1.16\n0.2448\n\n\n\n\nprec: maintain & load: yes\n4.5333\n15.8070\n0.29\n0.7743\n\n\n\n\nspkr: old & prec: maintain & load: yes\n23.6072\n15.8070\n1.49\n0.1353\n\n\n\n\nResidual\n668.5371\nVarCorr(m1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\n\n\nsubj\n(Intercept)\n91006.9887\n301.6736\n\n\n\n\n\n\nspkr: old\n1810.0012\n42.5441\n+0.79\n\n\n\n\n\nprec: maintain\n3843.7268\n61.9978\n-0.59\n+0.02\n\n\n\n\nload: yes\n4223.3647\n64.9874\n+0.36\n+0.85\n+0.54\n\n\nitem\n(Intercept)\n131274.4558\n362.3182\n\n\n\n\n\n\nspkr: old\n1657.0830\n40.7073\n+0.44\n\n\n\n\n\nprec: maintain\n60914.1141\n246.8078\n-0.69\n+0.35\n\n\n\n\nload: yes\n1807.4303\n42.5139\n+0.32\n+0.15\n-0.14\n\n\nResidual\n\n446941.7901\n668.5371\nissingular(m1)\n\ntrue\nprint(m1)\n\nLinear mixed model fit by maximum likelihood\n rt_trunc ~ 1 + spkr + prec + load + spkr & prec + spkr & load + prec & load + spkr & prec & load + (1 + spkr + prec + load | subj) + (1 + spkr + prec + load | item)\n    logLik   -2 logLik      AIC         AICc        BIC     \n -14318.5619  28637.1239  28695.1239  28696.1131  28854.3168\n\nVariance components:\n             Column       Variance  Std.Dev.   Corr.\nsubj     (Intercept)      91006.9887 301.6736\n         spkr: old         1810.0012  42.5441 +0.79\n         prec: maintain    3843.7268  61.9978 -0.59 +0.02\n         load: yes         4223.3647  64.9874 +0.36 +0.85 +0.54\nitem     (Intercept)     131274.4558 362.3182\n         spkr: old         1657.0830  40.7073 +0.44\n         prec: maintain   60914.1141 246.8078 -0.69 +0.35\n         load: yes         1807.4303  42.5139 +0.32 +0.15 -0.14\nResidual                 446941.7901 668.5371\n Number of obs: 1789; levels of grouping factors: 56, 32\n\n  Fixed-effects parameters:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n                                             Coef.  Std. Error      z  Pr(&gt;|z|)\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n(Intercept)                             2181.67        77.3131  28.22    &lt;1e-99\nspkr: old                                 67.749       18.2747   3.71    0.0002\nprec: maintain                          -333.921       47.1388  -7.08    &lt;1e-11\nload: yes                                 78.7702      19.5387   4.03    &lt;1e-04\nspkr: old & prec: maintain               -21.9655      15.807   -1.39    0.1646\nspkr: old & load: yes                     18.3838      15.807    1.16    0.2448\nprec: maintain & load: yes                 4.53334     15.807    0.29    0.7743\nspkr: old & prec: maintain & load: yes    23.6072      15.807    1.49    0.1353\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ",
    "crumbs": [
      "Visualizations and diagnostics",
      "More on shrinkage plots"
    ]
  },
  {
    "objectID": "shrinkageplot.html#expressing-the-covariance-of-random-effects",
    "href": "shrinkageplot.html#expressing-the-covariance-of-random-effects",
    "title": "More on shrinkage plots",
    "section": "1 Expressing the covariance of random effects",
    "text": "1 Expressing the covariance of random effects\nEarlier today we mentioned that the parameters being optimized are from a ‚Äúmatrix square root‚Äù of the covariance matrix for the random effects. There is one such lower triangular matrix for each grouping factor.\n\nl1 = first(m1.Œª)   # Cholesky factor of relative covariance for subj\n\n4√ó4 LowerTriangular{Float64, Matrix{Float64}}:\n  0.451244    ‚ãÖ          ‚ãÖ           ‚ãÖ \n  0.0502516  0.0390451   ‚ãÖ           ‚ãÖ \n -0.0549019  0.074379   0.00732171   ‚ãÖ \n  0.0352204  0.0894228  0.0145792   0.0\n\n\nNotice the zero on the diagonal. A triangular matrix with zeros on the diagonal is singular.\n\nl2 = last(m1.Œª)    # this one is also singular\n\n4√ó4 LowerTriangular{Float64, Matrix{Float64}}:\n  0.541957    ‚ãÖ           ‚ãÖ          ‚ãÖ \n  0.0268894  0.0546312    ‚ãÖ          ‚ãÖ \n -0.252892   0.267823    0.024643    ‚ãÖ \n  0.0200364  0.00105896  0.0595843  0.0095462\n\n\nTo regenerate the covariance matrix we need to know that the covariance is not the square of l1, it is l1 * l1' (so that the result is symmetric) and multiplied by œÉÃÇ¬≤\n\nŒ£‚ÇÅ = varest(m1) .* (l1 * l1')\n\n4√ó4 Matrix{Float64}:\n  91007.0   10134.8     -11072.6     7103.25\n  10134.8    1810.0         64.9058  2351.54\n -11072.6      64.9058    3843.73    2156.16\n   7103.25   2351.54      2156.16    4223.36\n\n\n\ndiag(Œ£‚ÇÅ)  # compare to the variance column in the VarCorr output\n\n4-element Vector{Float64}:\n 91006.98870968402\n  1810.0012414879016\n  3843.7267826016114\n  4223.364731548873\n\n\n\nsqrt.(diag(Œ£‚ÇÅ))\n\n4-element Vector{Float64}:\n 301.6736460310778\n  42.54410936296471\n  61.99779659473078\n  64.98741979451772",
    "crumbs": [
      "Visualizations and diagnostics",
      "More on shrinkage plots"
    ]
  },
  {
    "objectID": "shrinkageplot.html#shrinkage-plots",
    "href": "shrinkageplot.html#shrinkage-plots",
    "title": "More on shrinkage plots",
    "section": "2 Shrinkage plots",
    "text": "2 Shrinkage plots\n\n\nCode\nshrinkageplot(m1)\n\n\n\n\n\n\n\nFigure¬†1: Shrinkage plot of model m1\n\n\n\n\nThe upper left panel shows the perfect negative correlation for those two components of the random effects.\n\nshrinkageplot(m1, :item)\n\n\n\n\n\nX1 = Int.(m1.X')\n\n8√ó1789 Matrix{Int64}:\n  1   1   1   1   1  1   1   1   1   1  ‚Ä¶   1   1   1   1   1   1   1  1   1\n -1   1   1  -1  -1  1   1  -1  -1   1      1  -1  -1   1   1  -1  -1  1   1\n -1   1  -1   1  -1  1  -1   1  -1   1     -1   1  -1   1  -1   1  -1  1  -1\n  1  -1  -1  -1  -1  1   1   1   1  -1      1   1   1  -1  -1  -1  -1  1   1\n  1   1  -1  -1   1  1  -1  -1   1   1     -1  -1   1   1  -1  -1   1  1  -1\n -1  -1  -1   1   1  1   1  -1  -1  -1  ‚Ä¶   1  -1  -1  -1  -1   1   1  1   1\n -1  -1   1  -1   1  1  -1   1  -1  -1     -1   1  -1  -1   1  -1   1  1  -1\n  1  -1   1   1  -1  1  -1  -1   1  -1     -1  -1   1  -1   1   1  -1  1  -1\n\n\n\nX1 * X1'\n\n8√ó8 Matrix{Int64}:\n 1789    -1    -1     3    -3     1     1     3\n   -1  1789    -3     1    -1     3     3     1\n   -1    -3  1789     1    -1     3     3     1\n    3     1     1  1789     3    -1    -1    -3\n   -3    -1    -1     3  1789     1     1     3\n    1     3     3    -1     1  1789    -3    -1\n    1     3     3    -1     1    -3  1789    -1\n    3     1     1    -3     3    -1    -1  1789",
    "crumbs": [
      "Visualizations and diagnostics",
      "More on shrinkage plots"
    ]
  },
  {
    "objectID": "shrinkageplot.html#how-to-interpret-a-shrinkage-plot",
    "href": "shrinkageplot.html#how-to-interpret-a-shrinkage-plot",
    "title": "More on shrinkage plots",
    "section": "3 How to interpret a shrinkage plot",
    "text": "3 How to interpret a shrinkage plot\n\nExtreme shrinkage (shrunk to a line or to a point) is easy to interpret ‚Äì the term is not providing benefit and can be removed.\nWhen the range of the blue dots (shrunk values) is comparable to those of the red dots (unshrunk) it indicates that the term after shrinkage is about as strong as without shrinkage.\nBy itself, this doesn‚Äôt mean that the term is important. In some ways you need to get a feeling for the absolute magnitude of the random effects in addition to the relative magnitude.\nSmall magnitude and small relative magnitude indicate you can drop that term",
    "crumbs": [
      "Visualizations and diagnostics",
      "More on shrinkage plots"
    ]
  },
  {
    "objectID": "shrinkageplot.html#conclusions-from-these-plots",
    "href": "shrinkageplot.html#conclusions-from-these-plots",
    "title": "More on shrinkage plots",
    "section": "4 Conclusions from these plots",
    "text": "4 Conclusions from these plots\n\nOnly the intercept for the subj appears to be contributing explanatory power\nFor the item both the intercept and the spkr appear to be contributing\n\n\nm2 = let\n  form = @formula(\n    rt_trunc ~\n      1 + prec * spkr * load + (1 | subj) + (1 + prec | item)\n  )\n  fit(MixedModel, form, kb07; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n2181.7582\n77.4709\n28.16\n&lt;1e-99\n364.7286\n298.1109\n\n\nprec: maintain\n-333.8582\n47.4629\n-7.03\n&lt;1e-11\n252.6687\n\n\n\nspkr: old\n67.8114\n16.0526\n4.22\n&lt;1e-04\n\n\n\n\nload: yes\n78.6849\n16.0525\n4.90\n&lt;1e-06\n\n\n\n\nprec: maintain & spkr: old\n-21.8802\n16.0525\n-1.36\n0.1729\n\n\n\n\nprec: maintain & load: yes\n4.4710\n16.0526\n0.28\n0.7806\n\n\n\n\nspkr: old & load: yes\n18.3214\n16.0526\n1.14\n0.2537\n\n\n\n\nprec: maintain & spkr: old & load: yes\n23.5219\n16.0525\n1.47\n0.1428\n\n\n\n\nResidual\n678.9318\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nitem\n(Intercept)\n133026.918\n364.729\n\n\n\n\nprec: maintain\n63841.496\n252.669\n-0.70\n\n\nsubj\n(Intercept)\n88870.080\n298.111\n\n\n\nResidual\n\n460948.432\n678.932\n\n\n\n\n\n\n\n\nCode\nshrinkageplot(m2)\n\n\n\n\n\n\n\nFigure¬†2: Shrinkage plot of model m2\n\n\n\n\n\nm3 = let\n  form = @formula(\n    rt_trunc ~\n      1 + prec + spkr + load + (1 | subj) + (1 + prec | item)\n  )\n  fit(MixedModel, form, kb07; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n2181.8526\n77.4681\n28.16\n&lt;1e-99\n364.7125\n298.0259\n\n\nprec: maintain\n-333.7906\n47.4472\n-7.03\n&lt;1e-11\n252.5212\n\n\n\nspkr: old\n67.8790\n16.0785\n4.22\n&lt;1e-04\n\n\n\n\nload: yes\n78.5904\n16.0785\n4.89\n&lt;1e-05\n\n\n\n\nResidual\n680.0319\n\n\n\n\n\n\n\n\n\n\n\nVarCorr(m3)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nitem\n(Intercept)\n133015.242\n364.713\n\n\n\n\nprec: maintain\n63766.935\n252.521\n-0.70\n\n\nsubj\n(Intercept)\n88819.438\n298.026\n\n\n\nResidual\n\n462443.388\n680.032\n\n\n\n\n\n\n\nrng = Random.seed!(1234321);\n\n\nm3btstrp = parametricbootstrap(rng, 2000, m3);\n\n\nDataFrame(shortestcovint(m3btstrp))\n\n9√ó5 DataFrame\n\n\n\nRow\ntype\ngroup\nnames\nlower\nupper\n\n\n\nString\nString?\nString?\nFloat64\nFloat64\n\n\n\n\n1\nŒ≤\nmissing\n(Intercept)\n2022.91\n2334.0\n\n\n2\nŒ≤\nmissing\nprec: maintain\n-430.238\n-239.803\n\n\n3\nŒ≤\nmissing\nspkr: old\n34.0592\n96.72\n\n\n4\nŒ≤\nmissing\nload: yes\n46.5349\n109.526\n\n\n5\nœÉ\nitem\n(Intercept)\n270.067\n451.969\n\n\n6\nœÉ\nitem\nprec: maintain\n181.737\n325.121\n\n\n7\nœÅ\nitem\n(Intercept), prec: maintain\n-0.907256\n-0.490089\n\n\n8\nœÉ\nsubj\n(Intercept)\n233.845\n364.506\n\n\n9\nœÉ\nresidual\nmissing\n657.341\n702.655\n\n\n\n\n\n\n\nridgeplot(m3btstrp)\n\n\n\n\n\n\nFigure¬†3: Ridge plot of the fixed-effects coefficients from the bootstrap sample\n\n\n\n\n\nridgeplot(m3btstrp; show_intercept=false)\n\n\n\n\n\n\nFigure¬†4: Ridge plot of the fixed-effects coefficients from the bootstrap sample (with the intercept)\n\n\n\n\n\nm4 = let\n  form = @formula(\n    rt_trunc ~\n      1 + prec + spkr + load + (1 + prec | item) + (1 | subj)\n  )\n  fit(MixedModel, form, kb07; contrasts, progress)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_item\nœÉ_subj\n\n\n(Intercept)\n2181.8526\n77.4681\n28.16\n&lt;1e-99\n364.7125\n298.0259\n\n\nprec: maintain\n-333.7906\n47.4472\n-7.03\n&lt;1e-11\n252.5212\n\n\n\nspkr: old\n67.8790\n16.0785\n4.22\n&lt;1e-04\n\n\n\n\nload: yes\n78.5904\n16.0785\n4.89\n&lt;1e-05\n\n\n\n\nResidual\n680.0319\n\n\n\n\n\n\n\n\n\n\n\nm4bstrp = parametricbootstrap(rng, 2000, m4);\n\n\nridgeplot(m4bstrp; show_intercept=false)\n\n\n\n\n\nDataFrame(shortestcovint(m4bstrp))\n\n9√ó5 DataFrame\n\n\n\nRow\ntype\ngroup\nnames\nlower\nupper\n\n\n\nString\nString?\nString?\nFloat64\nFloat64\n\n\n\n\n1\nŒ≤\nmissing\n(Intercept)\n2034.15\n2335.45\n\n\n2\nŒ≤\nmissing\nprec: maintain\n-427.768\n-248.338\n\n\n3\nŒ≤\nmissing\nspkr: old\n35.6938\n97.8081\n\n\n4\nŒ≤\nmissing\nload: yes\n45.3095\n107.368\n\n\n5\nœÉ\nitem\n(Intercept)\n260.518\n451.648\n\n\n6\nœÉ\nitem\nprec: maintain\n179.493\n315.411\n\n\n7\nœÅ\nitem\n(Intercept), prec: maintain\n-0.901833\n-0.47136\n\n\n8\nœÉ\nsubj\n(Intercept)\n236.684\n360.362\n\n\n9\nœÉ\nresidual\nmissing\n657.178\n702.739\n\n\n\n\n\n\n\nVarCorr(m4)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nitem\n(Intercept)\n133015.242\n364.713\n\n\n\n\nprec: maintain\n63766.935\n252.521\n-0.70\n\n\nsubj\n(Intercept)\n88819.438\n298.026\n\n\n\nResidual\n\n462443.388\n680.032\n\n\n\n\n\n\n\n\nCode\nlet mods = [m1, m2, m4]\n  DataFrame(;\n    geomdof=(sum ‚àò leverage).(mods),\n    npar=dof.(mods),\n    deviance=deviance.(mods),\n    AIC=aic.(mods),\n    BIC=bic.(mods),\n    AICc=aicc.(mods),\n  )\nend\n\n\n3√ó6 DataFrame\n\n\n\nRow\ngeomdof\nnpar\ndeviance\nAIC\nBIC\nAICc\n\n\n\nFloat64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n131.391\n29\n28637.1\n28695.1\n28854.3\n28696.1\n\n\n2\n107.543\n13\n28658.5\n28684.5\n28755.8\n28684.7\n\n\n3\n103.478\n9\n28663.9\n28681.9\n28731.3\n28682.0\n\n\n\n\n\n\n\nscatter(fitted(m4), residuals(m4))\n\n\n\n\n\n\nFigure¬†5: Residuals versus fitted values for model m4\n\n\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.",
    "crumbs": [
      "Visualizations and diagnostics",
      "More on shrinkage plots"
    ]
  },
  {
    "objectID": "sleepstudy.html",
    "href": "sleepstudy.html",
    "title": "Analysis of the sleepstudy data",
    "section": "",
    "text": "The sleepstudy data are from a study of the effects of sleep deprivation on response time reported in Balkin et al. (2000) and in Belenky et al. (2003). Eighteen subjects were allowed only 3 hours of time to sleep each night for 9 successive nights. Their reaction time was measured each day, starting the day before the first night of sleep deprivation, when the subjects were on their regular sleep schedule.\n\n\n\n\n\n\nNote\n\n\n\nThis description is inaccurate. In fact the first two days were acclimatization, the third was a baseline and sleep deprivation was only enforced after day 2. To allow for comparison with earlier analyses of these data we retain the old data description for this notebook only.\n\n\n\n1 Loading the data\nFirst attach the MixedModels package and other packages for plotting. The CairoMakie package allows the Makie graphics system (Danisch & Krumbiegel, 2021) to generate high quality static images. Activate that package with the SVG (Scalable Vector Graphics) backend.\n\n\nCode\nusing AlgebraOfGraphics\nusing CairoMakie       # graphics back-end\nusing DataFrames\nusing KernelDensity    # density estimation\nusing MixedModels\nusing MixedModelsMakie # diagnostic plots\nusing Random           # random number generators\nusing RCall            # call R from Julia\nusing MixedModelsMakie: simplelinreg\nusing SMLP2025: dataset\n\n\nThe sleepstudy data are one of the datasets available with the MixedModels package. It is re-exported by the SMLP2025 package‚Äôs dataset function.\n\nsleepstudy = DataFrame(dataset(\"sleepstudy\"))\n\n180√ó3 DataFrame155 rows omitted\n\n\n\nRow\nsubj\ndays\nreaction\n\n\n\nString\nInt8\nFloat64\n\n\n\n\n1\nS308\n0\n249.56\n\n\n2\nS308\n1\n258.705\n\n\n3\nS308\n2\n250.801\n\n\n4\nS308\n3\n321.44\n\n\n5\nS308\n4\n356.852\n\n\n6\nS308\n5\n414.69\n\n\n7\nS308\n6\n382.204\n\n\n8\nS308\n7\n290.149\n\n\n9\nS308\n8\n430.585\n\n\n10\nS308\n9\n466.353\n\n\n11\nS309\n0\n222.734\n\n\n12\nS309\n1\n205.266\n\n\n13\nS309\n2\n202.978\n\n\n‚ãÆ\n‚ãÆ\n‚ãÆ\n‚ãÆ\n\n\n169\nS371\n8\n350.781\n\n\n170\nS371\n9\n369.469\n\n\n171\nS372\n0\n269.412\n\n\n172\nS372\n1\n273.474\n\n\n173\nS372\n2\n297.597\n\n\n174\nS372\n3\n310.632\n\n\n175\nS372\n4\n287.173\n\n\n176\nS372\n5\n329.608\n\n\n177\nS372\n6\n334.482\n\n\n178\nS372\n7\n343.22\n\n\n179\nS372\n8\n369.142\n\n\n180\nS372\n9\n364.124\n\n\n\n\n\n\nFigure¬†1 displays the data in a multi-panel plot created with the lattice package in R (Sarkar, 2008), using RCall.jl.\n\n\nCode\nlet f = Figure(; size=(700, 400))\n  yrange = maximum(sleepstudy.reaction) - minimum(sleepstudy.reaction)\n  xrange = maximum(sleepstudy.days) - minimum(sleepstudy.days)\n  \n  reg = combine(groupby(sleepstudy, :subj), \n                [:days, :reaction] =&gt; NamedTuple{(:intercept, :slope)} ‚àò simplelinreg =&gt; AsTable)\n  sort!(reg, :intercept)\n\n  # order of grid positions to plot the facets in\n  gridpos = Dict{String, NTuple{2,Int}}()\n  for (i, subj) in enumerate(reg.subj)\n    gridpos[subj] = fldmod1(i, 9)\n  end\n  gridpos\n\n   axes = Axis[]\n\n  # set up all the axes and plot the simple regression lines\n  for row in eachrow(reg)\n    pos = gridpos[row.subj]\n    ax = Axis(f[pos...]; title=row.subj, \n              autolimitaspect=xrange/yrange)\n    if pos[1] == 1\n      hidexdecorations!(ax; grid=false, ticks=false)\n    end\n    if pos[2] != 1\n      hideydecorations!(ax; grid=false, ticks=true)\n    end\n    push!(axes, ax)\n    ablines!(ax, row.intercept, row.slope)\n  end\n\n  # scatter plot in each facet\n  for (grouping, gdf) in pairs(groupby(sleepstudy, :subj))\n    pos = gridpos[grouping.subj]\n    scatter!(f[pos...], gdf.days, gdf.reaction)\n  end\n  Label(f[end+1, :], \"Days of sleep deprivation\"; \n        tellwidth=false, tellheight=true)\n  Label(f[:, 0], \"Average reaction time (ms)\"; \n        tellwidth=true, tellheight=false, rotation=pi/2)\n  \n  linkaxes!(axes...)\n\n  # tweak the layout a little\n  rowgap!(f.layout, 0)\n  colgap!(f.layout, 3)\n  colsize!(f.layout, 0, 25)\n  rowsize!(f.layout, 1, 100)\n  rowsize!(f.layout, 2, 100)\n  rowsize!(f.layout, 3, 25)\n  f\nend\n\n\n\n\n\n\n\nFigure¬†1: Average response time versus days of sleep deprivation by subject\n\n\n\n\nEach panel shows the data from one subject and a line fit by least squares to that subject‚Äôs data. Starting at the lower left panel and proceeding across rows, the panels are ordered by increasing intercept of the least squares line.\nThere are some deviations from linearity within the panels but the deviations are neither substantial nor systematic.\n\n\n2 Fitting an initial model\n\ncontrasts = Dict{Symbol,Any}(:subj =&gt; Grouping())\nm1 = let f = @formula(reaction ~ 1 + days + (1 + days | subj))\n  fit(MixedModel, f, sleepstudy; contrasts)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n251.4051\n6.6323\n37.91\n&lt;1e-99\n23.7805\n\n\ndays\n10.4673\n1.5022\n6.97\n&lt;1e-11\n5.7168\n\n\nResidual\n25.5918\n\n\n\n\n\n\n\n\n\nThis model includes fixed effects for the intercept, representing the typical reaction time at the beginning of the experiment with zero days of sleep deprivation, and the slope w.r.t. days of sleep deprivation. The parameter estimates are about 250 ms. typical reaction time without deprivation and a typical increase of 10.5 ms. per day of sleep deprivation.\nThe random effects represent shifts from the typical behavior for each subject. The shift in the intercept has a standard deviation of about 24 ms. which would suggest a range of about 200 ms. to 300 ms. in the intercepts. Similarly within-subject slopes would be expected to have a range of about 0 ms./day up to 20 ms./day.\nThe random effects for the slope and for the intercept are allowed to be correlated within subject. The estimated correlation, 0.08, is small. This estimate is not shown in the default display above but is shown in the output from VarCorr (variance components and correlations).\n\nVarCorr(m1)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nsubj\n(Intercept)\n565.51065\n23.78047\n\n\n\n\ndays\n32.68212\n5.71683\n+0.08\n\n\nResidual\n\n654.94145\n25.59182\n\n\n\n\n\n\nTechnically, the random effects for each subject are unobserved random variables and are not ‚Äúparameters‚Äù in the model per se. Hence we do not report standard errors or confidence intervals for these deviations. However, we can produce prediction intervals on the random effects for each subject. Because the experimental design is balanced, these intervals will have the same width for all subjects.\nA plot of the prediction intervals versus the level of the grouping factor (subj, in this case) is sometimes called a caterpillar plot because it can look like a fuzzy caterpillar if there are many levels of the grouping factor. By default, the levels of the grouping factor are sorted by increasing value of the first random effect.\n\n\nCode\ncaterpillar(m1; vline_at_zero=true)\n\n\n\n\n\n\n\nFigure¬†2: Prediction intervals on random effects for model m1\n\n\n\n\nFigure¬†2 reinforces the conclusion that there is little correlation between the random effect for intercept and the random effect for slope.\n\n\n3 A model with uncorrelated random effects\nThe zerocorr function applied to a random-effects term creates uncorrelated vector-valued per-subject random effects.\n\nm2 = let f = @formula reaction ~ 1 + days + zerocorr(1 + days | subj)\n  fit(MixedModel, f, sleepstudy; contrasts)\nend\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n251.4051\n6.7077\n37.48\n&lt;1e-99\n24.1714\n\n\ndays\n10.4673\n1.5193\n6.89\n&lt;1e-11\n5.7994\n\n\nResidual\n25.5561\n\n\n\n\n\n\n\n\n\nAgain, the default display doesn‚Äôt show that there is no correlation parameter to be estimated in this model, but the VarCorr display does.\n\nVarCorr(m2)\n\n\n\n\n\nColumn\nVariance\nStd.Dev\nCorr.\n\n\nsubj\n(Intercept)\n584.25897\n24.17145\n\n\n\n\ndays\n33.63281\n5.79938\n.\n\n\nResidual\n\n653.11578\n25.55613\n\n\n\n\n\n\nThis model has a slightly lower log-likelihood than does m1 and one fewer parameter than m1. A likelihood-ratio test can be used to compare these nested models.\n\nMixedModels.likelihoodratiotest(m2, m1)\n\n\n\n\n\nmodel-dof\ndeviance\nœá¬≤\nœá¬≤-dof\nP(&gt;œá¬≤)\n\n\nreaction ~ 1 + days + zerocorr(1 + days | subj)\n5\n1752\n\n\n\n\n\nreaction ~ 1 + days + (1 + days | subj)\n6\n1752\n0\n1\n0.8004\n\n\n\n\n\nAlternatively, the AIC or BIC values can be compared.\n\n\nCode\nlet mods = [m2, m1]\n  Table(;\n    model=[:m2, :m1],\n    pars=dof.(mods),\n    geomdof=(sum ‚àò leverage).(mods),\n    AIC=aic.(mods),\n    BIC=bic.(mods),\n    AICc=aicc.(mods),\n  )\nend\n\n\nTable with 6 columns and 2 rows:\n     model  pars  geomdof  AIC      BIC      AICc\n   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1 ‚îÇ m2     5     29.045   1762.0   1777.97  1762.35\n 2 ‚îÇ m1     6     28.6115  1763.94  1783.1   1764.42\n\n\nThe goodness of fit measures: AIC, BIC, and AICc, are all on a ‚Äúsmaller is better‚Äù scale and, hence, they all prefer m2.\nThe pars column, which is the same as the model-dof column in the likelihood ratio test output, is simply a count of the number of parameters to be estimated when fitting the model. For example, in m2 there are two fixed-effects parameters and three variance components (including the residual variance).\nAn alternative, more geometrically inspired definition of ‚Äúdegrees of freedom‚Äù, is the sum of the leverage values, called geomdof in this table.\nInterestingly, the model with fewer parameters, m2, has a greater sum of the leverage values than the model with more parameters, m1. We‚Äôre not sure what to make of that.\nIn both cases the sum of the leverage values is toward the upper end of the range of possible values, which is the rank of the fixed-effects model matrix (2) up to the rank of the fixed-effects plus the random effects model matrix (2 + 36 = 38).\n\n\n\n\n\n\nNote\n\n\n\nI think that the upper bound may be 36, not 38, because the two columns of X lie in the column span of Z\n\n\nThis comparison does show, however, that a simple count of the parameters in a mixed-effects model can underestimate, sometimes drastically, the model complexity. This is because a single variance component or multiple components can add many dimensions to the linear predictor.\n\n\n4 Some diagnostic plots\nIn mixed-effects models the linear predictor expression incorporates fixed-effects parameters, which summarize trends for the population or certain well-defined subpopulations, and random effects which represent deviations associated with the experimental units or observational units - individual subjects, in this case. The random effects are modeled as unobserved random variables.\nThe conditional means of these random variables, sometimes called the BLUPs or Best Linear Unbiased Predictors, are not simply the least squares estimates. They are attenuated or shrunk towards zero to reflect the fact that the individuals are assumed to come from a population. A shrinkage plot, Figure¬†3, shows the BLUPs from the model fit compared to the values without any shrinkage. If the BLUPs are similar to the unshrunk values then the more complicated model accounting for individual differences is supported. If the BLUPs are strongly shrunk towards zero then the additional complexity in the model to account for individual differences is not providing sufficient increase in fidelity to the data to warrant inclusion.\n\n\nCode\nshrinkageplot!(Figure(; resolution=(500, 500)), m1)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†3: Shrinkage plot of means of the random effects in model m1\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis plot could be drawn as shrinkageplot(m1). The reason for explicitly creating a Figure to be modified by shrinkageplot! is to control the resolution.\n\n\nThis plot shows an intermediate pattern. The random effects are somewhat shrunk toward the origin, a model simplification trend, but not completely shrunk - indicating that fidelity to the data is enhanced with these additional coefficients in the linear predictor.\nIf the shrinkage were primarily in one direction - for example, if the arrows from the unshrunk values to the shrunk values were mostly in the vertical direction - then we would get an indication that we could drop the random effect for slope and revert to a simpler model. This is not the case here.\nAs would be expected, the unshrunk values that are further from the origin tend to be shrunk more toward the origin. That is, the arrows that originate furthest from the origin are longer. However, that is not always the case. The arrow in the upper right corner, from S337, is relatively short. Examination of the panel for S337 in the data plot shows a strong linear trend, even though both the intercept and the slope are unusually large. The neighboring panels in the data plot, S330 and S331, have more variability around the least squares line and are subject to a greater amount of shrinkage in the model. (They correspond to the two arrows on the right hand side of the figure around -5 on the vertical scale.)\n\n\n5 Assessing variability by bootstrapping\nThe speed of fitting linear mixed-effects models using MixedModels.jl allows for using simulation-based approaches to inference instead of relying on approximate standard errors. A parametric bootstrap sample for model m is a collection of models of the same form as m fit to data values simulated from m. That is, we pretend that m and its parameter values are the true parameter values, simulate data from these values, and estimate parameters from the simulated data.\nSimulating and fitting a substantial number of model fits, 5000 in this case, takes only a few seconds, following which we extract a data frame of the parameter estimates and plot densities of some of these estimates.\n\nrng = Random.seed!(42)    # initialize a random number generator\nm1bstp = parametricbootstrap(rng, 5000, m1)\ntbl = m1bstp.tbl\n\nTable with 10 columns and 5000 rows:\n      obj      Œ≤1       Œ≤2       œÉ        œÉ1       œÉ2       œÅ1          ‚ãØ\n    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1  ‚îÇ 1717.29  260.712  9.84975  23.4092  15.3314  6.40292  -0.0259483  ‚ãØ\n 2  ‚îÇ 1744.06  262.253  12.3008  25.7047  16.3186  5.54691  0.552569    ‚ãØ\n 3  ‚îÇ 1714.16  253.149  12.879   22.2753  25.4787  6.1444   0.0691544   ‚ãØ\n 4  ‚îÇ 1711.54  263.376  11.5798  23.3128  18.8039  4.65569  0.103361    ‚ãØ\n 5  ‚îÇ 1741.66  248.429  9.39444  25.4355  20.1412  5.27358  -0.163606   ‚ãØ\n 6  ‚îÇ 1754.81  256.794  8.024    26.5088  10.6781  7.14155  0.335447    ‚ãØ\n 7  ‚îÇ 1777.73  253.388  8.83556  27.8623  17.8325  7.17386  0.00379005  ‚ãØ\n 8  ‚îÇ 1768.59  254.441  11.4479  27.4033  16.2484  6.67057  0.725411    ‚ãØ\n 9  ‚îÇ 1753.56  244.906  11.3423  25.6046  25.3607  5.98654  -0.171821   ‚ãØ\n 10 ‚îÇ 1722.61  257.088  9.18397  23.3386  24.9274  5.18012  0.181143    ‚ãØ\n 11 ‚îÇ 1738.16  251.262  11.6568  25.7823  17.6663  4.07215  0.258142    ‚ãØ\n 12 ‚îÇ 1747.76  258.302  12.8015  26.1083  19.2395  5.06103  0.879669    ‚ãØ\n 13 ‚îÇ 1745.91  254.57   11.8062  24.8863  24.2513  6.14642  0.0126995   ‚ãØ\n 14 ‚îÇ 1738.8   251.179  10.3226  24.2672  23.7195  6.32645  0.368592    ‚ãØ\n 15 ‚îÇ 1724.76  238.603  11.5045  25.2301  19.026   3.64035  -0.346558   ‚ãØ\n 16 ‚îÇ 1777.7   254.133  8.26397  26.9846  26.3715  7.8283   -0.288773   ‚ãØ\n 17 ‚îÇ 1748.33  251.571  9.5294   26.2927  21.9611  4.31316  -0.150104   ‚ãØ\n ‚ãÆ  ‚îÇ    ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ        ‚ãÆ         ‚ãÆ       ‚ã±\n\n\nAn empirical density plot of the estimates for the fixed-effects coefficients, Figure¬†4, shows the normal distribution, ‚Äúbell-curve‚Äù, shape as we might expect.\n\n\nCode\nbegin\n  f1 = Figure(; resolution=(1000, 400))\n  CairoMakie.density!(\n    Axis(f1[1, 1]; xlabel=\"Intercept [ms]\"), tbl.Œ≤1\n  )\n  CairoMakie.density!(\n    Axis(f1[1, 2]; xlabel=\"Coefficient of days [ms/day]\"),\n    tbl.Œ≤2\n  )\n  f1\nend\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†4: Empirical density plots of bootstrap replications of fixed-effects parameter estimates\n\n\n\n\nIt is also possible to create interval estimates of the parameters from the bootstrap replicates. We define the 1-Œ± shortestcovint to be the shortest interval that contains a proportion 1-Œ± (defaults to 95%) of the bootstrap estimates of the parameter.\n\nTable(shortestcovint(m1bstp))\n\nTable with 5 columns and 6 rows:\n     type  group     names              lower     upper\n   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n 1 ‚îÇ Œ≤     missing   (Intercept)        238.982   264.803\n 2 ‚îÇ Œ≤     missing   days               7.42347   13.1628\n 3 ‚îÇ œÉ     subj      (Intercept)        10.1291   33.3852\n 4 ‚îÇ œÉ     subj      days               2.95891   7.68714\n 5 ‚îÇ œÅ     subj      (Intercept), days  -0.40669  1.0\n 6 ‚îÇ œÉ     residual  missing            22.8402   28.626\n\n\nThe intervals look reasonable except that the upper end point of the interval for œÅ1, the correlation coefficient, is 1.0 . It turns out that the estimates of œÅ have a great deal of variability.\nBecause there are several values on the boundary (œÅ = 1.0) and a pulse like this is not handled well by a density plot, we plot this sample as a histogram, Figure¬†5.\n\n\nCode\nhist(\n  tbl.œÅ1;\n  bins=40,\n  axis=(; xlabel=\"Estimated correlation of the random effects\"),\n  figure=(; resolution=(500, 500)),\n)\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†5: Histogram of bootstrap replications of the within-subject correlation parameter\n\n\n\n\nFinally, density plots for the variance components (but on the scale of the standard deviation), Figure¬†6, show reasonable symmetry.\n\n\nCode\nbegin\n  f2 = Figure(; resolution=(1000, 300))\n  CairoMakie.density!(\n    Axis(f2[1, 1]; xlabel=\"Residual œÉ\"),\n    tbl.œÉ,\n  )\n  CairoMakie.density!(\n    Axis(f2[1, 2]; xlabel=\"subj-Intercept œÉ\"),\n    tbl.œÉ1,\n  )\n  CairoMakie.density!(\n    Axis(f2[1, 3]; xlabel=\"subj-slope œÉ\"),\n    tbl.œÉ2,\n  )\n  f2\nend\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†6: Empirical density plots of bootstrap replicates of standard deviation estimates\n\n\n\n\nThe estimates of the coefficients, Œ≤‚ÇÅ and Œ≤‚ÇÇ, are not highly correlated as shown in a scatterplot of the bootstrap estimates, Figure¬†7 .\n\nvcov(m1; corr=true)  # correlation estimate from the model\n\n2√ó2 Matrix{Float64}:\n  1.0       -0.137545\n -0.137545   1.0\n\n\n\n\nCode\nlet\n  scatter(\n    tbl.Œ≤1, tbl.Œ≤2,\n    color=(:blue, 0.20),\n    axis=(; xlabel=\"Intercept\", ylabel=\"Coefficient of days\"),\n    figure=(; resolution=(500, 500)),\n  )\n  contour!(kde((tbl.Œ≤1, tbl.Œ≤2)))\n  current_figure()\nend\n\n\n\n‚îå Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n‚îî @ Makie ~/.julia/packages/Makie/Y3ABD/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nFigure¬†7: Scatter-plot of bootstrap replicates of fixed-effects estimates with contours\n\n\n\n\n\n\n6 References\n\n\nBalkin, T., Thome, D., Sing, H., Thomas, M., Redmond, D., Wesensten, N., Williams, J., Hall, S., & Belenky, G. (2000). Effects of sleep schedules on commercial motor vehicle driver performance (DOT-MC-00-133). Federal Motor Carrier Safety Administration. https://doi.org/10.21949/1503015.\n\n\nBelenky, G., Wesensten, N. J., Thorne, D. R., Thomas, M. L., Sing, H. C., Redmond, D. P., Russo, M. B., & Balkin, T. J. (2003). Patterns of performance degradation and restoration during sleep restriction and subsequent recovery: A sleep dose-response study. Journal of Sleep Research, 12(1), 1‚Äì12. https://doi.org/10.1046/j.1365-2869.2003.00337.x\n\n\nDanisch, S., & Krumbiegel, J. (2021). Makie.jl: Flexible high-performance data visualization for julia. Journal of Open Source Software, 6(65), 3349. https://doi.org/10.21105/joss.03349\n\n\nSarkar, D. (2008). Lattice: Mutivariate data visualization with r. Springer-Verlag GmbH. https://www.ebook.de/de/product/11429038/deepayan_sarkar_lattice.html\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.\n\n\n\n\n Back to top",
    "crumbs": [
      "Worked examples",
      "Analysis of the sleepstudy data"
    ]
  },
  {
    "objectID": "transformation.html",
    "href": "transformation.html",
    "title": "Transformations of the predictors and the response",
    "section": "",
    "text": "When dealing with categorical variables, the choice of contrast coding impacts the interpretation of the coefficients of the fitted model but does not impact the predictions made by the model nor its general goodness of it. If we apply linear transformations to our predictors, then we see a similar pattern for continuous variables.\nFor example, in a model with age (in years) as a predictor, the untransformed variable yields a model where the intercept corresponds to age = 0, i.e.¬†a newborn. For a typical experiment with young adult participants, this presents a few challenges in interpretation:\n\nnewborns are widely outside the range of the observed data, so it seems problematic prima facie to interpret the estimated results for a value so far outside the range of the observed data\nwe know that newborns and young adults are widely different and that the effect of age across childhood on most psychological and biological phenomena is not linear. For example, children do not grow at a constant rate from birth until adulthood.\n\nBeyond centering a variable so that the center reflects an interpretable hypothesis, we may also want to scale a variable to move towards more easily interpretable units. For example, it is common to express things in terms of standard deviations instead of raw units ‚Äì combined with centering, this yields \\(z\\)-scoring .\nIn addition to placing some variables on a more interpretable scale, \\(z\\)-scoring can be used across all continuous predictors to place them all on a single, common scale. The advantage to shared scale across all continuous predictors is that the magnitude of coefficient estimates are directly comparable. The disadvantage is that the natural units are lost, especially when the natural units are directly interpretable (e.g.¬†milliseconds, grams, etc.).\n\n\n\n\n\n\nNonlinear transformations\n\n\n\n\n\nThere are also other possible nonlinear transformation, such as the logarithm or various polynomials, but we will leave this alone. Nonlinear transformation change the predictions of the model (in addition to changing the interpretation of the associated coefficients) and should be appropriately motivated by the data and theory.\n\n\n\nIn other words, from an interpretability standpoint, many continuous variables require just as much attention to their ‚Äúcoding‚Äù as categorical variables do.\n\n\n\n\n\n\nScaling can also help numerical aspects of model fitting\n\n\n\n\n\nFrom a practical perspective, linear transformations of the predicots may also make model fitting easier. In an abstract mathematical sense, the scale of the variables does not matter, but computers and hence our software exist in a less idealized realm. In an intuitive sense, we can think of rounding error ‚Äì if we are dealing with quantities on widely different scales, then the quantities on the larger scale will tend to dominate the quantities on the smaller scale. This is why many guides on how to deal with convergence issues suggest scaling your variables.\n\n\n\nIn Julia, the package StandardizedPredictors.jl takes advantage of this parallel between linear transformations and contrast coding and allows you to specify centering, scaling and \\(z\\)-transformations as part of the contrast specification.\nWe‚Äôll also be using the Effects.jl package to demonstrate that these transformation do not change the model predictions.\n\nusing DataFrames\nusing Effects\nusing MixedModels\nusing StandardizedPredictors\nusing SMLP2025: dataset\n\n\nslp = fit(MixedModel, \n          @formula(reaction ~ 1 + days + (1 + days |subj)),\n          dataset(:sleepstudy))\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n251.4051\n6.6323\n37.91\n&lt;1e-99\n23.7805\n\n\ndays\n10.4673\n1.5022\n6.97\n&lt;1e-11\n5.7168\n\n\nResidual\n25.5918\n\n\n\n\n\n\n\n\n\n\ndays_centered = fit(MixedModel, \n                    @formula(reaction ~ 1 + days + (1 + days |subj)),\n                    dataset(:sleepstudy);\n                    contrasts=Dict(:days =&gt; Center()))\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n298.5079\n8.7950\n33.94\n&lt;1e-99\n36.4260\n\n\ndays(centered: 4.5)\n10.4673\n1.5022\n6.97\n&lt;1e-11\n5.7168\n\n\nResidual\n25.5919\n\n\n\n\n\n\n\n\n\nIf we look at the log-likelihood, AIC, BIC, etc. of these two models, we see that they are the same:\n\nmods = [slp, days_centered]\nDataFrame(; model=[\"original\", \"centered\"], \n          AIC=aic.(mods),\n          AICc=aicc.(mods),\n          BIC=bic.(mods), \n          logLik=loglikelihood.(mods))\n\n2√ó5 DataFrame\n\n\n\nRow\nmodel\nAIC\nAICc\nBIC\nlogLik\n\n\n\nString\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\noriginal\n1763.94\n1764.42\n1783.1\n-875.97\n\n\n2\ncentered\n1763.94\n1764.42\n1783.1\n-875.97\n\n\n\n\n\n\nWe can also see that models make identical predictions. The Effects package will compute predictions and estimated errors at a predefined grid. For more complicated models, we can also use the package to compute ‚Äútypical‚Äù values, such as the mean, median or mode, for variables that we wish to ignore. We don‚Äôt need to worry about that right now, since we only have one non-intercept predictor.\n\n# a fully crossed grid is computed from the elements of `design`.\n# this is similar to how `expand.grid` works in R.\ndesign = Dict(:days =&gt; [1, 4, 9])\neffects(design, slp; level=0.95)\n\n3√ó5 DataFrame\n\n\n\nRow\ndays\nreaction\nerr\nlower\nupper\n\n\n\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\n261.872\n6.59566\n248.945\n274.8\n\n\n2\n4\n293.274\n8.31451\n276.978\n309.57\n\n\n3\n9\n345.611\n14.2167\n317.747\n373.475\n\n\n\n\n\n\n\neffects(design, days_centered; level=0.95)\n\n3√ó5 DataFrame\n\n\n\nRow\ndays\nreaction\nerr\nlower\nupper\n\n\n\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\n261.872\n6.59563\n248.945\n274.8\n\n\n2\n4\n293.274\n8.31455\n276.978\n309.57\n\n\n3\n9\n345.611\n14.2167\n317.746\n373.475\n\n\n\n\n\n\nIf this sounds like effects or emmeans in R, that‚Äôs because there is a large overlap.",
    "crumbs": [
      "Contrast coding and transformations",
      "Transformations of the predictors and the response"
    ]
  },
  {
    "objectID": "transformation.html#predictors",
    "href": "transformation.html#predictors",
    "title": "Transformations of the predictors and the response",
    "section": "",
    "text": "When dealing with categorical variables, the choice of contrast coding impacts the interpretation of the coefficients of the fitted model but does not impact the predictions made by the model nor its general goodness of it. If we apply linear transformations to our predictors, then we see a similar pattern for continuous variables.\nFor example, in a model with age (in years) as a predictor, the untransformed variable yields a model where the intercept corresponds to age = 0, i.e.¬†a newborn. For a typical experiment with young adult participants, this presents a few challenges in interpretation:\n\nnewborns are widely outside the range of the observed data, so it seems problematic prima facie to interpret the estimated results for a value so far outside the range of the observed data\nwe know that newborns and young adults are widely different and that the effect of age across childhood on most psychological and biological phenomena is not linear. For example, children do not grow at a constant rate from birth until adulthood.\n\nBeyond centering a variable so that the center reflects an interpretable hypothesis, we may also want to scale a variable to move towards more easily interpretable units. For example, it is common to express things in terms of standard deviations instead of raw units ‚Äì combined with centering, this yields \\(z\\)-scoring .\nIn addition to placing some variables on a more interpretable scale, \\(z\\)-scoring can be used across all continuous predictors to place them all on a single, common scale. The advantage to shared scale across all continuous predictors is that the magnitude of coefficient estimates are directly comparable. The disadvantage is that the natural units are lost, especially when the natural units are directly interpretable (e.g.¬†milliseconds, grams, etc.).\n\n\n\n\n\n\nNonlinear transformations\n\n\n\n\n\nThere are also other possible nonlinear transformation, such as the logarithm or various polynomials, but we will leave this alone. Nonlinear transformation change the predictions of the model (in addition to changing the interpretation of the associated coefficients) and should be appropriately motivated by the data and theory.\n\n\n\nIn other words, from an interpretability standpoint, many continuous variables require just as much attention to their ‚Äúcoding‚Äù as categorical variables do.\n\n\n\n\n\n\nScaling can also help numerical aspects of model fitting\n\n\n\n\n\nFrom a practical perspective, linear transformations of the predicots may also make model fitting easier. In an abstract mathematical sense, the scale of the variables does not matter, but computers and hence our software exist in a less idealized realm. In an intuitive sense, we can think of rounding error ‚Äì if we are dealing with quantities on widely different scales, then the quantities on the larger scale will tend to dominate the quantities on the smaller scale. This is why many guides on how to deal with convergence issues suggest scaling your variables.\n\n\n\nIn Julia, the package StandardizedPredictors.jl takes advantage of this parallel between linear transformations and contrast coding and allows you to specify centering, scaling and \\(z\\)-transformations as part of the contrast specification.\nWe‚Äôll also be using the Effects.jl package to demonstrate that these transformation do not change the model predictions.\n\nusing DataFrames\nusing Effects\nusing MixedModels\nusing StandardizedPredictors\nusing SMLP2025: dataset\n\n\nslp = fit(MixedModel, \n          @formula(reaction ~ 1 + days + (1 + days |subj)),\n          dataset(:sleepstudy))\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n251.4051\n6.6323\n37.91\n&lt;1e-99\n23.7805\n\n\ndays\n10.4673\n1.5022\n6.97\n&lt;1e-11\n5.7168\n\n\nResidual\n25.5918\n\n\n\n\n\n\n\n\n\n\ndays_centered = fit(MixedModel, \n                    @formula(reaction ~ 1 + days + (1 + days |subj)),\n                    dataset(:sleepstudy);\n                    contrasts=Dict(:days =&gt; Center()))\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n298.5079\n8.7950\n33.94\n&lt;1e-99\n36.4260\n\n\ndays(centered: 4.5)\n10.4673\n1.5022\n6.97\n&lt;1e-11\n5.7168\n\n\nResidual\n25.5919\n\n\n\n\n\n\n\n\n\nIf we look at the log-likelihood, AIC, BIC, etc. of these two models, we see that they are the same:\n\nmods = [slp, days_centered]\nDataFrame(; model=[\"original\", \"centered\"], \n          AIC=aic.(mods),\n          AICc=aicc.(mods),\n          BIC=bic.(mods), \n          logLik=loglikelihood.(mods))\n\n2√ó5 DataFrame\n\n\n\nRow\nmodel\nAIC\nAICc\nBIC\nlogLik\n\n\n\nString\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\noriginal\n1763.94\n1764.42\n1783.1\n-875.97\n\n\n2\ncentered\n1763.94\n1764.42\n1783.1\n-875.97\n\n\n\n\n\n\nWe can also see that models make identical predictions. The Effects package will compute predictions and estimated errors at a predefined grid. For more complicated models, we can also use the package to compute ‚Äútypical‚Äù values, such as the mean, median or mode, for variables that we wish to ignore. We don‚Äôt need to worry about that right now, since we only have one non-intercept predictor.\n\n# a fully crossed grid is computed from the elements of `design`.\n# this is similar to how `expand.grid` works in R.\ndesign = Dict(:days =&gt; [1, 4, 9])\neffects(design, slp; level=0.95)\n\n3√ó5 DataFrame\n\n\n\nRow\ndays\nreaction\nerr\nlower\nupper\n\n\n\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\n261.872\n6.59566\n248.945\n274.8\n\n\n2\n4\n293.274\n8.31451\n276.978\n309.57\n\n\n3\n9\n345.611\n14.2167\n317.747\n373.475\n\n\n\n\n\n\n\neffects(design, days_centered; level=0.95)\n\n3√ó5 DataFrame\n\n\n\nRow\ndays\nreaction\nerr\nlower\nupper\n\n\n\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\n261.872\n6.59563\n248.945\n274.8\n\n\n2\n4\n293.274\n8.31455\n276.978\n309.57\n\n\n3\n9\n345.611\n14.2167\n317.746\n373.475\n\n\n\n\n\n\nIf this sounds like effects or emmeans in R, that‚Äôs because there is a large overlap.",
    "crumbs": [
      "Contrast coding and transformations",
      "Transformations of the predictors and the response"
    ]
  },
  {
    "objectID": "transformation.html#response",
    "href": "transformation.html#response",
    "title": "Transformations of the predictors and the response",
    "section": "2 Response",
    "text": "2 Response\nIn addition to transforming the predictors, we can also consider transforming the response (dependent variable). There are many different common possibilities ‚Äì the log, the inverse/reciprocal, or even the square root ‚Äì and it can be difficult to choose an appropriate one. For non-negative response (e.g., reaction time in many experiences), Box & Cox (1964) figured out a generalization that subsumes all of these possibilities:\n\\[\n\\begin{cases}\n\\frac{y^{\\lambda} - 1}{\\lambda} &\\quad \\lambda \\neq 0 \\\\\n\\log y &\\quad \\lambda = 0\n\\end{cases}\n\\]\nOur task is thus finding the appropriate \\(\\lambda\\) such that the conditional distribution is as normal as possible. In other words, we need to find \\(\\lambda\\) that results in the residuals are as normal as possible. I‚Äôve emphasized conditional distribution and residuals because that‚Äôs where the normality assumption actually lies in the linear (mixed) model. The assumption is not that the response y, i.e.¬†the uncondidtional distribution, is normally distributed, but rather that the residuals are normally distributed. In other words, we can only check the quality of a given \\(\\lambda\\) by fitting a model to the transformed response. Fortunately, BoxCox.jl makes this easy.\nThe fit function takes two arguments: - the transformation to be fit (i.e.¬†BoxCoxTransformation) - the model fit to the original data\n\nusing BoxCox\nbc = fit(BoxCoxTransformation, slp)\n\nBox-Cox transformation\n\nestimated Œª: -1.0747\nresultant transformation:\n\n y^-1.1 - 1\n------------\n    -1.1\n\n\n\nFor large models, fitting the BoxCoxTransformation can take a while because a mixed model must be repeatedly fit after each intermediate transformation.\n\nAlthough we receive a single ‚Äúbest‚Äù value (approximately -1.0747) from the fitting process, it is worthwhile to look at the profile likelihood plot for the transformation:\n\n# we need a plotting backend loaded before we can use plotting functionality\n# from BoxCox.jl\nusing CairoMakie\nboxcoxplot(bc; conf_level=0.95)\n\n\n\n\nHere we see that -1 is nearly as good. Moreover, time\\(^{-1}\\) has a natural interpretation as speed. In other words, we can model reaction speed instead of reaction time. Then instead of seeing whether participants take longer to respond with each passing day, we can see whether their speed increases or decreases. In both cases, we‚Äôre looking at whether they respond faster or slower and even the terminology fast and slow suggests that speed is easily interpretable.\nIf we recall the definition of the Box-Cox transformation from above: \\[\n\\begin{cases}\n\\frac{y^{\\lambda} - 1}{\\lambda} &\\quad \\lambda \\neq 0 \\\\\n\\log y &\\quad \\lambda = 0\n\\end{cases}\n\\]\nthen we see that there is a normalizing denominator that flips the sign when \\lambda &lt; 0. If we use the full Box-Cox formula, then the sign of the effect in our transformed and untransformed model remains the same. While useful at times, speed has a natural interpretation and so we instead use the power relation, which is the actual key component, without normalization.\nBecause reaction is stored in milliseconds, we use 1000 / reaction instead of 1 / reaction so that our speed units are responses per second.\n\nmodel_bc = fit(MixedModel,\n               @formula(1000 / reaction ~ 1 + days + (1 + days | subj)),\n                dataset(:sleepstudy))\n\n\n\n\n\nEst.\nSE\nz\np\nœÉ_subj\n\n\n(Intercept)\n3.9658\n0.1056\n37.55\n&lt;1e-99\n0.4190\n\n\ndays\n-0.1110\n0.0151\n-7.37\n&lt;1e-12\n0.0566\n\n\nResidual\n0.2698\n\n\n\n\n\n\n\n\n\nFor our original model on the untransformed scale, the intercept was approximately 250, which means that the average response time was about 250 milliseconds. For the model on the speed scale, we have an intercept about approximately 4, which means that the average response speed is about 4 responses per second, which implies that the the average response time is 250 milliseconds. In other words, our new results are compatible with our previous estimates.\nThis example also makes something else clear: much like transformations of the predictors, transforming the response changes the hypothesis being tested. While it is relatively easy to re-formulate hypothesis about reaction time into hypotheses about speed, it can be harder to re-formulate other hypotheses. For example, a log transformation of the response changes the hypotheses on the original scale from additive effects to multiplicative effects. As a very simple example, consider two observations y1 = 100 and y2 = 1000. On the original scale, there y2 = 10 * y1. But on the \\(\\log_{10}\\) scale, log10(y2) = 1 + log10(y1). In other words: I recommend keeping interpretability of the model in mind before blindly chasing perfectly fulfilling all model assumptions.\nThere are two other little tricks that BoxCox.jl has to offer. First, the fitted transformation will work just like a function:\n\nbc(1000)\n\n0.9299202243766808\n\n\n\nbc.(response(slp))\n\n180-element Vector{Float64}:\n 0.9280071533109451\n 0.9281008004980732\n 0.9280202732761681\n 0.9285950348759796\n 0.9287948232963694\n 0.9290453817984637\n 0.9289143340819649\n 0.9283762261753863\n 0.9291020425612259\n 0.9292149261473703\n ‚ãÆ\n 0.9282383517103107\n 0.9284326403128913\n 0.9285246243376963\n 0.928352836088982\n 0.9286450699122083\n 0.9286737217944607\n 0.9287229751967703\n 0.9288548849797978\n 0.9288308689512543\n\n\nSecond, the decades since the publication of Box & Cox (1964) have seen many proposed extensions to handle that that may not be strictly positive. One such proposal from Yeo & Johnson (2000) is also implemented in BoxCox.jl. The definition of the transformation is:\n\\[\n\\begin{cases} ((y_+1)^\\lambda-1)/\\lambda                      & \\text{if }\\lambda \\neq 0, y \\geq 0 \\\\\n               \\log(y_i + 1)                                   & \\text{if }\\lambda =     0, y \\geq 0 \\\\\n               -((-y_ + 1)^{(2-\\lambda)} - 1) / (2 - \\lambda) &  \\text{if }\\lambda \\neq 2, y &lt;     0 \\\\\n               -\\log(-y_ + 1)                                 &  \\text{if }\\lambda =     2, y &lt;     0\n\\end{cases}\n\\]\nand we can fit it in BoxCox.jl with\n\nyj = fit(YeoJohnsonTransformation, slp)\n\nYeo-Johnson transformation\n\nestimated Œª: -1.0700\np-value: &lt;1e-09\n\nresultant transformation:\n\nFor y ‚â• 0,\n\n (y + 1)^-1.1 - 1\n------------------\n       -1.1\n\n\nFor y &lt; 0:\n\n -((-y + 1)^(2 - -1.1) - 1)\n----------------------------\n         (2 - -1.1)\n\n\n\nf = boxcoxplot(yj; conf_level=0.95)\nf[0, :] = Label(f, \"Yeo-Johnson\"; tellwidth=false)\nf\n\n\n\n\n\n\n\nThis page was rendered from git revision 25df697\n using Quarto 1.7.29.",
    "crumbs": [
      "Contrast coding and transformations",
      "Transformations of the predictors and the response"
    ]
  }
]